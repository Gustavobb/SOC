
entrega2.elf:     file format elf32-littlenios2
entrega2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00020244

Program Header:
    LOAD off    0x00001000 vaddr 0x00020000 paddr 0x00020000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00020020 paddr 0x00020020 align 2**12
         filesz 0x0000f670 memsz 0x0000f670 flags r-x
    LOAD off    0x00011000 vaddr 0x00000000 paddr 0x0002f690 align 2**12
         filesz 0x00001de8 memsz 0x00001f50 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00020000  00020000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000224  00020020  00020020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000f44c  00020244  00020244  00001244  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000002fc  00000000  0002f690  00011000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001aec  000002fc  0002f98c  000112fc  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000168  00001de8  00031478  00012de8  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory_ram 00000000  00001f50  00001f50  00012de8  2**0
                  CONTENTS
  7 .onchip_memory2_0 00000000  00031478  00031478  00012de8  2**0
                  CONTENTS
  8 .comment      00000023  00000000  00000000  00012de8  2**0
                  CONTENTS, READONLY
  9 .debug_aranges 00000ed0  00000000  00000000  00012e10  2**3
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_info   00022d58  00000000  00000000  00013ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_abbrev 00008f5c  00000000  00000000  00036a38  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_line   0000b3cf  00000000  00000000  0003f994  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_frame  000020d4  00000000  00000000  0004ad64  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_str    0000377c  00000000  00000000  0004ce38  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_loc    00017751  00000000  00000000  000505b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_alt_sim_info 00000060  00000000  00000000  00067d08  2**2
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 00001890  00000000  00000000  00067d68  2**3
                  CONTENTS, READONLY, DEBUGGING
 18 .thread_model 00000003  00000000  00000000  0006c732  2**0
                  CONTENTS, READONLY
 19 .cpu          0000000c  00000000  00000000  0006c735  2**0
                  CONTENTS, READONLY
 20 .qsys         00000001  00000000  00000000  0006c741  2**0
                  CONTENTS, READONLY
 21 .simulation_enabled 00000001  00000000  00000000  0006c742  2**0
                  CONTENTS, READONLY
 22 .stderr_dev   0000000b  00000000  00000000  0006c743  2**0
                  CONTENTS, READONLY
 23 .stdin_dev    0000000b  00000000  00000000  0006c74e  2**0
                  CONTENTS, READONLY
 24 .stdout_dev   0000000b  00000000  00000000  0006c759  2**0
                  CONTENTS, READONLY
 25 .sopc_system_name 00000008  00000000  00000000  0006c764  2**0
                  CONTENTS, READONLY
 26 .quartus_project_dir 0000001d  00000000  00000000  0006c76c  2**0
                  CONTENTS, READONLY
 27 .jdi          00004e86  00000000  00000000  0006c789  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     00047bca  00000000  00000000  0007160f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00020000 l    d  .entry	00000000 .entry
00020020 l    d  .exceptions	00000000 .exceptions
00020244 l    d  .text	00000000 .text
00000000 l    d  .rodata	00000000 .rodata
000002fc l    d  .rwdata	00000000 .rwdata
00001de8 l    d  .bss	00000000 .bss
00001f50 l    d  .onchip_memory_ram	00000000 .onchip_memory_ram
00031478 l    d  .onchip_memory2_0	00000000 .onchip_memory2_0
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../entrega2_bsp//obj/HAL/src/crt0.o
0002028c l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 hello_world.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 vfprintf.c
00000042 l     O .rodata	00000010 zeroes.4404
0002271c l     F .text	000000bc __sbprintf
00000052 l     O .rodata	00000010 blanks.4403
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 dtoa.c
0002292c l     F .text	00000200 quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
0002445c l     F .text	00000008 __fp_unlock
00024470 l     F .text	0000019c __sinit.part.1
0002460c l     F .text	00000008 __fp_lock
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
000002fc l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 locale.c
00000740 l     O .rwdata	00000020 lc_ctype_charset
00000720 l     O .rwdata	00000020 lc_message_charset
00000760 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
00000084 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
00026f24 l     F .text	000000fc __sprint_r.part.0
000001b8 l     O .rodata	00000010 blanks.4348
000001a8 l     O .rodata	00000010 zeroes.4349
000284b0 l     F .text	000000bc __sbprintf
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fputwc.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 wcrtomb.c
00000000 l    df *ABS*	00000000 wctomb_r.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_close.c
0002cce8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
0002cdf4 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
0002ce20 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_isatty.c
0002d08c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
0002d16c l     F .text	00000068 alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
0002d258 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
0002d42c l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
00001ddc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_usleep.c
00000000 l    df *ABS*	00000000 alt_write.c
0002d6a8 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
0002d7dc l     F .text	00000034 alt_dev_reg
00000d48 l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
0002dab4 l     F .text	0000020c altera_avalon_jtag_uart_irq
0002dcc0 l     F .text	000000a0 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_busy_sleep.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
0002e5c4 l     F .text	0000003c alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
0002ea38 l     F .text	000000c4 alt_open_fd
00000000 l    df *ABS*	00000000 alt_open.c
0002eb78 l     F .text	0000003c alt_get_errno
0002ebb4 l     F .text	000000c4 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 alt_icache_flush.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00001e24 g     O .bss	00000004 alt_instruction_exception_handler
00026a34 g     F .text	00000074 _mprec_log10
00026b20 g     F .text	0000008c __any_on
00028f08 g     F .text	00000054 _isatty_r
00000090 g     O .rodata	00000028 __mprec_tinytens
0002d368 g     F .text	0000007c alt_main
00001e50 g     O .bss	00000100 alt_irq
00028f5c g     F .text	00000060 _lseek_r
0002f98c g       *ABS*	00000000 __flash_rwdata_start
0002b814 g     F .text	00000088 .hidden __eqdf2
00001f50 g       *ABS*	00000000 __alt_heap_start
000204cc g     F .text	0000003c printf
00029834 g     F .text	0000009c _wcrtomb_r
00026d4c g     F .text	0000005c __sseek
000247ac g     F .text	00000010 __sinit
000296dc g     F .text	00000140 __swbuf_r
00024db8 g     F .text	0000007c _setlocale_r
00024614 g     F .text	00000068 __sfmoreglue
0002d408 g     F .text	00000024 __malloc_unlock
00028fbc g     F .text	0000015c memmove
00024794 g     F .text	00000018 _cleanup
00025bb0 g     F .text	000000a8 _Balloc
00001de8 g     O .bss	00000004 n
0002b89c g     F .text	000000dc .hidden __gtdf2
0002ef70 g     F .text	00000024 altera_nios2_gen2_irq_init
00020000 g     F .entry	0000001c __reset
00001dec g     O .bss	00000004 edge_capture
00020020 g       *ABS*	00000000 __flash_exceptions_start
000289f0 g     F .text	0000005c _fstat_r
00001e08 g     O .bss	00000004 errno
00026cc8 g     F .text	00000008 __seofread
00001e14 g     O .bss	00000004 alt_argv
00009da8 g       *ABS*	00000000 _gp
0002d678 g     F .text	00000030 usleep
00000bc8 g     O .rwdata	00000180 alt_fd_list
0002ef94 g     F .text	00000090 alt_find_dev
00025940 g     F .text	00000148 memcpy
00024464 g     F .text	0000000c _cleanup_r
0002cb00 g     F .text	000000dc .hidden __floatsidf
0002eafc g     F .text	0000007c alt_io_redirect
0002b978 g     F .text	000000f4 .hidden __ltdf2
0002f690 g       *ABS*	00000000 __DTOR_END__
0002f260 g     F .text	0000009c alt_exception_cause_generated_bad_addr
00026bac g     F .text	00000074 __fpclassifyd
00026990 g     F .text	000000a4 __ratio
00028494 g     F .text	0000001c __vfiprintf_internal
0002deb8 g     F .text	0000021c altera_avalon_jtag_uart_read
0002049c g     F .text	00000030 _printf_r
00020000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
0002a5c4 g     F .text	00000064 .hidden __udivsi3
0002d0c8 g     F .text	000000a4 isatty
000000e0 g     O .rodata	000000c8 __mprec_tens
00024e34 g     F .text	0000000c __locale_charset
0002f1d0 g     F .text	00000090 alt_icache_flush
00001e04 g     O .bss	00000004 __malloc_top_pad
00001db0 g     O .rwdata	00000004 __mb_cur_max
00024e64 g     F .text	0000000c _localeconv_r
00028a4c g     F .text	000004bc __sfvwrite_r
00025fbc g     F .text	0000003c __i2b
00026c20 g     F .text	00000054 _sbrk_r
00029118 g     F .text	00000060 _read_r
00001dd0 g     O .rwdata	00000004 alt_max_fd
000286e4 g     F .text	000000f0 _fclose_r
0002442c g     F .text	00000030 fflush
00001e00 g     O .bss	00000004 __malloc_max_sbrked_mem
0002cf0c g     F .text	00000180 alt_irq_register
0002a680 g     F .text	000008ac .hidden __adddf3
00026738 g     F .text	0000010c __b2d
00029f94 g     F .text	00000538 .hidden __umoddi3
0002d294 g     F .text	000000d4 lseek
00001da8 g     O .rwdata	00000004 _global_impure_ptr
00029178 g     F .text	00000564 _realloc_r
00001f50 g       *ABS*	00000000 __bss_end
0002e948 g     F .text	000000f0 alt_iic_isr_register
0002ee68 g     F .text	00000108 alt_tick
00029a1c g     F .text	00000578 .hidden __udivdi3
0002894c g     F .text	00000024 _fputwc_r
000000b8 g     O .rodata	00000028 __mprec_bigtens
00025da0 g     F .text	00000104 __s2b
0002cbdc g     F .text	000000a8 .hidden __floatunsidf
00026478 g     F .text	00000060 __mcmp
000247cc g     F .text	00000018 __fp_lock_all
0002e8fc g     F .text	0000004c alt_ic_irq_enabled
0002edcc g     F .text	0000009c alt_alarm_stop
00001e0c g     O .bss	00000004 alt_irq_active
000200fc g     F .exceptions	000000d4 alt_irq_handler
00000ba0 g     O .rwdata	00000028 alt_dev_null
0002e57c g     F .text	00000048 alt_dcache_flush_all
00025ea4 g     F .text	00000068 __hi0bits
0002ca80 g     F .text	00000080 .hidden __fixdfsi
00001de8 g       *ABS*	00000000 __ram_rwdata_end
00001dc8 g     O .rwdata	00000008 alt_dev_list
0002d6e4 g     F .text	000000f8 write
000002fc g       *ABS*	00000000 __ram_rodata_end
0002ce5c g     F .text	000000b0 fstat
0002b978 g     F .text	000000f4 .hidden __ledf2
000261f0 g     F .text	00000140 __pow5mult
00027038 g     F .text	0000145c ___vfiprintf_internal_r
00001df8 g     O .bss	00000004 __nlocale_changed
0002a628 g     F .text	00000058 .hidden __umodsi3
00001f50 g       *ABS*	00000000 end
0002d9f4 g     F .text	000000c0 altera_avalon_jtag_uart_init
000201d0 g     F .exceptions	00000074 alt_instruction_exception_entry
00020334 g     F .text	00000064 init_pio
0002f690 g       *ABS*	00000000 __CTOR_LIST__
0001d4c0 g       *ABS*	00000000 __alt_stack_pointer
0002cc84 g     F .text	00000064 .hidden __clzsi2
0002e0d4 g     F .text	00000224 altera_avalon_jtag_uart_write
000247bc g     F .text	00000004 __sfp_lock_acquire
0002585c g     F .text	000000e4 memchr
00020508 g     F .text	000021f8 ___vfprintf_internal_r
00024920 g     F .text	00000310 _free_r
00024e40 g     F .text	00000010 __locale_mb_cur_max
0002f4dc g     F .text	00000180 __call_exitprocs
00001df4 g     O .bss	00000004 __mlocale_changed
00001db4 g     O .rwdata	00000004 __malloc_sbrk_base
00020244 g     F .text	0000004c _start
00001e1c g     O .bss	00000004 _alt_tick_rate
00026330 g     F .text	00000148 __lshift
00001e20 g     O .bss	00000004 _alt_nticks
0002d468 g     F .text	000000fc read
0002d848 g     F .text	00000048 alt_sys_init
0002f3c4 g     F .text	00000118 __register_exitproc
00025ff8 g     F .text	000001f8 __multiply
0002dd60 g     F .text	00000068 altera_avalon_jtag_uart_close
000002fc g       *ABS*	00000000 __ram_rwdata_start
00000000 g       *ABS*	00000000 __ram_rodata_start
00001e28 g     O .bss	00000028 __malloc_current_mallinfo
00026844 g     F .text	0000014c __d2b
0002d890 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
0002f12c g     F .text	000000a4 alt_get_fd
0002e424 g     F .text	00000158 alt_busy_sleep
000285cc g     F .text	00000054 _close_r
0002f348 g     F .text	0000007c memcmp
0002d950 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
00001f50 g       *ABS*	00000000 __alt_stack_base
0002d9a0 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
000227d8 g     F .text	00000154 __swsetup_r
0002af2c g     F .text	000008e8 .hidden __divdf3
0002467c g     F .text	00000118 __sfp
00026aa8 g     F .text	00000078 __copybits
00000798 g     O .rwdata	00000408 __malloc_av_
000247c8 g     F .text	00000004 __sinit_lock_release
0002ba6c g     F .text	00000718 .hidden __muldf3
00026c74 g     F .text	00000054 __sread
0002f024 g     F .text	00000108 alt_find_file
0002e600 g     F .text	000000a4 alt_dev_llist_insert
0002d3e4 g     F .text	00000024 __malloc_lock
0002d5c8 g     F .text	000000b0 sbrk
000243d0 g     F .text	0000005c _fflush_r
00028620 g     F .text	000000c4 _calloc_r
00001de8 g       *ABS*	00000000 __bss_start
00025a88 g     F .text	00000128 memset
00020398 g     F .text	00000104 main
00001e18 g     O .bss	00000004 alt_envp
00001dfc g     O .bss	00000004 __malloc_max_total_mem
0002d8f0 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
0002981c g     F .text	00000018 __swbuf
00026da8 g     F .text	00000008 __sclose
0001d4c0 g       *ABS*	00000000 __alt_heap_limit
000287d4 g     F .text	00000014 fclose
00022b2c g     F .text	00001688 _dtoa_r
00025050 g     F .text	0000080c _malloc_r
00029990 g     F .text	00000030 __ascii_wctomb
00001dd4 g     O .rwdata	00000004 alt_errno
00024c30 g     F .text	000000c4 _fwalk
0002a4cc g     F .text	00000084 .hidden __divsi3
000247fc g     F .text	00000124 _malloc_trim_r
0002f690 g       *ABS*	00000000 __CTOR_END__
00026db0 g     F .text	000000dc strcmp
0002f690 g       *ABS*	00000000 __flash_rodata_start
0002f690 g       *ABS*	00000000 __DTOR_LIST__
00020290 g     F .text	00000044 delay
0002b814 g     F .text	00000088 .hidden __nedf2
0002d810 g     F .text	00000038 alt_irq_init
0002d564 g     F .text	00000064 alt_release_fd
000001c8 g     O .rodata	00000100 .hidden __clz_tab
00001df0 g     O .bss	00000004 _PathLocale
0002f2fc g     F .text	00000014 atexit
0002856c g     F .text	00000060 _write_r
00024e70 g     F .text	00000018 setlocale
00001dac g     O .rwdata	00000004 _impure_ptr
00001e10 g     O .bss	00000004 alt_argc
000241b4 g     F .text	0000021c __sflush_r
0002e704 g     F .text	00000060 _do_dtors
00024e5c g     F .text	00000008 __locale_cjk_lang
00020020 g       .exceptions	00000000 alt_irq_entry
000266d4 g     F .text	00000064 __ulp
000247e4 g     F .text	00000018 __fp_unlock_all
00001dc0 g     O .rwdata	00000008 alt_fs_list
00020020 g       *ABS*	00000000 __ram_exceptions_start
00024e88 g     F .text	0000000c localeconv
0002e798 g     F .text	00000050 alt_ic_isr_register
00001de8 g       *ABS*	00000000 _edata
00001f50 g       *ABS*	00000000 _end
000287e8 g     F .text	00000164 __fputwc
00020244 g       *ABS*	00000000 __ram_exceptions_end
0002ddc8 g     F .text	000000f0 altera_avalon_jtag_uart_ioctl
0002e870 g     F .text	0000008c alt_ic_irq_disable
00026cd0 g     F .text	0000007c __swrite
00001db8 g     O .rwdata	00000004 __malloc_trim_threshold
00024e50 g     F .text	0000000c __locale_msgcharset
0002f310 g     F .text	00000038 exit
00024cf4 g     F .text	000000c4 _fwalk_reent
000264d8 g     F .text	000001fc __mdiff
0002a550 g     F .text	00000074 .hidden __modsi3
0001d4c0 g       *ABS*	00000000 __alt_data_end
00020020 g     F .exceptions	00000000 alt_exception
000247c0 g     F .text	00000004 __sfp_lock_release
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory_ram
0002f65c g     F .text	00000034 _exit
0002e2f8 g     F .text	0000012c alt_alarm_start
00024e94 g     F .text	000001bc __smakebuf_r
00026e8c g     F .text	00000098 strlen
0002ec78 g     F .text	00000154 open
0002b89c g     F .text	000000dc .hidden __gedf2
00001dbc g     O .rwdata	00000004 __wctomb
00027020 g     F .text	00000018 __sprint_r
0002e764 g     F .text	00000034 alt_icache_flush_all
00001dd8 g     O .rwdata	00000004 alt_priority_mask
0002e7e8 g     F .text	00000088 alt_ic_irq_enable
00022700 g     F .text	0000001c __vfprintf_internal
000299c0 g     F .text	0000005c _wctomb_r
0002c184 g     F .text	000008fc .hidden __subdf3
00025f0c g     F .text	000000b0 __lo0bits
00001de0 g     O .rwdata	00000008 alt_alarm_list
0002e6a4 g     F .text	00000060 _do_ctors
000202d4 g     F .text	00000060 handle_button_interrupts
000298d0 g     F .text	000000c0 wcrtomb
0002cd24 g     F .text	000000d0 close
0002d1d4 g     F .text	00000084 alt_load
00028970 g     F .text	00000080 fputwc
000247c4 g     F .text	00000004 __sinit_lock_acquire
00025c80 g     F .text	00000120 __multadd
00025c58 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00020000 <__reset>:
#if NIOS2_ICACHE_SIZE > 0 && defined(ALT_ALLOW_CODE_AT_RESET) && (!defined(ALT_SIM_OPTIMIZE) || defined(NIOS2_ECC_PRESENT))
    /* Assume the instruction cache size is always a power of two. */
#if NIOS2_ICACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_ICACHE_SIZE)
#else
    movui r2, NIOS2_ICACHE_SIZE
   20000:	00840014 	movui	r2,4096
#endif

0:
    initi r2
   20004:	1001483a 	initi	r2
    addi r2, r2, -NIOS2_ICACHE_LINE_SIZE
   20008:	10bff804 	addi	r2,r2,-32
    bgt r2, zero, 0b
   2000c:	00bffd16 	blt	zero,r2,20004 <__reset+0x4>
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   20010:	004000b4 	movhi	at,2
    ori r1, r1, %lo(_start)
   20014:	08409114 	ori	at,at,580
    jmp r1
   20018:	0800683a 	jmp	at
   2001c:	00000000 	call	0 <__alt_mem_onchip_memory_ram>

Disassembly of section .exceptions:

00020020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   20020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   20024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   20028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   2002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   20030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   20034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   20038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   2003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   20040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   20044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   20048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   2004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   20050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   20054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   20058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   2005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   20060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   20064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   20068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   2006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   20070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   20074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   20078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   2007c:	10000326 	beq	r2,zero,2008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   20080:	20000226 	beq	r4,zero,2008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   20084:	00200fc0 	call	200fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   20088:	00000706 	br	200a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   2008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   20090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   20094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   20098:	00201d00 	call	201d0 <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   2009c:	1000021e 	bne	r2,zero,200a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   200a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   200a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   200a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   200ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   200b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   200b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   200b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   200bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   200c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   200c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   200c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   200cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   200d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   200d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   200d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   200dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   200e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   200e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   200e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   200ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   200f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   200f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   200f8:	ef80083a 	eret

000200fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   200fc:	defff904 	addi	sp,sp,-28
   20100:	dfc00615 	stw	ra,24(sp)
   20104:	df000515 	stw	fp,20(sp)
   20108:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
   2010c:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   20110:	0005313a 	rdctl	r2,ipending
   20114:	e0bffe15 	stw	r2,-8(fp)

  return active;
   20118:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
   2011c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
   20120:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
   20124:	00800044 	movi	r2,1
   20128:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   2012c:	e0fffb17 	ldw	r3,-20(fp)
   20130:	e0bffc17 	ldw	r2,-16(fp)
   20134:	1884703a 	and	r2,r3,r2
   20138:	10001426 	beq	r2,zero,2018c <alt_irq_handler+0x90>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
   2013c:	00800034 	movhi	r2,0
   20140:	10879404 	addi	r2,r2,7760
   20144:	e0fffd17 	ldw	r3,-12(fp)
   20148:	180690fa 	slli	r3,r3,3
   2014c:	10c5883a 	add	r2,r2,r3
   20150:	10c00017 	ldw	r3,0(r2)
   20154:	00800034 	movhi	r2,0
   20158:	10879404 	addi	r2,r2,7760
   2015c:	e13ffd17 	ldw	r4,-12(fp)
   20160:	200890fa 	slli	r4,r4,3
   20164:	1105883a 	add	r2,r2,r4
   20168:	10800104 	addi	r2,r2,4
   2016c:	10800017 	ldw	r2,0(r2)
   20170:	1009883a 	mov	r4,r2
   20174:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
   20178:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   2017c:	0005313a 	rdctl	r2,ipending
   20180:	e0bfff15 	stw	r2,-4(fp)

  return active;
   20184:	e0bfff17 	ldw	r2,-4(fp)
   20188:	00000706 	br	201a8 <alt_irq_handler+0xac>
      }
      mask <<= 1;
   2018c:	e0bffc17 	ldw	r2,-16(fp)
   20190:	1085883a 	add	r2,r2,r2
   20194:	e0bffc15 	stw	r2,-16(fp)
      i++;
   20198:	e0bffd17 	ldw	r2,-12(fp)
   2019c:	10800044 	addi	r2,r2,1
   201a0:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
   201a4:	003fe106 	br	2012c <alt_irq_handler+0x30>

    active = alt_irq_pending ();
   201a8:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
   201ac:	e0bffb17 	ldw	r2,-20(fp)
   201b0:	103fdb1e 	bne	r2,zero,20120 <alt_irq_handler+0x24>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
   201b4:	0001883a 	nop
}
   201b8:	0001883a 	nop
   201bc:	e037883a 	mov	sp,fp
   201c0:	dfc00117 	ldw	ra,4(sp)
   201c4:	df000017 	ldw	fp,0(sp)
   201c8:	dec00204 	addi	sp,sp,8
   201cc:	f800283a 	ret

000201d0 <alt_instruction_exception_entry>:
 * that handler if it has been registered. Absent a handler, it will
 * break break or hang as discussed below.
 */
int 
alt_instruction_exception_entry (alt_u32 exception_pc)
{
   201d0:	defffb04 	addi	sp,sp,-20
   201d4:	dfc00415 	stw	ra,16(sp)
   201d8:	df000315 	stw	fp,12(sp)
   201dc:	df000304 	addi	fp,sp,12
   201e0:	e13fff15 	stw	r4,-4(fp)
 * NIOS2_EXCEPTION_CAUSE_NOT_PRESENT. Your handling routine should
 * check the validity of the cause argument before proceeding.
 */
#ifdef NIOS2_HAS_EXTRA_EXCEPTION_INFO
  /* Get exception cause & "badaddr" */
  NIOS2_READ_EXCEPTION(cause);
   201e4:	000531fa 	rdctl	r2,exception
   201e8:	e0bffd15 	stw	r2,-12(fp)
  cause = ( (cause & NIOS2_EXCEPTION_REG_CAUSE_MASK) >>
   201ec:	e0bffd17 	ldw	r2,-12(fp)
   201f0:	10801f0c 	andi	r2,r2,124
   201f4:	1004d0ba 	srli	r2,r2,2
   201f8:	e0bffd15 	stw	r2,-12(fp)
              NIOS2_EXCEPTION_REG_CAUSE_OFST );

  NIOS2_READ_BADADDR(badaddr);
   201fc:	0005333a 	rdctl	r2,badaddr
   20200:	e0bffe15 	stw	r2,-8(fp)
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   20204:	d0a01f17 	ldw	r2,-32644(gp)
   20208:	10000726 	beq	r2,zero,20228 <alt_instruction_exception_entry+0x58>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   2020c:	d0a01f17 	ldw	r2,-32644(gp)
   20210:	e0fffd17 	ldw	r3,-12(fp)
   20214:	e1bffe17 	ldw	r6,-8(fp)
   20218:	e17fff17 	ldw	r5,-4(fp)
   2021c:	1809883a 	mov	r4,r3
   20220:	103ee83a 	callr	r2
   20224:	00000206 	br	20230 <alt_instruction_exception_entry+0x60>
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   20228:	003da03a 	break	0
      ;
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
   2022c:	0005883a 	mov	r2,zero
}
   20230:	e037883a 	mov	sp,fp
   20234:	dfc00117 	ldw	ra,4(sp)
   20238:	df000017 	ldw	fp,0(sp)
   2023c:	dec00204 	addi	sp,sp,8
   20240:	f800283a 	ret

Disassembly of section .text:

00020244 <_start>:

    /* Assume the data cache size is always a power of two. */
#if NIOS2_DCACHE_SIZE > 0x8000
    movhi r2, %hi(NIOS2_DCACHE_SIZE)
#else
    movui r2, NIOS2_DCACHE_SIZE
   20244:	00820014 	movui	r2,2048
#endif

0:
    initd 0(r2)
   20248:	10000033 	initd	0(r2)
#ifdef NIOS2_ECC_PRESENT
    addi r2, r2, -4
#else
    addi r2, r2, -NIOS2_DCACHE_LINE_SIZE
   2024c:	10bff804 	addi	r2,r2,-32
#endif
    bgt r2, zero, 0b
   20250:	00bffd16 	blt	zero,r2,20248 <_start+0x4>

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   20254:	06c00074 	movhi	sp,1
    ori sp, sp, %lo(__alt_stack_pointer)
   20258:	def53014 	ori	sp,sp,54464
    movhi gp, %hi(_gp)
   2025c:	06800034 	movhi	gp,0
    ori gp, gp, %lo(_gp)
   20260:	d6a76a14 	ori	gp,gp,40360
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   20264:	00800034 	movhi	r2,0
    ori r2, r2, %lo(__bss_start)
   20268:	10877a14 	ori	r2,r2,7656

    movhi r3, %hi(__bss_end)
   2026c:	00c00034 	movhi	r3,0
    ori r3, r3, %lo(__bss_end)
   20270:	18c7d414 	ori	r3,r3,8016

    beq r2, r3, 1f
   20274:	10c00326 	beq	r2,r3,20284 <_start+0x40>

0:
    stw zero, (r2)
   20278:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   2027c:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   20280:	10fffd36 	bltu	r2,r3,20278 <_start+0x34>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   20284:	002d1d40 	call	2d1d4 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   20288:	002d3680 	call	2d368 <alt_main>

0002028c <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   2028c:	003fff06 	br	2028c <alt_after_alt_main>

00020290 <delay>:
#include "sys/alt_irq.h"

int n = 0;
volatile int edge_capture;

int delay(int n) {
   20290:	defffd04 	addi	sp,sp,-12
   20294:	df000215 	stw	fp,8(sp)
   20298:	df000204 	addi	fp,sp,8
   2029c:	e13fff15 	stw	r4,-4(fp)
      unsigned int delay = 0 ;
   202a0:	e03ffe15 	stw	zero,-8(fp)
      while(delay < n){
   202a4:	00000306 	br	202b4 <delay+0x24>
          delay++;
   202a8:	e0bffe17 	ldw	r2,-8(fp)
   202ac:	10800044 	addi	r2,r2,1
   202b0:	e0bffe15 	stw	r2,-8(fp)
int n = 0;
volatile int edge_capture;

int delay(int n) {
      unsigned int delay = 0 ;
      while(delay < n){
   202b4:	e0bfff17 	ldw	r2,-4(fp)
   202b8:	e0fffe17 	ldw	r3,-8(fp)
   202bc:	18bffa36 	bltu	r3,r2,202a8 <delay+0x18>
          delay++;
      }
}
   202c0:	0001883a 	nop
   202c4:	e037883a 	mov	sp,fp
   202c8:	df000017 	ldw	fp,0(sp)
   202cc:	dec00104 	addi	sp,sp,4
   202d0:	f800283a 	ret

000202d4 <handle_button_interrupts>:

void handle_button_interrupts(void* context, alt_u32 id)
{
   202d4:	defffc04 	addi	sp,sp,-16
   202d8:	df000315 	stw	fp,12(sp)
   202dc:	df000304 	addi	fp,sp,12
   202e0:	e13ffe15 	stw	r4,-8(fp)
   202e4:	e17fff15 	stw	r5,-4(fp)
     volatile int* edge_capture_ptr = (volatile int*) context;
   202e8:	e0bffe17 	ldw	r2,-8(fp)
   202ec:	e0bffd15 	stw	r2,-12(fp)
     *edge_capture_ptr = IORD_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE);
   202f0:	00800134 	movhi	r2,4
   202f4:	10840b04 	addi	r2,r2,4140
   202f8:	10c00037 	ldwio	r3,0(r2)
   202fc:	e0bffd17 	ldw	r2,-12(fp)
   20300:	10c00015 	stw	r3,0(r2)
     n++;
   20304:	d0a01017 	ldw	r2,-32704(gp)
   20308:	10800044 	addi	r2,r2,1
   2030c:	d0a01015 	stw	r2,-32704(gp)
     IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE, 0);
   20310:	0007883a 	mov	r3,zero
   20314:	00800134 	movhi	r2,4
   20318:	10840b04 	addi	r2,r2,4140
   2031c:	10c00035 	stwio	r3,0(r2)
 }
   20320:	0001883a 	nop
   20324:	e037883a 	mov	sp,fp
   20328:	df000017 	ldw	fp,0(sp)
   2032c:	dec00104 	addi	sp,sp,4
   20330:	f800283a 	ret

00020334 <init_pio>:

void init_pio()
{
   20334:	defffd04 	addi	sp,sp,-12
   20338:	dfc00215 	stw	ra,8(sp)
   2033c:	df000115 	stw	fp,4(sp)
   20340:	df000104 	addi	fp,sp,4
     void* edge_capture_ptr = (void*) &edge_capture;
   20344:	d0a01104 	addi	r2,gp,-32700
   20348:	e0bfff15 	stw	r2,-4(fp)
     IOWR_ALTERA_AVALON_PIO_IRQ_MASK(PIO_1_BASE, 0xf);
   2034c:	00c003c4 	movi	r3,15
   20350:	00800134 	movhi	r2,4
   20354:	10840a04 	addi	r2,r2,4136
   20358:	10c00035 	stwio	r3,0(r2)
     IOWR_ALTERA_AVALON_PIO_EDGE_CAP(PIO_1_BASE, 0x0);
   2035c:	0007883a 	mov	r3,zero
   20360:	00800134 	movhi	r2,4
   20364:	10840b04 	addi	r2,r2,4140
   20368:	10c00035 	stwio	r3,0(r2)
     alt_irq_register( PIO_1_IRQ, edge_capture_ptr, handle_button_interrupts );
   2036c:	018000b4 	movhi	r6,2
   20370:	3180b504 	addi	r6,r6,724
   20374:	e17fff17 	ldw	r5,-4(fp)
   20378:	01000044 	movi	r4,1
   2037c:	002cf0c0 	call	2cf0c <alt_irq_register>
}
   20380:	0001883a 	nop
   20384:	e037883a 	mov	sp,fp
   20388:	dfc00117 	ldw	ra,4(sp)
   2038c:	df000017 	ldw	fp,0(sp)
   20390:	dec00204 	addi	sp,sp,8
   20394:	f800283a 	ret

00020398 <main>:
//
//  1000 >> 0: 0001

//  0001 0011 0010

int main(void){
   20398:	defff804 	addi	sp,sp,-32
   2039c:	dfc00715 	stw	ra,28(sp)
   203a0:	df000615 	stw	fp,24(sp)
   203a4:	df000604 	addi	fp,sp,24
  unsigned int st = 0;
   203a8:	e03ffa15 	stw	zero,-24(fp)
  unsigned int vel[4] = { 50000, 30000, 20000, 10000 };
   203ac:	00b0d414 	movui	r2,50000
   203b0:	e0bffc15 	stw	r2,-16(fp)
   203b4:	009d4c04 	movi	r2,30000
   203b8:	e0bffd15 	stw	r2,-12(fp)
   203bc:	00938804 	movi	r2,20000
   203c0:	e0bffe15 	stw	r2,-8(fp)
   203c4:	0089c404 	movi	r2,10000
   203c8:	e0bfff15 	stw	r2,-4(fp)
  unsigned int idx = 0;
   203cc:	e03ffb15 	stw	zero,-20(fp)
  // n = 0;

  while(1) {
	  // IOWR_ALTERA_AVALON_PIO_DATA(PIO_1_BASE, n);

	  if (IORD_32DIRECT(PIO_1_BASE, 0) & 0x01) {
   203d0:	00800134 	movhi	r2,4
   203d4:	10840804 	addi	r2,r2,4128
   203d8:	10800037 	ldwio	r2,0(r2)
   203dc:	1080004c 	andi	r2,r2,1
   203e0:	103ffb26 	beq	r2,zero,203d0 <main+0x38>
		  idx = (IORD_32DIRECT(PIO_1_BASE, 0) & 0x0C) >> 2;
   203e4:	00800134 	movhi	r2,4
   203e8:	10840804 	addi	r2,r2,4128
   203ec:	10800037 	ldwio	r2,0(r2)
   203f0:	1080030c 	andi	r2,r2,12
   203f4:	1005d0ba 	srai	r2,r2,2
   203f8:	e0bffb15 	stw	r2,-20(fp)

		  if (st <= 3){
   203fc:	e0bffa17 	ldw	r2,-24(fp)
   20400:	10800128 	cmpgeui	r2,r2,4
   20404:	1000201e 	bne	r2,zero,20488 <main+0xf0>
			  if(IORD_32DIRECT(PIO_1_BASE, 0) & 0x02) IOWR_32DIRECT(PIO_2_BASE, 0, 0x08 >> st++);
   20408:	00800134 	movhi	r2,4
   2040c:	10840804 	addi	r2,r2,4128
   20410:	10800037 	ldwio	r2,0(r2)
   20414:	1080008c 	andi	r2,r2,2
   20418:	10000926 	beq	r2,zero,20440 <main+0xa8>
   2041c:	e0bffa17 	ldw	r2,-24(fp)
   20420:	10c00044 	addi	r3,r2,1
   20424:	e0fffa15 	stw	r3,-24(fp)
   20428:	00c00204 	movi	r3,8
   2042c:	1887d83a 	sra	r3,r3,r2
   20430:	00800134 	movhi	r2,4
   20434:	10840004 	addi	r2,r2,4096
   20438:	10c00035 	stwio	r3,0(r2)
   2043c:	00000806 	br	20460 <main+0xc8>
			  else IOWR_32DIRECT(PIO_2_BASE, 0, 0x01 << st++);
   20440:	e0bffa17 	ldw	r2,-24(fp)
   20444:	10c00044 	addi	r3,r2,1
   20448:	e0fffa15 	stw	r3,-24(fp)
   2044c:	00c00044 	movi	r3,1
   20450:	1886983a 	sll	r3,r3,r2
   20454:	00800134 	movhi	r2,4
   20458:	10840004 	addi	r2,r2,4096
   2045c:	10c00035 	stwio	r3,0(r2)
			  usleep(vel[idx]);
   20460:	e0bffb17 	ldw	r2,-20(fp)
   20464:	1085883a 	add	r2,r2,r2
   20468:	1085883a 	add	r2,r2,r2
   2046c:	e0fffa04 	addi	r3,fp,-24
   20470:	1885883a 	add	r2,r3,r2
   20474:	10800204 	addi	r2,r2,8
   20478:	10800017 	ldw	r2,0(r2)
   2047c:	1009883a 	mov	r4,r2
   20480:	002d6780 	call	2d678 <usleep>
   20484:	00000106 	br	2048c <main+0xf4>
		  }
		  else st = 0;
   20488:	e03ffa15 	stw	zero,-24(fp)
		  printf(idx);
   2048c:	e0bffb17 	ldw	r2,-20(fp)
   20490:	1009883a 	mov	r4,r2
   20494:	00204cc0 	call	204cc <printf>
	  }
   }
   20498:	003fcd06 	br	203d0 <main+0x38>

0002049c <_printf_r>:
   2049c:	defffd04 	addi	sp,sp,-12
   204a0:	2805883a 	mov	r2,r5
   204a4:	dfc00015 	stw	ra,0(sp)
   204a8:	d9800115 	stw	r6,4(sp)
   204ac:	d9c00215 	stw	r7,8(sp)
   204b0:	21400217 	ldw	r5,8(r4)
   204b4:	d9c00104 	addi	r7,sp,4
   204b8:	100d883a 	mov	r6,r2
   204bc:	00205080 	call	20508 <___vfprintf_internal_r>
   204c0:	dfc00017 	ldw	ra,0(sp)
   204c4:	dec00304 	addi	sp,sp,12
   204c8:	f800283a 	ret

000204cc <printf>:
   204cc:	defffc04 	addi	sp,sp,-16
   204d0:	dfc00015 	stw	ra,0(sp)
   204d4:	d9400115 	stw	r5,4(sp)
   204d8:	d9800215 	stw	r6,8(sp)
   204dc:	d9c00315 	stw	r7,12(sp)
   204e0:	00800034 	movhi	r2,0
   204e4:	10876b04 	addi	r2,r2,7596
   204e8:	10800017 	ldw	r2,0(r2)
   204ec:	200b883a 	mov	r5,r4
   204f0:	d9800104 	addi	r6,sp,4
   204f4:	11000217 	ldw	r4,8(r2)
   204f8:	00227000 	call	22700 <__vfprintf_internal>
   204fc:	dfc00017 	ldw	ra,0(sp)
   20500:	dec00404 	addi	sp,sp,16
   20504:	f800283a 	ret

00020508 <___vfprintf_internal_r>:
   20508:	deffb804 	addi	sp,sp,-288
   2050c:	dfc04715 	stw	ra,284(sp)
   20510:	ddc04515 	stw	r23,276(sp)
   20514:	dd404315 	stw	r21,268(sp)
   20518:	d9002c15 	stw	r4,176(sp)
   2051c:	282f883a 	mov	r23,r5
   20520:	302b883a 	mov	r21,r6
   20524:	d9c02d15 	stw	r7,180(sp)
   20528:	df004615 	stw	fp,280(sp)
   2052c:	dd804415 	stw	r22,272(sp)
   20530:	dd004215 	stw	r20,264(sp)
   20534:	dcc04115 	stw	r19,260(sp)
   20538:	dc804015 	stw	r18,256(sp)
   2053c:	dc403f15 	stw	r17,252(sp)
   20540:	dc003e15 	stw	r16,248(sp)
   20544:	0024e640 	call	24e64 <_localeconv_r>
   20548:	10800017 	ldw	r2,0(r2)
   2054c:	1009883a 	mov	r4,r2
   20550:	d8803415 	stw	r2,208(sp)
   20554:	0026e8c0 	call	26e8c <strlen>
   20558:	d8803715 	stw	r2,220(sp)
   2055c:	d8802c17 	ldw	r2,176(sp)
   20560:	10000226 	beq	r2,zero,2056c <___vfprintf_internal_r+0x64>
   20564:	10800e17 	ldw	r2,56(r2)
   20568:	1000f926 	beq	r2,zero,20950 <___vfprintf_internal_r+0x448>
   2056c:	b880030b 	ldhu	r2,12(r23)
   20570:	10c8000c 	andi	r3,r2,8192
   20574:	1800061e 	bne	r3,zero,20590 <___vfprintf_internal_r+0x88>
   20578:	b9001917 	ldw	r4,100(r23)
   2057c:	00f7ffc4 	movi	r3,-8193
   20580:	10880014 	ori	r2,r2,8192
   20584:	20c6703a 	and	r3,r4,r3
   20588:	b880030d 	sth	r2,12(r23)
   2058c:	b8c01915 	stw	r3,100(r23)
   20590:	10c0020c 	andi	r3,r2,8
   20594:	1800c126 	beq	r3,zero,2089c <___vfprintf_internal_r+0x394>
   20598:	b8c00417 	ldw	r3,16(r23)
   2059c:	1800bf26 	beq	r3,zero,2089c <___vfprintf_internal_r+0x394>
   205a0:	1080068c 	andi	r2,r2,26
   205a4:	00c00284 	movi	r3,10
   205a8:	10c0c426 	beq	r2,r3,208bc <___vfprintf_internal_r+0x3b4>
   205ac:	d8c00404 	addi	r3,sp,16
   205b0:	05000034 	movhi	r20,0
   205b4:	d9001e04 	addi	r4,sp,120
   205b8:	a5001084 	addi	r20,r20,66
   205bc:	d8c01e15 	stw	r3,120(sp)
   205c0:	d8002015 	stw	zero,128(sp)
   205c4:	d8001f15 	stw	zero,124(sp)
   205c8:	d8003315 	stw	zero,204(sp)
   205cc:	d8003615 	stw	zero,216(sp)
   205d0:	d8003815 	stw	zero,224(sp)
   205d4:	1811883a 	mov	r8,r3
   205d8:	d8003915 	stw	zero,228(sp)
   205dc:	d8003a15 	stw	zero,232(sp)
   205e0:	d8002f15 	stw	zero,188(sp)
   205e4:	d9002815 	stw	r4,160(sp)
   205e8:	a8800007 	ldb	r2,0(r21)
   205ec:	10027b26 	beq	r2,zero,20fdc <___vfprintf_internal_r+0xad4>
   205f0:	00c00944 	movi	r3,37
   205f4:	a821883a 	mov	r16,r21
   205f8:	10c0021e 	bne	r2,r3,20604 <___vfprintf_internal_r+0xfc>
   205fc:	00001406 	br	20650 <___vfprintf_internal_r+0x148>
   20600:	10c00326 	beq	r2,r3,20610 <___vfprintf_internal_r+0x108>
   20604:	84000044 	addi	r16,r16,1
   20608:	80800007 	ldb	r2,0(r16)
   2060c:	103ffc1e 	bne	r2,zero,20600 <___vfprintf_internal_r+0xf8>
   20610:	8563c83a 	sub	r17,r16,r21
   20614:	88000e26 	beq	r17,zero,20650 <___vfprintf_internal_r+0x148>
   20618:	d8c02017 	ldw	r3,128(sp)
   2061c:	d8801f17 	ldw	r2,124(sp)
   20620:	45400015 	stw	r21,0(r8)
   20624:	1c47883a 	add	r3,r3,r17
   20628:	10800044 	addi	r2,r2,1
   2062c:	d8c02015 	stw	r3,128(sp)
   20630:	44400115 	stw	r17,4(r8)
   20634:	d8801f15 	stw	r2,124(sp)
   20638:	00c001c4 	movi	r3,7
   2063c:	1880a716 	blt	r3,r2,208dc <___vfprintf_internal_r+0x3d4>
   20640:	42000204 	addi	r8,r8,8
   20644:	d9402f17 	ldw	r5,188(sp)
   20648:	2c4b883a 	add	r5,r5,r17
   2064c:	d9402f15 	stw	r5,188(sp)
   20650:	80800007 	ldb	r2,0(r16)
   20654:	1000a826 	beq	r2,zero,208f8 <___vfprintf_internal_r+0x3f0>
   20658:	84400047 	ldb	r17,1(r16)
   2065c:	00bfffc4 	movi	r2,-1
   20660:	85400044 	addi	r21,r16,1
   20664:	d8002785 	stb	zero,158(sp)
   20668:	0007883a 	mov	r3,zero
   2066c:	000f883a 	mov	r7,zero
   20670:	d8802915 	stw	r2,164(sp)
   20674:	d8003115 	stw	zero,196(sp)
   20678:	0025883a 	mov	r18,zero
   2067c:	01401604 	movi	r5,88
   20680:	01800244 	movi	r6,9
   20684:	02800a84 	movi	r10,42
   20688:	02401b04 	movi	r9,108
   2068c:	ad400044 	addi	r21,r21,1
   20690:	88bff804 	addi	r2,r17,-32
   20694:	28830436 	bltu	r5,r2,212a8 <___vfprintf_internal_r+0xda0>
   20698:	100490ba 	slli	r2,r2,2
   2069c:	010000b4 	movhi	r4,2
   206a0:	2101ac04 	addi	r4,r4,1712
   206a4:	1105883a 	add	r2,r2,r4
   206a8:	10800017 	ldw	r2,0(r2)
   206ac:	1000683a 	jmp	r2
   206b0:	000211c8 	cmpgei	zero,zero,2119
   206b4:	000212a8 	cmpgeui	zero,zero,2122
   206b8:	000212a8 	cmpgeui	zero,zero,2122
   206bc:	000211e8 	cmpgeui	zero,zero,2119
   206c0:	000212a8 	cmpgeui	zero,zero,2122
   206c4:	000212a8 	cmpgeui	zero,zero,2122
   206c8:	000212a8 	cmpgeui	zero,zero,2122
   206cc:	000212a8 	cmpgeui	zero,zero,2122
   206d0:	000212a8 	cmpgeui	zero,zero,2122
   206d4:	000212a8 	cmpgeui	zero,zero,2122
   206d8:	0002095c 	xori	zero,zero,2085
   206dc:	00021104 	movi	zero,2116
   206e0:	000212a8 	cmpgeui	zero,zero,2122
   206e4:	00020824 	muli	zero,zero,2080
   206e8:	00020984 	movi	zero,2086
   206ec:	000212a8 	cmpgeui	zero,zero,2122
   206f0:	000209c4 	movi	zero,2087
   206f4:	000209d0 	cmplti	zero,zero,2087
   206f8:	000209d0 	cmplti	zero,zero,2087
   206fc:	000209d0 	cmplti	zero,zero,2087
   20700:	000209d0 	cmplti	zero,zero,2087
   20704:	000209d0 	cmplti	zero,zero,2087
   20708:	000209d0 	cmplti	zero,zero,2087
   2070c:	000209d0 	cmplti	zero,zero,2087
   20710:	000209d0 	cmplti	zero,zero,2087
   20714:	000209d0 	cmplti	zero,zero,2087
   20718:	000212a8 	cmpgeui	zero,zero,2122
   2071c:	000212a8 	cmpgeui	zero,zero,2122
   20720:	000212a8 	cmpgeui	zero,zero,2122
   20724:	000212a8 	cmpgeui	zero,zero,2122
   20728:	000212a8 	cmpgeui	zero,zero,2122
   2072c:	000212a8 	cmpgeui	zero,zero,2122
   20730:	000212a8 	cmpgeui	zero,zero,2122
   20734:	000212a8 	cmpgeui	zero,zero,2122
   20738:	000212a8 	cmpgeui	zero,zero,2122
   2073c:	000212a8 	cmpgeui	zero,zero,2122
   20740:	00020a04 	movi	zero,2088
   20744:	00020ac0 	call	20ac <__alt_heap_start+0x15c>
   20748:	000212a8 	cmpgeui	zero,zero,2122
   2074c:	00020ac0 	call	20ac <__alt_heap_start+0x15c>
   20750:	000212a8 	cmpgeui	zero,zero,2122
   20754:	000212a8 	cmpgeui	zero,zero,2122
   20758:	000212a8 	cmpgeui	zero,zero,2122
   2075c:	000212a8 	cmpgeui	zero,zero,2122
   20760:	00020b60 	cmpeqi	zero,zero,2093
   20764:	000212a8 	cmpgeui	zero,zero,2122
   20768:	000212a8 	cmpgeui	zero,zero,2122
   2076c:	00020b6c 	andhi	zero,zero,2093
   20770:	000212a8 	cmpgeui	zero,zero,2122
   20774:	000212a8 	cmpgeui	zero,zero,2122
   20778:	000212a8 	cmpgeui	zero,zero,2122
   2077c:	000212a8 	cmpgeui	zero,zero,2122
   20780:	000212a8 	cmpgeui	zero,zero,2122
   20784:	00020fe4 	muli	zero,zero,2111
   20788:	000212a8 	cmpgeui	zero,zero,2122
   2078c:	000212a8 	cmpgeui	zero,zero,2122
   20790:	00021044 	movi	zero,2113
   20794:	000212a8 	cmpgeui	zero,zero,2122
   20798:	000212a8 	cmpgeui	zero,zero,2122
   2079c:	000212a8 	cmpgeui	zero,zero,2122
   207a0:	000212a8 	cmpgeui	zero,zero,2122
   207a4:	000212a8 	cmpgeui	zero,zero,2122
   207a8:	000212a8 	cmpgeui	zero,zero,2122
   207ac:	000212a8 	cmpgeui	zero,zero,2122
   207b0:	000212a8 	cmpgeui	zero,zero,2122
   207b4:	000212a8 	cmpgeui	zero,zero,2122
   207b8:	000212a8 	cmpgeui	zero,zero,2122
   207bc:	00021254 	movui	zero,2121
   207c0:	000211f4 	movhi	zero,2119
   207c4:	00020ac0 	call	20ac <__alt_heap_start+0x15c>
   207c8:	00020ac0 	call	20ac <__alt_heap_start+0x15c>
   207cc:	00020ac0 	call	20ac <__alt_heap_start+0x15c>
   207d0:	00021204 	movi	zero,2120
   207d4:	000211f4 	movhi	zero,2119
   207d8:	000212a8 	cmpgeui	zero,zero,2122
   207dc:	000212a8 	cmpgeui	zero,zero,2122
   207e0:	00021210 	cmplti	zero,zero,2120
   207e4:	000212a8 	cmpgeui	zero,zero,2122
   207e8:	00021220 	cmpeqi	zero,zero,2120
   207ec:	000210f4 	movhi	zero,2115
   207f0:	00020830 	cmpltui	zero,zero,2080
   207f4:	00021114 	movui	zero,2116
   207f8:	000212a8 	cmpgeui	zero,zero,2122
   207fc:	00021120 	cmpeqi	zero,zero,2116
   20800:	000212a8 	cmpgeui	zero,zero,2122
   20804:	0002117c 	xorhi	zero,zero,2117
   20808:	000212a8 	cmpgeui	zero,zero,2122
   2080c:	000212a8 	cmpgeui	zero,zero,2122
   20810:	0002118c 	andi	zero,zero,2118
   20814:	d9003117 	ldw	r4,196(sp)
   20818:	d8802d15 	stw	r2,180(sp)
   2081c:	0109c83a 	sub	r4,zero,r4
   20820:	d9003115 	stw	r4,196(sp)
   20824:	94800114 	ori	r18,r18,4
   20828:	ac400007 	ldb	r17,0(r21)
   2082c:	003f9706 	br	2068c <___vfprintf_internal_r+0x184>
   20830:	00800c04 	movi	r2,48
   20834:	d9002d17 	ldw	r4,180(sp)
   20838:	d9402917 	ldw	r5,164(sp)
   2083c:	d8802705 	stb	r2,156(sp)
   20840:	00801e04 	movi	r2,120
   20844:	d8802745 	stb	r2,157(sp)
   20848:	d8002785 	stb	zero,158(sp)
   2084c:	20c00104 	addi	r3,r4,4
   20850:	24c00017 	ldw	r19,0(r4)
   20854:	002d883a 	mov	r22,zero
   20858:	90800094 	ori	r2,r18,2
   2085c:	28029a16 	blt	r5,zero,212c8 <___vfprintf_internal_r+0xdc0>
   20860:	00bfdfc4 	movi	r2,-129
   20864:	90a4703a 	and	r18,r18,r2
   20868:	d8c02d15 	stw	r3,180(sp)
   2086c:	94800094 	ori	r18,r18,2
   20870:	9802871e 	bne	r19,zero,21290 <___vfprintf_internal_r+0xd88>
   20874:	00800034 	movhi	r2,0
   20878:	10800904 	addi	r2,r2,36
   2087c:	d8803915 	stw	r2,228(sp)
   20880:	04401e04 	movi	r17,120
   20884:	d8802917 	ldw	r2,164(sp)
   20888:	0039883a 	mov	fp,zero
   2088c:	1001e926 	beq	r2,zero,21034 <___vfprintf_internal_r+0xb2c>
   20890:	0027883a 	mov	r19,zero
   20894:	002d883a 	mov	r22,zero
   20898:	00020506 	br	210b0 <___vfprintf_internal_r+0xba8>
   2089c:	d9002c17 	ldw	r4,176(sp)
   208a0:	b80b883a 	mov	r5,r23
   208a4:	00227d80 	call	227d8 <__swsetup_r>
   208a8:	1005ac1e 	bne	r2,zero,21f5c <___vfprintf_internal_r+0x1a54>
   208ac:	b880030b 	ldhu	r2,12(r23)
   208b0:	00c00284 	movi	r3,10
   208b4:	1080068c 	andi	r2,r2,26
   208b8:	10ff3c1e 	bne	r2,r3,205ac <___vfprintf_internal_r+0xa4>
   208bc:	b880038f 	ldh	r2,14(r23)
   208c0:	103f3a16 	blt	r2,zero,205ac <___vfprintf_internal_r+0xa4>
   208c4:	d9c02d17 	ldw	r7,180(sp)
   208c8:	d9002c17 	ldw	r4,176(sp)
   208cc:	a80d883a 	mov	r6,r21
   208d0:	b80b883a 	mov	r5,r23
   208d4:	002271c0 	call	2271c <__sbprintf>
   208d8:	00001106 	br	20920 <___vfprintf_internal_r+0x418>
   208dc:	d9002c17 	ldw	r4,176(sp)
   208e0:	d9801e04 	addi	r6,sp,120
   208e4:	b80b883a 	mov	r5,r23
   208e8:	00270200 	call	27020 <__sprint_r>
   208ec:	1000081e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   208f0:	da000404 	addi	r8,sp,16
   208f4:	003f5306 	br	20644 <___vfprintf_internal_r+0x13c>
   208f8:	d8802017 	ldw	r2,128(sp)
   208fc:	10000426 	beq	r2,zero,20910 <___vfprintf_internal_r+0x408>
   20900:	d9002c17 	ldw	r4,176(sp)
   20904:	d9801e04 	addi	r6,sp,120
   20908:	b80b883a 	mov	r5,r23
   2090c:	00270200 	call	27020 <__sprint_r>
   20910:	b880030b 	ldhu	r2,12(r23)
   20914:	1080100c 	andi	r2,r2,64
   20918:	1005901e 	bne	r2,zero,21f5c <___vfprintf_internal_r+0x1a54>
   2091c:	d8802f17 	ldw	r2,188(sp)
   20920:	dfc04717 	ldw	ra,284(sp)
   20924:	df004617 	ldw	fp,280(sp)
   20928:	ddc04517 	ldw	r23,276(sp)
   2092c:	dd804417 	ldw	r22,272(sp)
   20930:	dd404317 	ldw	r21,268(sp)
   20934:	dd004217 	ldw	r20,264(sp)
   20938:	dcc04117 	ldw	r19,260(sp)
   2093c:	dc804017 	ldw	r18,256(sp)
   20940:	dc403f17 	ldw	r17,252(sp)
   20944:	dc003e17 	ldw	r16,248(sp)
   20948:	dec04804 	addi	sp,sp,288
   2094c:	f800283a 	ret
   20950:	d9002c17 	ldw	r4,176(sp)
   20954:	00247ac0 	call	247ac <__sinit>
   20958:	003f0406 	br	2056c <___vfprintf_internal_r+0x64>
   2095c:	d8802d17 	ldw	r2,180(sp)
   20960:	d9002d17 	ldw	r4,180(sp)
   20964:	10800017 	ldw	r2,0(r2)
   20968:	d8803115 	stw	r2,196(sp)
   2096c:	20800104 	addi	r2,r4,4
   20970:	d9003117 	ldw	r4,196(sp)
   20974:	203fa716 	blt	r4,zero,20814 <___vfprintf_internal_r+0x30c>
   20978:	d8802d15 	stw	r2,180(sp)
   2097c:	ac400007 	ldb	r17,0(r21)
   20980:	003f4206 	br	2068c <___vfprintf_internal_r+0x184>
   20984:	ac400007 	ldb	r17,0(r21)
   20988:	aac00044 	addi	r11,r21,1
   2098c:	8a872826 	beq	r17,r10,22630 <___vfprintf_internal_r+0x2128>
   20990:	88bff404 	addi	r2,r17,-48
   20994:	0009883a 	mov	r4,zero
   20998:	30867d36 	bltu	r6,r2,22390 <___vfprintf_internal_r+0x1e88>
   2099c:	5c400007 	ldb	r17,0(r11)
   209a0:	210002a4 	muli	r4,r4,10
   209a4:	5d400044 	addi	r21,r11,1
   209a8:	a817883a 	mov	r11,r21
   209ac:	2089883a 	add	r4,r4,r2
   209b0:	88bff404 	addi	r2,r17,-48
   209b4:	30bff92e 	bgeu	r6,r2,2099c <___vfprintf_internal_r+0x494>
   209b8:	2005c916 	blt	r4,zero,220e0 <___vfprintf_internal_r+0x1bd8>
   209bc:	d9002915 	stw	r4,164(sp)
   209c0:	003f3306 	br	20690 <___vfprintf_internal_r+0x188>
   209c4:	94802014 	ori	r18,r18,128
   209c8:	ac400007 	ldb	r17,0(r21)
   209cc:	003f2f06 	br	2068c <___vfprintf_internal_r+0x184>
   209d0:	a809883a 	mov	r4,r21
   209d4:	d8003115 	stw	zero,196(sp)
   209d8:	88bff404 	addi	r2,r17,-48
   209dc:	0017883a 	mov	r11,zero
   209e0:	24400007 	ldb	r17,0(r4)
   209e4:	5ac002a4 	muli	r11,r11,10
   209e8:	ad400044 	addi	r21,r21,1
   209ec:	a809883a 	mov	r4,r21
   209f0:	12d7883a 	add	r11,r2,r11
   209f4:	88bff404 	addi	r2,r17,-48
   209f8:	30bff92e 	bgeu	r6,r2,209e0 <___vfprintf_internal_r+0x4d8>
   209fc:	dac03115 	stw	r11,196(sp)
   20a00:	003f2306 	br	20690 <___vfprintf_internal_r+0x188>
   20a04:	18c03fcc 	andi	r3,r3,255
   20a08:	18072b1e 	bne	r3,zero,226b8 <___vfprintf_internal_r+0x21b0>
   20a0c:	94800414 	ori	r18,r18,16
   20a10:	9080080c 	andi	r2,r18,32
   20a14:	10037b26 	beq	r2,zero,21804 <___vfprintf_internal_r+0x12fc>
   20a18:	d9402d17 	ldw	r5,180(sp)
   20a1c:	28800117 	ldw	r2,4(r5)
   20a20:	2cc00017 	ldw	r19,0(r5)
   20a24:	29400204 	addi	r5,r5,8
   20a28:	d9402d15 	stw	r5,180(sp)
   20a2c:	102d883a 	mov	r22,r2
   20a30:	10044b16 	blt	r2,zero,21b60 <___vfprintf_internal_r+0x1658>
   20a34:	d9402917 	ldw	r5,164(sp)
   20a38:	df002783 	ldbu	fp,158(sp)
   20a3c:	2803bc16 	blt	r5,zero,21930 <___vfprintf_internal_r+0x1428>
   20a40:	00ffdfc4 	movi	r3,-129
   20a44:	9d84b03a 	or	r2,r19,r22
   20a48:	90e4703a 	and	r18,r18,r3
   20a4c:	10017726 	beq	r2,zero,2102c <___vfprintf_internal_r+0xb24>
   20a50:	b0038326 	beq	r22,zero,21860 <___vfprintf_internal_r+0x1358>
   20a54:	dc402a15 	stw	r17,168(sp)
   20a58:	dc001e04 	addi	r16,sp,120
   20a5c:	b023883a 	mov	r17,r22
   20a60:	402d883a 	mov	r22,r8
   20a64:	9809883a 	mov	r4,r19
   20a68:	880b883a 	mov	r5,r17
   20a6c:	01800284 	movi	r6,10
   20a70:	000f883a 	mov	r7,zero
   20a74:	0029f940 	call	29f94 <__umoddi3>
   20a78:	10800c04 	addi	r2,r2,48
   20a7c:	843fffc4 	addi	r16,r16,-1
   20a80:	9809883a 	mov	r4,r19
   20a84:	880b883a 	mov	r5,r17
   20a88:	80800005 	stb	r2,0(r16)
   20a8c:	01800284 	movi	r6,10
   20a90:	000f883a 	mov	r7,zero
   20a94:	0029a1c0 	call	29a1c <__udivdi3>
   20a98:	1027883a 	mov	r19,r2
   20a9c:	10c4b03a 	or	r2,r2,r3
   20aa0:	1823883a 	mov	r17,r3
   20aa4:	103fef1e 	bne	r2,zero,20a64 <___vfprintf_internal_r+0x55c>
   20aa8:	d8c02817 	ldw	r3,160(sp)
   20aac:	dc402a17 	ldw	r17,168(sp)
   20ab0:	b011883a 	mov	r8,r22
   20ab4:	1c07c83a 	sub	r3,r3,r16
   20ab8:	d8c02e15 	stw	r3,184(sp)
   20abc:	00005906 	br	20c24 <___vfprintf_internal_r+0x71c>
   20ac0:	18c03fcc 	andi	r3,r3,255
   20ac4:	1806fa1e 	bne	r3,zero,226b0 <___vfprintf_internal_r+0x21a8>
   20ac8:	9080020c 	andi	r2,r18,8
   20acc:	10048a26 	beq	r2,zero,21cf8 <___vfprintf_internal_r+0x17f0>
   20ad0:	d8c02d17 	ldw	r3,180(sp)
   20ad4:	d9002d17 	ldw	r4,180(sp)
   20ad8:	d9402d17 	ldw	r5,180(sp)
   20adc:	18c00017 	ldw	r3,0(r3)
   20ae0:	21000117 	ldw	r4,4(r4)
   20ae4:	29400204 	addi	r5,r5,8
   20ae8:	d8c03615 	stw	r3,216(sp)
   20aec:	d9003815 	stw	r4,224(sp)
   20af0:	d9402d15 	stw	r5,180(sp)
   20af4:	d9003617 	ldw	r4,216(sp)
   20af8:	d9403817 	ldw	r5,224(sp)
   20afc:	da003d15 	stw	r8,244(sp)
   20b00:	04000044 	movi	r16,1
   20b04:	0026bac0 	call	26bac <__fpclassifyd>
   20b08:	da003d17 	ldw	r8,244(sp)
   20b0c:	14041f1e 	bne	r2,r16,21b8c <___vfprintf_internal_r+0x1684>
   20b10:	d9003617 	ldw	r4,216(sp)
   20b14:	d9403817 	ldw	r5,224(sp)
   20b18:	000d883a 	mov	r6,zero
   20b1c:	000f883a 	mov	r7,zero
   20b20:	002b9780 	call	2b978 <__ledf2>
   20b24:	da003d17 	ldw	r8,244(sp)
   20b28:	1005be16 	blt	r2,zero,22224 <___vfprintf_internal_r+0x1d1c>
   20b2c:	df002783 	ldbu	fp,158(sp)
   20b30:	008011c4 	movi	r2,71
   20b34:	1445330e 	bge	r2,r17,22004 <___vfprintf_internal_r+0x1afc>
   20b38:	04000034 	movhi	r16,0
   20b3c:	84000104 	addi	r16,r16,4
   20b40:	00c000c4 	movi	r3,3
   20b44:	00bfdfc4 	movi	r2,-129
   20b48:	d8c02a15 	stw	r3,168(sp)
   20b4c:	90a4703a 	and	r18,r18,r2
   20b50:	d8c02e15 	stw	r3,184(sp)
   20b54:	d8002915 	stw	zero,164(sp)
   20b58:	d8003215 	stw	zero,200(sp)
   20b5c:	00003706 	br	20c3c <___vfprintf_internal_r+0x734>
   20b60:	94800214 	ori	r18,r18,8
   20b64:	ac400007 	ldb	r17,0(r21)
   20b68:	003ec806 	br	2068c <___vfprintf_internal_r+0x184>
   20b6c:	18c03fcc 	andi	r3,r3,255
   20b70:	1806db1e 	bne	r3,zero,226e0 <___vfprintf_internal_r+0x21d8>
   20b74:	94800414 	ori	r18,r18,16
   20b78:	9080080c 	andi	r2,r18,32
   20b7c:	1002d826 	beq	r2,zero,216e0 <___vfprintf_internal_r+0x11d8>
   20b80:	d9402d17 	ldw	r5,180(sp)
   20b84:	d8c02917 	ldw	r3,164(sp)
   20b88:	d8002785 	stb	zero,158(sp)
   20b8c:	28800204 	addi	r2,r5,8
   20b90:	2cc00017 	ldw	r19,0(r5)
   20b94:	2d800117 	ldw	r22,4(r5)
   20b98:	18048f16 	blt	r3,zero,21dd8 <___vfprintf_internal_r+0x18d0>
   20b9c:	013fdfc4 	movi	r4,-129
   20ba0:	9d86b03a 	or	r3,r19,r22
   20ba4:	d8802d15 	stw	r2,180(sp)
   20ba8:	9124703a 	and	r18,r18,r4
   20bac:	1802d91e 	bne	r3,zero,21714 <___vfprintf_internal_r+0x120c>
   20bb0:	d8c02917 	ldw	r3,164(sp)
   20bb4:	0039883a 	mov	fp,zero
   20bb8:	1805c326 	beq	r3,zero,222c8 <___vfprintf_internal_r+0x1dc0>
   20bbc:	0027883a 	mov	r19,zero
   20bc0:	002d883a 	mov	r22,zero
   20bc4:	dc001e04 	addi	r16,sp,120
   20bc8:	9806d0fa 	srli	r3,r19,3
   20bcc:	b008977a 	slli	r4,r22,29
   20bd0:	b02cd0fa 	srli	r22,r22,3
   20bd4:	9cc001cc 	andi	r19,r19,7
   20bd8:	98800c04 	addi	r2,r19,48
   20bdc:	843fffc4 	addi	r16,r16,-1
   20be0:	20e6b03a 	or	r19,r4,r3
   20be4:	80800005 	stb	r2,0(r16)
   20be8:	9d86b03a 	or	r3,r19,r22
   20bec:	183ff61e 	bne	r3,zero,20bc8 <___vfprintf_internal_r+0x6c0>
   20bf0:	90c0004c 	andi	r3,r18,1
   20bf4:	18013b26 	beq	r3,zero,210e4 <___vfprintf_internal_r+0xbdc>
   20bf8:	10803fcc 	andi	r2,r2,255
   20bfc:	1080201c 	xori	r2,r2,128
   20c00:	10bfe004 	addi	r2,r2,-128
   20c04:	00c00c04 	movi	r3,48
   20c08:	10c13626 	beq	r2,r3,210e4 <___vfprintf_internal_r+0xbdc>
   20c0c:	80ffffc5 	stb	r3,-1(r16)
   20c10:	d8c02817 	ldw	r3,160(sp)
   20c14:	80bfffc4 	addi	r2,r16,-1
   20c18:	1021883a 	mov	r16,r2
   20c1c:	1887c83a 	sub	r3,r3,r2
   20c20:	d8c02e15 	stw	r3,184(sp)
   20c24:	d8802e17 	ldw	r2,184(sp)
   20c28:	d9002917 	ldw	r4,164(sp)
   20c2c:	1100010e 	bge	r2,r4,20c34 <___vfprintf_internal_r+0x72c>
   20c30:	2005883a 	mov	r2,r4
   20c34:	d8802a15 	stw	r2,168(sp)
   20c38:	d8003215 	stw	zero,200(sp)
   20c3c:	e7003fcc 	andi	fp,fp,255
   20c40:	e700201c 	xori	fp,fp,128
   20c44:	e73fe004 	addi	fp,fp,-128
   20c48:	e0000326 	beq	fp,zero,20c58 <___vfprintf_internal_r+0x750>
   20c4c:	d8c02a17 	ldw	r3,168(sp)
   20c50:	18c00044 	addi	r3,r3,1
   20c54:	d8c02a15 	stw	r3,168(sp)
   20c58:	90c0008c 	andi	r3,r18,2
   20c5c:	d8c02b15 	stw	r3,172(sp)
   20c60:	18000326 	beq	r3,zero,20c70 <___vfprintf_internal_r+0x768>
   20c64:	d8c02a17 	ldw	r3,168(sp)
   20c68:	18c00084 	addi	r3,r3,2
   20c6c:	d8c02a15 	stw	r3,168(sp)
   20c70:	90c0210c 	andi	r3,r18,132
   20c74:	d8c03015 	stw	r3,192(sp)
   20c78:	1801a31e 	bne	r3,zero,21308 <___vfprintf_internal_r+0xe00>
   20c7c:	d9003117 	ldw	r4,196(sp)
   20c80:	d8c02a17 	ldw	r3,168(sp)
   20c84:	20e7c83a 	sub	r19,r4,r3
   20c88:	04c19f0e 	bge	zero,r19,21308 <___vfprintf_internal_r+0xe00>
   20c8c:	02400404 	movi	r9,16
   20c90:	d8c02017 	ldw	r3,128(sp)
   20c94:	d8801f17 	ldw	r2,124(sp)
   20c98:	4cc50d0e 	bge	r9,r19,220d0 <___vfprintf_internal_r+0x1bc8>
   20c9c:	01400034 	movhi	r5,0
   20ca0:	29401484 	addi	r5,r5,82
   20ca4:	dc403b15 	stw	r17,236(sp)
   20ca8:	d9403515 	stw	r5,212(sp)
   20cac:	9823883a 	mov	r17,r19
   20cb0:	482d883a 	mov	r22,r9
   20cb4:	9027883a 	mov	r19,r18
   20cb8:	070001c4 	movi	fp,7
   20cbc:	8025883a 	mov	r18,r16
   20cc0:	dc002c17 	ldw	r16,176(sp)
   20cc4:	00000306 	br	20cd4 <___vfprintf_internal_r+0x7cc>
   20cc8:	8c7ffc04 	addi	r17,r17,-16
   20ccc:	42000204 	addi	r8,r8,8
   20cd0:	b440130e 	bge	r22,r17,20d20 <___vfprintf_internal_r+0x818>
   20cd4:	01000034 	movhi	r4,0
   20cd8:	18c00404 	addi	r3,r3,16
   20cdc:	10800044 	addi	r2,r2,1
   20ce0:	21001484 	addi	r4,r4,82
   20ce4:	41000015 	stw	r4,0(r8)
   20ce8:	45800115 	stw	r22,4(r8)
   20cec:	d8c02015 	stw	r3,128(sp)
   20cf0:	d8801f15 	stw	r2,124(sp)
   20cf4:	e0bff40e 	bge	fp,r2,20cc8 <___vfprintf_internal_r+0x7c0>
   20cf8:	d9801e04 	addi	r6,sp,120
   20cfc:	b80b883a 	mov	r5,r23
   20d00:	8009883a 	mov	r4,r16
   20d04:	00270200 	call	27020 <__sprint_r>
   20d08:	103f011e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   20d0c:	8c7ffc04 	addi	r17,r17,-16
   20d10:	d8c02017 	ldw	r3,128(sp)
   20d14:	d8801f17 	ldw	r2,124(sp)
   20d18:	da000404 	addi	r8,sp,16
   20d1c:	b47fed16 	blt	r22,r17,20cd4 <___vfprintf_internal_r+0x7cc>
   20d20:	9021883a 	mov	r16,r18
   20d24:	9825883a 	mov	r18,r19
   20d28:	8827883a 	mov	r19,r17
   20d2c:	dc403b17 	ldw	r17,236(sp)
   20d30:	d9403517 	ldw	r5,212(sp)
   20d34:	98c7883a 	add	r3,r19,r3
   20d38:	10800044 	addi	r2,r2,1
   20d3c:	41400015 	stw	r5,0(r8)
   20d40:	44c00115 	stw	r19,4(r8)
   20d44:	d8c02015 	stw	r3,128(sp)
   20d48:	d8801f15 	stw	r2,124(sp)
   20d4c:	010001c4 	movi	r4,7
   20d50:	2082a316 	blt	r4,r2,217e0 <___vfprintf_internal_r+0x12d8>
   20d54:	df002787 	ldb	fp,158(sp)
   20d58:	42000204 	addi	r8,r8,8
   20d5c:	e0000c26 	beq	fp,zero,20d90 <___vfprintf_internal_r+0x888>
   20d60:	d8801f17 	ldw	r2,124(sp)
   20d64:	d9002784 	addi	r4,sp,158
   20d68:	18c00044 	addi	r3,r3,1
   20d6c:	10800044 	addi	r2,r2,1
   20d70:	41000015 	stw	r4,0(r8)
   20d74:	01000044 	movi	r4,1
   20d78:	41000115 	stw	r4,4(r8)
   20d7c:	d8c02015 	stw	r3,128(sp)
   20d80:	d8801f15 	stw	r2,124(sp)
   20d84:	010001c4 	movi	r4,7
   20d88:	20823c16 	blt	r4,r2,2167c <___vfprintf_internal_r+0x1174>
   20d8c:	42000204 	addi	r8,r8,8
   20d90:	d8802b17 	ldw	r2,172(sp)
   20d94:	10000c26 	beq	r2,zero,20dc8 <___vfprintf_internal_r+0x8c0>
   20d98:	d8801f17 	ldw	r2,124(sp)
   20d9c:	d9002704 	addi	r4,sp,156
   20da0:	18c00084 	addi	r3,r3,2
   20da4:	10800044 	addi	r2,r2,1
   20da8:	41000015 	stw	r4,0(r8)
   20dac:	01000084 	movi	r4,2
   20db0:	41000115 	stw	r4,4(r8)
   20db4:	d8c02015 	stw	r3,128(sp)
   20db8:	d8801f15 	stw	r2,124(sp)
   20dbc:	010001c4 	movi	r4,7
   20dc0:	20823616 	blt	r4,r2,2169c <___vfprintf_internal_r+0x1194>
   20dc4:	42000204 	addi	r8,r8,8
   20dc8:	d9003017 	ldw	r4,192(sp)
   20dcc:	00802004 	movi	r2,128
   20dd0:	20819926 	beq	r4,r2,21438 <___vfprintf_internal_r+0xf30>
   20dd4:	d9402917 	ldw	r5,164(sp)
   20dd8:	d8802e17 	ldw	r2,184(sp)
   20ddc:	28adc83a 	sub	r22,r5,r2
   20de0:	0580310e 	bge	zero,r22,20ea8 <___vfprintf_internal_r+0x9a0>
   20de4:	07000404 	movi	fp,16
   20de8:	d8801f17 	ldw	r2,124(sp)
   20dec:	e584140e 	bge	fp,r22,21e40 <___vfprintf_internal_r+0x1938>
   20df0:	01400034 	movhi	r5,0
   20df4:	29401084 	addi	r5,r5,66
   20df8:	dc402915 	stw	r17,164(sp)
   20dfc:	d9402b15 	stw	r5,172(sp)
   20e00:	b023883a 	mov	r17,r22
   20e04:	04c001c4 	movi	r19,7
   20e08:	a82d883a 	mov	r22,r21
   20e0c:	902b883a 	mov	r21,r18
   20e10:	8025883a 	mov	r18,r16
   20e14:	dc002c17 	ldw	r16,176(sp)
   20e18:	00000306 	br	20e28 <___vfprintf_internal_r+0x920>
   20e1c:	8c7ffc04 	addi	r17,r17,-16
   20e20:	42000204 	addi	r8,r8,8
   20e24:	e440110e 	bge	fp,r17,20e6c <___vfprintf_internal_r+0x964>
   20e28:	18c00404 	addi	r3,r3,16
   20e2c:	10800044 	addi	r2,r2,1
   20e30:	45000015 	stw	r20,0(r8)
   20e34:	47000115 	stw	fp,4(r8)
   20e38:	d8c02015 	stw	r3,128(sp)
   20e3c:	d8801f15 	stw	r2,124(sp)
   20e40:	98bff60e 	bge	r19,r2,20e1c <___vfprintf_internal_r+0x914>
   20e44:	d9801e04 	addi	r6,sp,120
   20e48:	b80b883a 	mov	r5,r23
   20e4c:	8009883a 	mov	r4,r16
   20e50:	00270200 	call	27020 <__sprint_r>
   20e54:	103eae1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   20e58:	8c7ffc04 	addi	r17,r17,-16
   20e5c:	d8c02017 	ldw	r3,128(sp)
   20e60:	d8801f17 	ldw	r2,124(sp)
   20e64:	da000404 	addi	r8,sp,16
   20e68:	e47fef16 	blt	fp,r17,20e28 <___vfprintf_internal_r+0x920>
   20e6c:	9021883a 	mov	r16,r18
   20e70:	a825883a 	mov	r18,r21
   20e74:	b02b883a 	mov	r21,r22
   20e78:	882d883a 	mov	r22,r17
   20e7c:	dc402917 	ldw	r17,164(sp)
   20e80:	d9002b17 	ldw	r4,172(sp)
   20e84:	1d87883a 	add	r3,r3,r22
   20e88:	10800044 	addi	r2,r2,1
   20e8c:	41000015 	stw	r4,0(r8)
   20e90:	45800115 	stw	r22,4(r8)
   20e94:	d8c02015 	stw	r3,128(sp)
   20e98:	d8801f15 	stw	r2,124(sp)
   20e9c:	010001c4 	movi	r4,7
   20ea0:	2081ee16 	blt	r4,r2,2165c <___vfprintf_internal_r+0x1154>
   20ea4:	42000204 	addi	r8,r8,8
   20ea8:	9080400c 	andi	r2,r18,256
   20eac:	1001181e 	bne	r2,zero,21310 <___vfprintf_internal_r+0xe08>
   20eb0:	d9402e17 	ldw	r5,184(sp)
   20eb4:	d8801f17 	ldw	r2,124(sp)
   20eb8:	44000015 	stw	r16,0(r8)
   20ebc:	1947883a 	add	r3,r3,r5
   20ec0:	10800044 	addi	r2,r2,1
   20ec4:	41400115 	stw	r5,4(r8)
   20ec8:	d8c02015 	stw	r3,128(sp)
   20ecc:	d8801f15 	stw	r2,124(sp)
   20ed0:	010001c4 	movi	r4,7
   20ed4:	2081d316 	blt	r4,r2,21624 <___vfprintf_internal_r+0x111c>
   20ed8:	42000204 	addi	r8,r8,8
   20edc:	9480010c 	andi	r18,r18,4
   20ee0:	90003226 	beq	r18,zero,20fac <___vfprintf_internal_r+0xaa4>
   20ee4:	d9403117 	ldw	r5,196(sp)
   20ee8:	d8802a17 	ldw	r2,168(sp)
   20eec:	28a1c83a 	sub	r16,r5,r2
   20ef0:	04002e0e 	bge	zero,r16,20fac <___vfprintf_internal_r+0xaa4>
   20ef4:	04400404 	movi	r17,16
   20ef8:	d8801f17 	ldw	r2,124(sp)
   20efc:	8c04a20e 	bge	r17,r16,22188 <___vfprintf_internal_r+0x1c80>
   20f00:	01400034 	movhi	r5,0
   20f04:	29401484 	addi	r5,r5,82
   20f08:	d9403515 	stw	r5,212(sp)
   20f0c:	048001c4 	movi	r18,7
   20f10:	dcc02c17 	ldw	r19,176(sp)
   20f14:	00000306 	br	20f24 <___vfprintf_internal_r+0xa1c>
   20f18:	843ffc04 	addi	r16,r16,-16
   20f1c:	42000204 	addi	r8,r8,8
   20f20:	8c00130e 	bge	r17,r16,20f70 <___vfprintf_internal_r+0xa68>
   20f24:	01000034 	movhi	r4,0
   20f28:	18c00404 	addi	r3,r3,16
   20f2c:	10800044 	addi	r2,r2,1
   20f30:	21001484 	addi	r4,r4,82
   20f34:	41000015 	stw	r4,0(r8)
   20f38:	44400115 	stw	r17,4(r8)
   20f3c:	d8c02015 	stw	r3,128(sp)
   20f40:	d8801f15 	stw	r2,124(sp)
   20f44:	90bff40e 	bge	r18,r2,20f18 <___vfprintf_internal_r+0xa10>
   20f48:	d9801e04 	addi	r6,sp,120
   20f4c:	b80b883a 	mov	r5,r23
   20f50:	9809883a 	mov	r4,r19
   20f54:	00270200 	call	27020 <__sprint_r>
   20f58:	103e6d1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   20f5c:	843ffc04 	addi	r16,r16,-16
   20f60:	d8c02017 	ldw	r3,128(sp)
   20f64:	d8801f17 	ldw	r2,124(sp)
   20f68:	da000404 	addi	r8,sp,16
   20f6c:	8c3fed16 	blt	r17,r16,20f24 <___vfprintf_internal_r+0xa1c>
   20f70:	d9403517 	ldw	r5,212(sp)
   20f74:	1c07883a 	add	r3,r3,r16
   20f78:	10800044 	addi	r2,r2,1
   20f7c:	41400015 	stw	r5,0(r8)
   20f80:	44000115 	stw	r16,4(r8)
   20f84:	d8c02015 	stw	r3,128(sp)
   20f88:	d8801f15 	stw	r2,124(sp)
   20f8c:	010001c4 	movi	r4,7
   20f90:	2080060e 	bge	r4,r2,20fac <___vfprintf_internal_r+0xaa4>
   20f94:	d9002c17 	ldw	r4,176(sp)
   20f98:	d9801e04 	addi	r6,sp,120
   20f9c:	b80b883a 	mov	r5,r23
   20fa0:	00270200 	call	27020 <__sprint_r>
   20fa4:	103e5a1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   20fa8:	d8c02017 	ldw	r3,128(sp)
   20fac:	d8803117 	ldw	r2,196(sp)
   20fb0:	d9002a17 	ldw	r4,168(sp)
   20fb4:	1100010e 	bge	r2,r4,20fbc <___vfprintf_internal_r+0xab4>
   20fb8:	2005883a 	mov	r2,r4
   20fbc:	d9402f17 	ldw	r5,188(sp)
   20fc0:	288b883a 	add	r5,r5,r2
   20fc4:	d9402f15 	stw	r5,188(sp)
   20fc8:	18019e1e 	bne	r3,zero,21644 <___vfprintf_internal_r+0x113c>
   20fcc:	a8800007 	ldb	r2,0(r21)
   20fd0:	d8001f15 	stw	zero,124(sp)
   20fd4:	da000404 	addi	r8,sp,16
   20fd8:	103d851e 	bne	r2,zero,205f0 <___vfprintf_internal_r+0xe8>
   20fdc:	a821883a 	mov	r16,r21
   20fe0:	003d9b06 	br	20650 <___vfprintf_internal_r+0x148>
   20fe4:	18c03fcc 	andi	r3,r3,255
   20fe8:	1805c11e 	bne	r3,zero,226f0 <___vfprintf_internal_r+0x21e8>
   20fec:	94800414 	ori	r18,r18,16
   20ff0:	9080080c 	andi	r2,r18,32
   20ff4:	10020c26 	beq	r2,zero,21828 <___vfprintf_internal_r+0x1320>
   20ff8:	d8802d17 	ldw	r2,180(sp)
   20ffc:	d9002917 	ldw	r4,164(sp)
   21000:	d8002785 	stb	zero,158(sp)
   21004:	10c00204 	addi	r3,r2,8
   21008:	14c00017 	ldw	r19,0(r2)
   2100c:	15800117 	ldw	r22,4(r2)
   21010:	20040f16 	blt	r4,zero,22050 <___vfprintf_internal_r+0x1b48>
   21014:	013fdfc4 	movi	r4,-129
   21018:	9d84b03a 	or	r2,r19,r22
   2101c:	d8c02d15 	stw	r3,180(sp)
   21020:	9124703a 	and	r18,r18,r4
   21024:	0039883a 	mov	fp,zero
   21028:	103e891e 	bne	r2,zero,20a50 <___vfprintf_internal_r+0x548>
   2102c:	d9002917 	ldw	r4,164(sp)
   21030:	2002c11e 	bne	r4,zero,21b38 <___vfprintf_internal_r+0x1630>
   21034:	d8002915 	stw	zero,164(sp)
   21038:	d8002e15 	stw	zero,184(sp)
   2103c:	dc001e04 	addi	r16,sp,120
   21040:	003ef806 	br	20c24 <___vfprintf_internal_r+0x71c>
   21044:	18c03fcc 	andi	r3,r3,255
   21048:	18059d1e 	bne	r3,zero,226c0 <___vfprintf_internal_r+0x21b8>
   2104c:	01400034 	movhi	r5,0
   21050:	29400404 	addi	r5,r5,16
   21054:	d9403915 	stw	r5,228(sp)
   21058:	9080080c 	andi	r2,r18,32
   2105c:	10005226 	beq	r2,zero,211a8 <___vfprintf_internal_r+0xca0>
   21060:	d8802d17 	ldw	r2,180(sp)
   21064:	14c00017 	ldw	r19,0(r2)
   21068:	15800117 	ldw	r22,4(r2)
   2106c:	10800204 	addi	r2,r2,8
   21070:	d8802d15 	stw	r2,180(sp)
   21074:	9080004c 	andi	r2,r18,1
   21078:	10019026 	beq	r2,zero,216bc <___vfprintf_internal_r+0x11b4>
   2107c:	9d84b03a 	or	r2,r19,r22
   21080:	10036926 	beq	r2,zero,21e28 <___vfprintf_internal_r+0x1920>
   21084:	d8c02917 	ldw	r3,164(sp)
   21088:	00800c04 	movi	r2,48
   2108c:	d8802705 	stb	r2,156(sp)
   21090:	dc402745 	stb	r17,157(sp)
   21094:	d8002785 	stb	zero,158(sp)
   21098:	90800094 	ori	r2,r18,2
   2109c:	18045d16 	blt	r3,zero,22214 <___vfprintf_internal_r+0x1d0c>
   210a0:	00bfdfc4 	movi	r2,-129
   210a4:	90a4703a 	and	r18,r18,r2
   210a8:	94800094 	ori	r18,r18,2
   210ac:	0039883a 	mov	fp,zero
   210b0:	d9003917 	ldw	r4,228(sp)
   210b4:	dc001e04 	addi	r16,sp,120
   210b8:	988003cc 	andi	r2,r19,15
   210bc:	b006973a 	slli	r3,r22,28
   210c0:	2085883a 	add	r2,r4,r2
   210c4:	9826d13a 	srli	r19,r19,4
   210c8:	10800003 	ldbu	r2,0(r2)
   210cc:	b02cd13a 	srli	r22,r22,4
   210d0:	843fffc4 	addi	r16,r16,-1
   210d4:	1ce6b03a 	or	r19,r3,r19
   210d8:	80800005 	stb	r2,0(r16)
   210dc:	9d84b03a 	or	r2,r19,r22
   210e0:	103ff51e 	bne	r2,zero,210b8 <___vfprintf_internal_r+0xbb0>
   210e4:	d8c02817 	ldw	r3,160(sp)
   210e8:	1c07c83a 	sub	r3,r3,r16
   210ec:	d8c02e15 	stw	r3,184(sp)
   210f0:	003ecc06 	br	20c24 <___vfprintf_internal_r+0x71c>
   210f4:	18c03fcc 	andi	r3,r3,255
   210f8:	183e9f26 	beq	r3,zero,20b78 <___vfprintf_internal_r+0x670>
   210fc:	d9c02785 	stb	r7,158(sp)
   21100:	003e9d06 	br	20b78 <___vfprintf_internal_r+0x670>
   21104:	00c00044 	movi	r3,1
   21108:	01c00ac4 	movi	r7,43
   2110c:	ac400007 	ldb	r17,0(r21)
   21110:	003d5e06 	br	2068c <___vfprintf_internal_r+0x184>
   21114:	94800814 	ori	r18,r18,32
   21118:	ac400007 	ldb	r17,0(r21)
   2111c:	003d5b06 	br	2068c <___vfprintf_internal_r+0x184>
   21120:	d8c02d17 	ldw	r3,180(sp)
   21124:	d8002785 	stb	zero,158(sp)
   21128:	1c000017 	ldw	r16,0(r3)
   2112c:	1cc00104 	addi	r19,r3,4
   21130:	80041926 	beq	r16,zero,22198 <___vfprintf_internal_r+0x1c90>
   21134:	d9002917 	ldw	r4,164(sp)
   21138:	2003d016 	blt	r4,zero,2207c <___vfprintf_internal_r+0x1b74>
   2113c:	200d883a 	mov	r6,r4
   21140:	000b883a 	mov	r5,zero
   21144:	8009883a 	mov	r4,r16
   21148:	da003d15 	stw	r8,244(sp)
   2114c:	002585c0 	call	2585c <memchr>
   21150:	da003d17 	ldw	r8,244(sp)
   21154:	10045426 	beq	r2,zero,222a8 <___vfprintf_internal_r+0x1da0>
   21158:	1405c83a 	sub	r2,r2,r16
   2115c:	d8802e15 	stw	r2,184(sp)
   21160:	1003cc16 	blt	r2,zero,22094 <___vfprintf_internal_r+0x1b8c>
   21164:	df002783 	ldbu	fp,158(sp)
   21168:	d8802a15 	stw	r2,168(sp)
   2116c:	dcc02d15 	stw	r19,180(sp)
   21170:	d8002915 	stw	zero,164(sp)
   21174:	d8003215 	stw	zero,200(sp)
   21178:	003eb006 	br	20c3c <___vfprintf_internal_r+0x734>
   2117c:	18c03fcc 	andi	r3,r3,255
   21180:	183f9b26 	beq	r3,zero,20ff0 <___vfprintf_internal_r+0xae8>
   21184:	d9c02785 	stb	r7,158(sp)
   21188:	003f9906 	br	20ff0 <___vfprintf_internal_r+0xae8>
   2118c:	18c03fcc 	andi	r3,r3,255
   21190:	1805551e 	bne	r3,zero,226e8 <___vfprintf_internal_r+0x21e0>
   21194:	01400034 	movhi	r5,0
   21198:	29400904 	addi	r5,r5,36
   2119c:	d9403915 	stw	r5,228(sp)
   211a0:	9080080c 	andi	r2,r18,32
   211a4:	103fae1e 	bne	r2,zero,21060 <___vfprintf_internal_r+0xb58>
   211a8:	9080040c 	andi	r2,r18,16
   211ac:	1002de26 	beq	r2,zero,21d28 <___vfprintf_internal_r+0x1820>
   211b0:	d8c02d17 	ldw	r3,180(sp)
   211b4:	002d883a 	mov	r22,zero
   211b8:	1cc00017 	ldw	r19,0(r3)
   211bc:	18c00104 	addi	r3,r3,4
   211c0:	d8c02d15 	stw	r3,180(sp)
   211c4:	003fab06 	br	21074 <___vfprintf_internal_r+0xb6c>
   211c8:	38803fcc 	andi	r2,r7,255
   211cc:	1080201c 	xori	r2,r2,128
   211d0:	10bfe004 	addi	r2,r2,-128
   211d4:	1002d21e 	bne	r2,zero,21d20 <___vfprintf_internal_r+0x1818>
   211d8:	00c00044 	movi	r3,1
   211dc:	01c00804 	movi	r7,32
   211e0:	ac400007 	ldb	r17,0(r21)
   211e4:	003d2906 	br	2068c <___vfprintf_internal_r+0x184>
   211e8:	94800054 	ori	r18,r18,1
   211ec:	ac400007 	ldb	r17,0(r21)
   211f0:	003d2606 	br	2068c <___vfprintf_internal_r+0x184>
   211f4:	18c03fcc 	andi	r3,r3,255
   211f8:	183e0526 	beq	r3,zero,20a10 <___vfprintf_internal_r+0x508>
   211fc:	d9c02785 	stb	r7,158(sp)
   21200:	003e0306 	br	20a10 <___vfprintf_internal_r+0x508>
   21204:	94801014 	ori	r18,r18,64
   21208:	ac400007 	ldb	r17,0(r21)
   2120c:	003d1f06 	br	2068c <___vfprintf_internal_r+0x184>
   21210:	ac400007 	ldb	r17,0(r21)
   21214:	8a438726 	beq	r17,r9,22034 <___vfprintf_internal_r+0x1b2c>
   21218:	94800414 	ori	r18,r18,16
   2121c:	003d1b06 	br	2068c <___vfprintf_internal_r+0x184>
   21220:	18c03fcc 	andi	r3,r3,255
   21224:	1805341e 	bne	r3,zero,226f8 <___vfprintf_internal_r+0x21f0>
   21228:	9080080c 	andi	r2,r18,32
   2122c:	1002cd26 	beq	r2,zero,21d64 <___vfprintf_internal_r+0x185c>
   21230:	d9402d17 	ldw	r5,180(sp)
   21234:	d9002f17 	ldw	r4,188(sp)
   21238:	28800017 	ldw	r2,0(r5)
   2123c:	2007d7fa 	srai	r3,r4,31
   21240:	29400104 	addi	r5,r5,4
   21244:	d9402d15 	stw	r5,180(sp)
   21248:	11000015 	stw	r4,0(r2)
   2124c:	10c00115 	stw	r3,4(r2)
   21250:	003ce506 	br	205e8 <___vfprintf_internal_r+0xe0>
   21254:	d8c02d17 	ldw	r3,180(sp)
   21258:	d9002d17 	ldw	r4,180(sp)
   2125c:	d8002785 	stb	zero,158(sp)
   21260:	18800017 	ldw	r2,0(r3)
   21264:	21000104 	addi	r4,r4,4
   21268:	00c00044 	movi	r3,1
   2126c:	d8c02a15 	stw	r3,168(sp)
   21270:	d8801405 	stb	r2,80(sp)
   21274:	d9002d15 	stw	r4,180(sp)
   21278:	d8c02e15 	stw	r3,184(sp)
   2127c:	d8002915 	stw	zero,164(sp)
   21280:	d8003215 	stw	zero,200(sp)
   21284:	dc001404 	addi	r16,sp,80
   21288:	0039883a 	mov	fp,zero
   2128c:	003e7206 	br	20c58 <___vfprintf_internal_r+0x750>
   21290:	01000034 	movhi	r4,0
   21294:	21000904 	addi	r4,r4,36
   21298:	0039883a 	mov	fp,zero
   2129c:	d9003915 	stw	r4,228(sp)
   212a0:	04401e04 	movi	r17,120
   212a4:	003f8206 	br	210b0 <___vfprintf_internal_r+0xba8>
   212a8:	18c03fcc 	andi	r3,r3,255
   212ac:	1805061e 	bne	r3,zero,226c8 <___vfprintf_internal_r+0x21c0>
   212b0:	883d9126 	beq	r17,zero,208f8 <___vfprintf_internal_r+0x3f0>
   212b4:	00c00044 	movi	r3,1
   212b8:	d8c02a15 	stw	r3,168(sp)
   212bc:	dc401405 	stb	r17,80(sp)
   212c0:	d8002785 	stb	zero,158(sp)
   212c4:	003fec06 	br	21278 <___vfprintf_internal_r+0xd70>
   212c8:	01400034 	movhi	r5,0
   212cc:	29400904 	addi	r5,r5,36
   212d0:	d9403915 	stw	r5,228(sp)
   212d4:	d8c02d15 	stw	r3,180(sp)
   212d8:	1025883a 	mov	r18,r2
   212dc:	04401e04 	movi	r17,120
   212e0:	9d84b03a 	or	r2,r19,r22
   212e4:	1000fc1e 	bne	r2,zero,216d8 <___vfprintf_internal_r+0x11d0>
   212e8:	0039883a 	mov	fp,zero
   212ec:	00800084 	movi	r2,2
   212f0:	10803fcc 	andi	r2,r2,255
   212f4:	00c00044 	movi	r3,1
   212f8:	10c20f26 	beq	r2,r3,21b38 <___vfprintf_internal_r+0x1630>
   212fc:	00c00084 	movi	r3,2
   21300:	10fd6326 	beq	r2,r3,20890 <___vfprintf_internal_r+0x388>
   21304:	003e2d06 	br	20bbc <___vfprintf_internal_r+0x6b4>
   21308:	d8c02017 	ldw	r3,128(sp)
   2130c:	003e9306 	br	20d5c <___vfprintf_internal_r+0x854>
   21310:	00801944 	movi	r2,101
   21314:	14407e0e 	bge	r2,r17,21510 <___vfprintf_internal_r+0x1008>
   21318:	d9003617 	ldw	r4,216(sp)
   2131c:	d9403817 	ldw	r5,224(sp)
   21320:	000d883a 	mov	r6,zero
   21324:	000f883a 	mov	r7,zero
   21328:	d8c03c15 	stw	r3,240(sp)
   2132c:	da003d15 	stw	r8,244(sp)
   21330:	002b8140 	call	2b814 <__eqdf2>
   21334:	d8c03c17 	ldw	r3,240(sp)
   21338:	da003d17 	ldw	r8,244(sp)
   2133c:	1000f71e 	bne	r2,zero,2171c <___vfprintf_internal_r+0x1214>
   21340:	d8801f17 	ldw	r2,124(sp)
   21344:	01000034 	movhi	r4,0
   21348:	21001004 	addi	r4,r4,64
   2134c:	18c00044 	addi	r3,r3,1
   21350:	10800044 	addi	r2,r2,1
   21354:	41000015 	stw	r4,0(r8)
   21358:	01000044 	movi	r4,1
   2135c:	41000115 	stw	r4,4(r8)
   21360:	d8c02015 	stw	r3,128(sp)
   21364:	d8801f15 	stw	r2,124(sp)
   21368:	010001c4 	movi	r4,7
   2136c:	2082b816 	blt	r4,r2,21e50 <___vfprintf_internal_r+0x1948>
   21370:	42000204 	addi	r8,r8,8
   21374:	d8802617 	ldw	r2,152(sp)
   21378:	d9403317 	ldw	r5,204(sp)
   2137c:	11400216 	blt	r2,r5,21388 <___vfprintf_internal_r+0xe80>
   21380:	9080004c 	andi	r2,r18,1
   21384:	103ed526 	beq	r2,zero,20edc <___vfprintf_internal_r+0x9d4>
   21388:	d8803717 	ldw	r2,220(sp)
   2138c:	d9003417 	ldw	r4,208(sp)
   21390:	d9403717 	ldw	r5,220(sp)
   21394:	1887883a 	add	r3,r3,r2
   21398:	d8801f17 	ldw	r2,124(sp)
   2139c:	41000015 	stw	r4,0(r8)
   213a0:	41400115 	stw	r5,4(r8)
   213a4:	10800044 	addi	r2,r2,1
   213a8:	d8c02015 	stw	r3,128(sp)
   213ac:	d8801f15 	stw	r2,124(sp)
   213b0:	010001c4 	movi	r4,7
   213b4:	20832916 	blt	r4,r2,2205c <___vfprintf_internal_r+0x1b54>
   213b8:	42000204 	addi	r8,r8,8
   213bc:	d8803317 	ldw	r2,204(sp)
   213c0:	143fffc4 	addi	r16,r2,-1
   213c4:	043ec50e 	bge	zero,r16,20edc <___vfprintf_internal_r+0x9d4>
   213c8:	04400404 	movi	r17,16
   213cc:	d8801f17 	ldw	r2,124(sp)
   213d0:	8c00880e 	bge	r17,r16,215f4 <___vfprintf_internal_r+0x10ec>
   213d4:	01400034 	movhi	r5,0
   213d8:	29401084 	addi	r5,r5,66
   213dc:	d9402b15 	stw	r5,172(sp)
   213e0:	058001c4 	movi	r22,7
   213e4:	dcc02c17 	ldw	r19,176(sp)
   213e8:	00000306 	br	213f8 <___vfprintf_internal_r+0xef0>
   213ec:	42000204 	addi	r8,r8,8
   213f0:	843ffc04 	addi	r16,r16,-16
   213f4:	8c00820e 	bge	r17,r16,21600 <___vfprintf_internal_r+0x10f8>
   213f8:	18c00404 	addi	r3,r3,16
   213fc:	10800044 	addi	r2,r2,1
   21400:	45000015 	stw	r20,0(r8)
   21404:	44400115 	stw	r17,4(r8)
   21408:	d8c02015 	stw	r3,128(sp)
   2140c:	d8801f15 	stw	r2,124(sp)
   21410:	b0bff60e 	bge	r22,r2,213ec <___vfprintf_internal_r+0xee4>
   21414:	d9801e04 	addi	r6,sp,120
   21418:	b80b883a 	mov	r5,r23
   2141c:	9809883a 	mov	r4,r19
   21420:	00270200 	call	27020 <__sprint_r>
   21424:	103d3a1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21428:	d8c02017 	ldw	r3,128(sp)
   2142c:	d8801f17 	ldw	r2,124(sp)
   21430:	da000404 	addi	r8,sp,16
   21434:	003fee06 	br	213f0 <___vfprintf_internal_r+0xee8>
   21438:	d9403117 	ldw	r5,196(sp)
   2143c:	d8802a17 	ldw	r2,168(sp)
   21440:	28adc83a 	sub	r22,r5,r2
   21444:	05be630e 	bge	zero,r22,20dd4 <___vfprintf_internal_r+0x8cc>
   21448:	07000404 	movi	fp,16
   2144c:	d8801f17 	ldw	r2,124(sp)
   21450:	e5838f0e 	bge	fp,r22,22290 <___vfprintf_internal_r+0x1d88>
   21454:	01400034 	movhi	r5,0
   21458:	29401084 	addi	r5,r5,66
   2145c:	dc403015 	stw	r17,192(sp)
   21460:	d9402b15 	stw	r5,172(sp)
   21464:	b023883a 	mov	r17,r22
   21468:	04c001c4 	movi	r19,7
   2146c:	a82d883a 	mov	r22,r21
   21470:	902b883a 	mov	r21,r18
   21474:	8025883a 	mov	r18,r16
   21478:	dc002c17 	ldw	r16,176(sp)
   2147c:	00000306 	br	2148c <___vfprintf_internal_r+0xf84>
   21480:	8c7ffc04 	addi	r17,r17,-16
   21484:	42000204 	addi	r8,r8,8
   21488:	e440110e 	bge	fp,r17,214d0 <___vfprintf_internal_r+0xfc8>
   2148c:	18c00404 	addi	r3,r3,16
   21490:	10800044 	addi	r2,r2,1
   21494:	45000015 	stw	r20,0(r8)
   21498:	47000115 	stw	fp,4(r8)
   2149c:	d8c02015 	stw	r3,128(sp)
   214a0:	d8801f15 	stw	r2,124(sp)
   214a4:	98bff60e 	bge	r19,r2,21480 <___vfprintf_internal_r+0xf78>
   214a8:	d9801e04 	addi	r6,sp,120
   214ac:	b80b883a 	mov	r5,r23
   214b0:	8009883a 	mov	r4,r16
   214b4:	00270200 	call	27020 <__sprint_r>
   214b8:	103d151e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   214bc:	8c7ffc04 	addi	r17,r17,-16
   214c0:	d8c02017 	ldw	r3,128(sp)
   214c4:	d8801f17 	ldw	r2,124(sp)
   214c8:	da000404 	addi	r8,sp,16
   214cc:	e47fef16 	blt	fp,r17,2148c <___vfprintf_internal_r+0xf84>
   214d0:	9021883a 	mov	r16,r18
   214d4:	a825883a 	mov	r18,r21
   214d8:	b02b883a 	mov	r21,r22
   214dc:	882d883a 	mov	r22,r17
   214e0:	dc403017 	ldw	r17,192(sp)
   214e4:	d9002b17 	ldw	r4,172(sp)
   214e8:	1d87883a 	add	r3,r3,r22
   214ec:	10800044 	addi	r2,r2,1
   214f0:	41000015 	stw	r4,0(r8)
   214f4:	45800115 	stw	r22,4(r8)
   214f8:	d8c02015 	stw	r3,128(sp)
   214fc:	d8801f15 	stw	r2,124(sp)
   21500:	010001c4 	movi	r4,7
   21504:	20818e16 	blt	r4,r2,21b40 <___vfprintf_internal_r+0x1638>
   21508:	42000204 	addi	r8,r8,8
   2150c:	003e3106 	br	20dd4 <___vfprintf_internal_r+0x8cc>
   21510:	d9403317 	ldw	r5,204(sp)
   21514:	00800044 	movi	r2,1
   21518:	18c00044 	addi	r3,r3,1
   2151c:	1141530e 	bge	r2,r5,21a6c <___vfprintf_internal_r+0x1564>
   21520:	dc401f17 	ldw	r17,124(sp)
   21524:	00800044 	movi	r2,1
   21528:	40800115 	stw	r2,4(r8)
   2152c:	8c400044 	addi	r17,r17,1
   21530:	44000015 	stw	r16,0(r8)
   21534:	d8c02015 	stw	r3,128(sp)
   21538:	dc401f15 	stw	r17,124(sp)
   2153c:	008001c4 	movi	r2,7
   21540:	14416b16 	blt	r2,r17,21af0 <___vfprintf_internal_r+0x15e8>
   21544:	42000204 	addi	r8,r8,8
   21548:	d8803717 	ldw	r2,220(sp)
   2154c:	d9003417 	ldw	r4,208(sp)
   21550:	8c400044 	addi	r17,r17,1
   21554:	10c7883a 	add	r3,r2,r3
   21558:	40800115 	stw	r2,4(r8)
   2155c:	41000015 	stw	r4,0(r8)
   21560:	d8c02015 	stw	r3,128(sp)
   21564:	dc401f15 	stw	r17,124(sp)
   21568:	008001c4 	movi	r2,7
   2156c:	14416916 	blt	r2,r17,21b14 <___vfprintf_internal_r+0x160c>
   21570:	45800204 	addi	r22,r8,8
   21574:	d9003617 	ldw	r4,216(sp)
   21578:	d9403817 	ldw	r5,224(sp)
   2157c:	000d883a 	mov	r6,zero
   21580:	000f883a 	mov	r7,zero
   21584:	d8c03c15 	stw	r3,240(sp)
   21588:	002b8140 	call	2b814 <__eqdf2>
   2158c:	d8c03c17 	ldw	r3,240(sp)
   21590:	1000bc26 	beq	r2,zero,21884 <___vfprintf_internal_r+0x137c>
   21594:	d9403317 	ldw	r5,204(sp)
   21598:	84000044 	addi	r16,r16,1
   2159c:	8c400044 	addi	r17,r17,1
   215a0:	28bfffc4 	addi	r2,r5,-1
   215a4:	1887883a 	add	r3,r3,r2
   215a8:	b0800115 	stw	r2,4(r22)
   215ac:	b4000015 	stw	r16,0(r22)
   215b0:	d8c02015 	stw	r3,128(sp)
   215b4:	dc401f15 	stw	r17,124(sp)
   215b8:	008001c4 	movi	r2,7
   215bc:	14414316 	blt	r2,r17,21acc <___vfprintf_internal_r+0x15c4>
   215c0:	b5800204 	addi	r22,r22,8
   215c4:	d9003a17 	ldw	r4,232(sp)
   215c8:	df0022c4 	addi	fp,sp,139
   215cc:	8c400044 	addi	r17,r17,1
   215d0:	20c7883a 	add	r3,r4,r3
   215d4:	b7000015 	stw	fp,0(r22)
   215d8:	b1000115 	stw	r4,4(r22)
   215dc:	d8c02015 	stw	r3,128(sp)
   215e0:	dc401f15 	stw	r17,124(sp)
   215e4:	008001c4 	movi	r2,7
   215e8:	14400e16 	blt	r2,r17,21624 <___vfprintf_internal_r+0x111c>
   215ec:	b2000204 	addi	r8,r22,8
   215f0:	003e3a06 	br	20edc <___vfprintf_internal_r+0x9d4>
   215f4:	01000034 	movhi	r4,0
   215f8:	21001084 	addi	r4,r4,66
   215fc:	d9002b15 	stw	r4,172(sp)
   21600:	d9002b17 	ldw	r4,172(sp)
   21604:	1c07883a 	add	r3,r3,r16
   21608:	44000115 	stw	r16,4(r8)
   2160c:	41000015 	stw	r4,0(r8)
   21610:	10800044 	addi	r2,r2,1
   21614:	d8c02015 	stw	r3,128(sp)
   21618:	d8801f15 	stw	r2,124(sp)
   2161c:	010001c4 	movi	r4,7
   21620:	20be2d0e 	bge	r4,r2,20ed8 <___vfprintf_internal_r+0x9d0>
   21624:	d9002c17 	ldw	r4,176(sp)
   21628:	d9801e04 	addi	r6,sp,120
   2162c:	b80b883a 	mov	r5,r23
   21630:	00270200 	call	27020 <__sprint_r>
   21634:	103cb61e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21638:	d8c02017 	ldw	r3,128(sp)
   2163c:	da000404 	addi	r8,sp,16
   21640:	003e2606 	br	20edc <___vfprintf_internal_r+0x9d4>
   21644:	d9002c17 	ldw	r4,176(sp)
   21648:	d9801e04 	addi	r6,sp,120
   2164c:	b80b883a 	mov	r5,r23
   21650:	00270200 	call	27020 <__sprint_r>
   21654:	103e5d26 	beq	r2,zero,20fcc <___vfprintf_internal_r+0xac4>
   21658:	003cad06 	br	20910 <___vfprintf_internal_r+0x408>
   2165c:	d9002c17 	ldw	r4,176(sp)
   21660:	d9801e04 	addi	r6,sp,120
   21664:	b80b883a 	mov	r5,r23
   21668:	00270200 	call	27020 <__sprint_r>
   2166c:	103ca81e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21670:	d8c02017 	ldw	r3,128(sp)
   21674:	da000404 	addi	r8,sp,16
   21678:	003e0b06 	br	20ea8 <___vfprintf_internal_r+0x9a0>
   2167c:	d9002c17 	ldw	r4,176(sp)
   21680:	d9801e04 	addi	r6,sp,120
   21684:	b80b883a 	mov	r5,r23
   21688:	00270200 	call	27020 <__sprint_r>
   2168c:	103ca01e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21690:	d8c02017 	ldw	r3,128(sp)
   21694:	da000404 	addi	r8,sp,16
   21698:	003dbd06 	br	20d90 <___vfprintf_internal_r+0x888>
   2169c:	d9002c17 	ldw	r4,176(sp)
   216a0:	d9801e04 	addi	r6,sp,120
   216a4:	b80b883a 	mov	r5,r23
   216a8:	00270200 	call	27020 <__sprint_r>
   216ac:	103c981e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   216b0:	d8c02017 	ldw	r3,128(sp)
   216b4:	da000404 	addi	r8,sp,16
   216b8:	003dc306 	br	20dc8 <___vfprintf_internal_r+0x8c0>
   216bc:	d8802917 	ldw	r2,164(sp)
   216c0:	d8002785 	stb	zero,158(sp)
   216c4:	103f0616 	blt	r2,zero,212e0 <___vfprintf_internal_r+0xdd8>
   216c8:	00ffdfc4 	movi	r3,-129
   216cc:	9d84b03a 	or	r2,r19,r22
   216d0:	90e4703a 	and	r18,r18,r3
   216d4:	103c6b26 	beq	r2,zero,20884 <___vfprintf_internal_r+0x37c>
   216d8:	0039883a 	mov	fp,zero
   216dc:	003e7406 	br	210b0 <___vfprintf_internal_r+0xba8>
   216e0:	9080040c 	andi	r2,r18,16
   216e4:	1001b326 	beq	r2,zero,21db4 <___vfprintf_internal_r+0x18ac>
   216e8:	d9002d17 	ldw	r4,180(sp)
   216ec:	d9402917 	ldw	r5,164(sp)
   216f0:	d8002785 	stb	zero,158(sp)
   216f4:	20800104 	addi	r2,r4,4
   216f8:	24c00017 	ldw	r19,0(r4)
   216fc:	002d883a 	mov	r22,zero
   21700:	2801b516 	blt	r5,zero,21dd8 <___vfprintf_internal_r+0x18d0>
   21704:	00ffdfc4 	movi	r3,-129
   21708:	d8802d15 	stw	r2,180(sp)
   2170c:	90e4703a 	and	r18,r18,r3
   21710:	983d2726 	beq	r19,zero,20bb0 <___vfprintf_internal_r+0x6a8>
   21714:	0039883a 	mov	fp,zero
   21718:	003d2a06 	br	20bc4 <___vfprintf_internal_r+0x6bc>
   2171c:	dc402617 	ldw	r17,152(sp)
   21720:	0441d30e 	bge	zero,r17,21e70 <___vfprintf_internal_r+0x1968>
   21724:	dc403217 	ldw	r17,200(sp)
   21728:	d8803317 	ldw	r2,204(sp)
   2172c:	1440010e 	bge	r2,r17,21734 <___vfprintf_internal_r+0x122c>
   21730:	1023883a 	mov	r17,r2
   21734:	04400a0e 	bge	zero,r17,21760 <___vfprintf_internal_r+0x1258>
   21738:	d8801f17 	ldw	r2,124(sp)
   2173c:	1c47883a 	add	r3,r3,r17
   21740:	44000015 	stw	r16,0(r8)
   21744:	10800044 	addi	r2,r2,1
   21748:	44400115 	stw	r17,4(r8)
   2174c:	d8c02015 	stw	r3,128(sp)
   21750:	d8801f15 	stw	r2,124(sp)
   21754:	010001c4 	movi	r4,7
   21758:	20826516 	blt	r4,r2,220f0 <___vfprintf_internal_r+0x1be8>
   2175c:	42000204 	addi	r8,r8,8
   21760:	88026116 	blt	r17,zero,220e8 <___vfprintf_internal_r+0x1be0>
   21764:	d9003217 	ldw	r4,200(sp)
   21768:	2463c83a 	sub	r17,r4,r17
   2176c:	04407b0e 	bge	zero,r17,2195c <___vfprintf_internal_r+0x1454>
   21770:	05800404 	movi	r22,16
   21774:	d8801f17 	ldw	r2,124(sp)
   21778:	b4419d0e 	bge	r22,r17,21df0 <___vfprintf_internal_r+0x18e8>
   2177c:	01000034 	movhi	r4,0
   21780:	21001084 	addi	r4,r4,66
   21784:	d9002b15 	stw	r4,172(sp)
   21788:	070001c4 	movi	fp,7
   2178c:	dcc02c17 	ldw	r19,176(sp)
   21790:	00000306 	br	217a0 <___vfprintf_internal_r+0x1298>
   21794:	42000204 	addi	r8,r8,8
   21798:	8c7ffc04 	addi	r17,r17,-16
   2179c:	b441970e 	bge	r22,r17,21dfc <___vfprintf_internal_r+0x18f4>
   217a0:	18c00404 	addi	r3,r3,16
   217a4:	10800044 	addi	r2,r2,1
   217a8:	45000015 	stw	r20,0(r8)
   217ac:	45800115 	stw	r22,4(r8)
   217b0:	d8c02015 	stw	r3,128(sp)
   217b4:	d8801f15 	stw	r2,124(sp)
   217b8:	e0bff60e 	bge	fp,r2,21794 <___vfprintf_internal_r+0x128c>
   217bc:	d9801e04 	addi	r6,sp,120
   217c0:	b80b883a 	mov	r5,r23
   217c4:	9809883a 	mov	r4,r19
   217c8:	00270200 	call	27020 <__sprint_r>
   217cc:	103c501e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   217d0:	d8c02017 	ldw	r3,128(sp)
   217d4:	d8801f17 	ldw	r2,124(sp)
   217d8:	da000404 	addi	r8,sp,16
   217dc:	003fee06 	br	21798 <___vfprintf_internal_r+0x1290>
   217e0:	d9002c17 	ldw	r4,176(sp)
   217e4:	d9801e04 	addi	r6,sp,120
   217e8:	b80b883a 	mov	r5,r23
   217ec:	00270200 	call	27020 <__sprint_r>
   217f0:	103c471e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   217f4:	d8c02017 	ldw	r3,128(sp)
   217f8:	df002787 	ldb	fp,158(sp)
   217fc:	da000404 	addi	r8,sp,16
   21800:	003d5606 	br	20d5c <___vfprintf_internal_r+0x854>
   21804:	9080040c 	andi	r2,r18,16
   21808:	10016126 	beq	r2,zero,21d90 <___vfprintf_internal_r+0x1888>
   2180c:	d8802d17 	ldw	r2,180(sp)
   21810:	14c00017 	ldw	r19,0(r2)
   21814:	10800104 	addi	r2,r2,4
   21818:	d8802d15 	stw	r2,180(sp)
   2181c:	982dd7fa 	srai	r22,r19,31
   21820:	b005883a 	mov	r2,r22
   21824:	003c8206 	br	20a30 <___vfprintf_internal_r+0x528>
   21828:	9080040c 	andi	r2,r18,16
   2182c:	10003526 	beq	r2,zero,21904 <___vfprintf_internal_r+0x13fc>
   21830:	d9402d17 	ldw	r5,180(sp)
   21834:	d8c02917 	ldw	r3,164(sp)
   21838:	d8002785 	stb	zero,158(sp)
   2183c:	28800104 	addi	r2,r5,4
   21840:	2cc00017 	ldw	r19,0(r5)
   21844:	002d883a 	mov	r22,zero
   21848:	18003716 	blt	r3,zero,21928 <___vfprintf_internal_r+0x1420>
   2184c:	00ffdfc4 	movi	r3,-129
   21850:	d8802d15 	stw	r2,180(sp)
   21854:	90e4703a 	and	r18,r18,r3
   21858:	0039883a 	mov	fp,zero
   2185c:	983df326 	beq	r19,zero,2102c <___vfprintf_internal_r+0xb24>
   21860:	00800244 	movi	r2,9
   21864:	14fc7b36 	bltu	r2,r19,20a54 <___vfprintf_internal_r+0x54c>
   21868:	d8c02817 	ldw	r3,160(sp)
   2186c:	dc001dc4 	addi	r16,sp,119
   21870:	9cc00c04 	addi	r19,r19,48
   21874:	1c07c83a 	sub	r3,r3,r16
   21878:	dcc01dc5 	stb	r19,119(sp)
   2187c:	d8c02e15 	stw	r3,184(sp)
   21880:	003ce806 	br	20c24 <___vfprintf_internal_r+0x71c>
   21884:	d8803317 	ldw	r2,204(sp)
   21888:	143fffc4 	addi	r16,r2,-1
   2188c:	043f4d0e 	bge	zero,r16,215c4 <___vfprintf_internal_r+0x10bc>
   21890:	07000404 	movi	fp,16
   21894:	e400810e 	bge	fp,r16,21a9c <___vfprintf_internal_r+0x1594>
   21898:	01400034 	movhi	r5,0
   2189c:	29401084 	addi	r5,r5,66
   218a0:	d9402b15 	stw	r5,172(sp)
   218a4:	01c001c4 	movi	r7,7
   218a8:	dcc02c17 	ldw	r19,176(sp)
   218ac:	00000306 	br	218bc <___vfprintf_internal_r+0x13b4>
   218b0:	b5800204 	addi	r22,r22,8
   218b4:	843ffc04 	addi	r16,r16,-16
   218b8:	e4007b0e 	bge	fp,r16,21aa8 <___vfprintf_internal_r+0x15a0>
   218bc:	18c00404 	addi	r3,r3,16
   218c0:	8c400044 	addi	r17,r17,1
   218c4:	b5000015 	stw	r20,0(r22)
   218c8:	b7000115 	stw	fp,4(r22)
   218cc:	d8c02015 	stw	r3,128(sp)
   218d0:	dc401f15 	stw	r17,124(sp)
   218d4:	3c7ff60e 	bge	r7,r17,218b0 <___vfprintf_internal_r+0x13a8>
   218d8:	d9801e04 	addi	r6,sp,120
   218dc:	b80b883a 	mov	r5,r23
   218e0:	9809883a 	mov	r4,r19
   218e4:	d9c03c15 	stw	r7,240(sp)
   218e8:	00270200 	call	27020 <__sprint_r>
   218ec:	d9c03c17 	ldw	r7,240(sp)
   218f0:	103c071e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   218f4:	d8c02017 	ldw	r3,128(sp)
   218f8:	dc401f17 	ldw	r17,124(sp)
   218fc:	dd800404 	addi	r22,sp,16
   21900:	003fec06 	br	218b4 <___vfprintf_internal_r+0x13ac>
   21904:	9080100c 	andi	r2,r18,64
   21908:	d8002785 	stb	zero,158(sp)
   2190c:	10010e26 	beq	r2,zero,21d48 <___vfprintf_internal_r+0x1840>
   21910:	d9002d17 	ldw	r4,180(sp)
   21914:	d9402917 	ldw	r5,164(sp)
   21918:	002d883a 	mov	r22,zero
   2191c:	20800104 	addi	r2,r4,4
   21920:	24c0000b 	ldhu	r19,0(r4)
   21924:	283fc90e 	bge	r5,zero,2184c <___vfprintf_internal_r+0x1344>
   21928:	d8802d15 	stw	r2,180(sp)
   2192c:	0039883a 	mov	fp,zero
   21930:	9d84b03a 	or	r2,r19,r22
   21934:	103c461e 	bne	r2,zero,20a50 <___vfprintf_internal_r+0x548>
   21938:	00800044 	movi	r2,1
   2193c:	003e6c06 	br	212f0 <___vfprintf_internal_r+0xde8>
   21940:	d9002c17 	ldw	r4,176(sp)
   21944:	d9801e04 	addi	r6,sp,120
   21948:	b80b883a 	mov	r5,r23
   2194c:	00270200 	call	27020 <__sprint_r>
   21950:	103bef1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21954:	d8c02017 	ldw	r3,128(sp)
   21958:	da000404 	addi	r8,sp,16
   2195c:	d9003217 	ldw	r4,200(sp)
   21960:	d8802617 	ldw	r2,152(sp)
   21964:	d9403317 	ldw	r5,204(sp)
   21968:	8123883a 	add	r17,r16,r4
   2196c:	11400216 	blt	r2,r5,21978 <___vfprintf_internal_r+0x1470>
   21970:	9100004c 	andi	r4,r18,1
   21974:	20000d26 	beq	r4,zero,219ac <___vfprintf_internal_r+0x14a4>
   21978:	d9003717 	ldw	r4,220(sp)
   2197c:	d9403417 	ldw	r5,208(sp)
   21980:	1907883a 	add	r3,r3,r4
   21984:	d9001f17 	ldw	r4,124(sp)
   21988:	41400015 	stw	r5,0(r8)
   2198c:	d9403717 	ldw	r5,220(sp)
   21990:	21000044 	addi	r4,r4,1
   21994:	d8c02015 	stw	r3,128(sp)
   21998:	41400115 	stw	r5,4(r8)
   2199c:	d9001f15 	stw	r4,124(sp)
   219a0:	014001c4 	movi	r5,7
   219a4:	2901e816 	blt	r5,r4,22148 <___vfprintf_internal_r+0x1c40>
   219a8:	42000204 	addi	r8,r8,8
   219ac:	d9003317 	ldw	r4,204(sp)
   219b0:	8121883a 	add	r16,r16,r4
   219b4:	2085c83a 	sub	r2,r4,r2
   219b8:	8461c83a 	sub	r16,r16,r17
   219bc:	1400010e 	bge	r2,r16,219c4 <___vfprintf_internal_r+0x14bc>
   219c0:	1021883a 	mov	r16,r2
   219c4:	04000a0e 	bge	zero,r16,219f0 <___vfprintf_internal_r+0x14e8>
   219c8:	d9001f17 	ldw	r4,124(sp)
   219cc:	1c07883a 	add	r3,r3,r16
   219d0:	44400015 	stw	r17,0(r8)
   219d4:	21000044 	addi	r4,r4,1
   219d8:	44000115 	stw	r16,4(r8)
   219dc:	d8c02015 	stw	r3,128(sp)
   219e0:	d9001f15 	stw	r4,124(sp)
   219e4:	014001c4 	movi	r5,7
   219e8:	2901fb16 	blt	r5,r4,221d8 <___vfprintf_internal_r+0x1cd0>
   219ec:	42000204 	addi	r8,r8,8
   219f0:	8001f716 	blt	r16,zero,221d0 <___vfprintf_internal_r+0x1cc8>
   219f4:	1421c83a 	sub	r16,r2,r16
   219f8:	043d380e 	bge	zero,r16,20edc <___vfprintf_internal_r+0x9d4>
   219fc:	04400404 	movi	r17,16
   21a00:	d8801f17 	ldw	r2,124(sp)
   21a04:	8c3efb0e 	bge	r17,r16,215f4 <___vfprintf_internal_r+0x10ec>
   21a08:	01400034 	movhi	r5,0
   21a0c:	29401084 	addi	r5,r5,66
   21a10:	d9402b15 	stw	r5,172(sp)
   21a14:	058001c4 	movi	r22,7
   21a18:	dcc02c17 	ldw	r19,176(sp)
   21a1c:	00000306 	br	21a2c <___vfprintf_internal_r+0x1524>
   21a20:	42000204 	addi	r8,r8,8
   21a24:	843ffc04 	addi	r16,r16,-16
   21a28:	8c3ef50e 	bge	r17,r16,21600 <___vfprintf_internal_r+0x10f8>
   21a2c:	18c00404 	addi	r3,r3,16
   21a30:	10800044 	addi	r2,r2,1
   21a34:	45000015 	stw	r20,0(r8)
   21a38:	44400115 	stw	r17,4(r8)
   21a3c:	d8c02015 	stw	r3,128(sp)
   21a40:	d8801f15 	stw	r2,124(sp)
   21a44:	b0bff60e 	bge	r22,r2,21a20 <___vfprintf_internal_r+0x1518>
   21a48:	d9801e04 	addi	r6,sp,120
   21a4c:	b80b883a 	mov	r5,r23
   21a50:	9809883a 	mov	r4,r19
   21a54:	00270200 	call	27020 <__sprint_r>
   21a58:	103bad1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21a5c:	d8c02017 	ldw	r3,128(sp)
   21a60:	d8801f17 	ldw	r2,124(sp)
   21a64:	da000404 	addi	r8,sp,16
   21a68:	003fee06 	br	21a24 <___vfprintf_internal_r+0x151c>
   21a6c:	9088703a 	and	r4,r18,r2
   21a70:	203eab1e 	bne	r4,zero,21520 <___vfprintf_internal_r+0x1018>
   21a74:	dc401f17 	ldw	r17,124(sp)
   21a78:	40800115 	stw	r2,4(r8)
   21a7c:	44000015 	stw	r16,0(r8)
   21a80:	8c400044 	addi	r17,r17,1
   21a84:	d8c02015 	stw	r3,128(sp)
   21a88:	dc401f15 	stw	r17,124(sp)
   21a8c:	008001c4 	movi	r2,7
   21a90:	14400e16 	blt	r2,r17,21acc <___vfprintf_internal_r+0x15c4>
   21a94:	45800204 	addi	r22,r8,8
   21a98:	003eca06 	br	215c4 <___vfprintf_internal_r+0x10bc>
   21a9c:	01000034 	movhi	r4,0
   21aa0:	21001084 	addi	r4,r4,66
   21aa4:	d9002b15 	stw	r4,172(sp)
   21aa8:	d8802b17 	ldw	r2,172(sp)
   21aac:	1c07883a 	add	r3,r3,r16
   21ab0:	8c400044 	addi	r17,r17,1
   21ab4:	b0800015 	stw	r2,0(r22)
   21ab8:	b4000115 	stw	r16,4(r22)
   21abc:	d8c02015 	stw	r3,128(sp)
   21ac0:	dc401f15 	stw	r17,124(sp)
   21ac4:	008001c4 	movi	r2,7
   21ac8:	147ebd0e 	bge	r2,r17,215c0 <___vfprintf_internal_r+0x10b8>
   21acc:	d9002c17 	ldw	r4,176(sp)
   21ad0:	d9801e04 	addi	r6,sp,120
   21ad4:	b80b883a 	mov	r5,r23
   21ad8:	00270200 	call	27020 <__sprint_r>
   21adc:	103b8c1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21ae0:	d8c02017 	ldw	r3,128(sp)
   21ae4:	dc401f17 	ldw	r17,124(sp)
   21ae8:	dd800404 	addi	r22,sp,16
   21aec:	003eb506 	br	215c4 <___vfprintf_internal_r+0x10bc>
   21af0:	d9002c17 	ldw	r4,176(sp)
   21af4:	d9801e04 	addi	r6,sp,120
   21af8:	b80b883a 	mov	r5,r23
   21afc:	00270200 	call	27020 <__sprint_r>
   21b00:	103b831e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21b04:	d8c02017 	ldw	r3,128(sp)
   21b08:	dc401f17 	ldw	r17,124(sp)
   21b0c:	da000404 	addi	r8,sp,16
   21b10:	003e8d06 	br	21548 <___vfprintf_internal_r+0x1040>
   21b14:	d9002c17 	ldw	r4,176(sp)
   21b18:	d9801e04 	addi	r6,sp,120
   21b1c:	b80b883a 	mov	r5,r23
   21b20:	00270200 	call	27020 <__sprint_r>
   21b24:	103b7a1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21b28:	d8c02017 	ldw	r3,128(sp)
   21b2c:	dc401f17 	ldw	r17,124(sp)
   21b30:	dd800404 	addi	r22,sp,16
   21b34:	003e8f06 	br	21574 <___vfprintf_internal_r+0x106c>
   21b38:	0027883a 	mov	r19,zero
   21b3c:	003f4a06 	br	21868 <___vfprintf_internal_r+0x1360>
   21b40:	d9002c17 	ldw	r4,176(sp)
   21b44:	d9801e04 	addi	r6,sp,120
   21b48:	b80b883a 	mov	r5,r23
   21b4c:	00270200 	call	27020 <__sprint_r>
   21b50:	103b6f1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21b54:	d8c02017 	ldw	r3,128(sp)
   21b58:	da000404 	addi	r8,sp,16
   21b5c:	003c9d06 	br	20dd4 <___vfprintf_internal_r+0x8cc>
   21b60:	04e7c83a 	sub	r19,zero,r19
   21b64:	9804c03a 	cmpne	r2,r19,zero
   21b68:	05adc83a 	sub	r22,zero,r22
   21b6c:	b0adc83a 	sub	r22,r22,r2
   21b70:	d8802917 	ldw	r2,164(sp)
   21b74:	07000b44 	movi	fp,45
   21b78:	df002785 	stb	fp,158(sp)
   21b7c:	10017b16 	blt	r2,zero,2216c <___vfprintf_internal_r+0x1c64>
   21b80:	00bfdfc4 	movi	r2,-129
   21b84:	90a4703a 	and	r18,r18,r2
   21b88:	003bb106 	br	20a50 <___vfprintf_internal_r+0x548>
   21b8c:	d9003617 	ldw	r4,216(sp)
   21b90:	d9403817 	ldw	r5,224(sp)
   21b94:	da003d15 	stw	r8,244(sp)
   21b98:	0026bac0 	call	26bac <__fpclassifyd>
   21b9c:	da003d17 	ldw	r8,244(sp)
   21ba0:	1000f026 	beq	r2,zero,21f64 <___vfprintf_internal_r+0x1a5c>
   21ba4:	d9002917 	ldw	r4,164(sp)
   21ba8:	05bff7c4 	movi	r22,-33
   21bac:	00bfffc4 	movi	r2,-1
   21bb0:	8dac703a 	and	r22,r17,r22
   21bb4:	20820026 	beq	r4,r2,223b8 <___vfprintf_internal_r+0x1eb0>
   21bb8:	008011c4 	movi	r2,71
   21bbc:	b081f726 	beq	r22,r2,2239c <___vfprintf_internal_r+0x1e94>
   21bc0:	d9003817 	ldw	r4,224(sp)
   21bc4:	90c04014 	ori	r3,r18,256
   21bc8:	d8c02b15 	stw	r3,172(sp)
   21bcc:	20021516 	blt	r4,zero,22424 <___vfprintf_internal_r+0x1f1c>
   21bd0:	dcc03817 	ldw	r19,224(sp)
   21bd4:	d8002a05 	stb	zero,168(sp)
   21bd8:	00801984 	movi	r2,102
   21bdc:	8881f926 	beq	r17,r2,223c4 <___vfprintf_internal_r+0x1ebc>
   21be0:	00801184 	movi	r2,70
   21be4:	88821c26 	beq	r17,r2,22458 <___vfprintf_internal_r+0x1f50>
   21be8:	00801144 	movi	r2,69
   21bec:	b081ef26 	beq	r22,r2,223ac <___vfprintf_internal_r+0x1ea4>
   21bf0:	d8c02917 	ldw	r3,164(sp)
   21bf4:	d8802104 	addi	r2,sp,132
   21bf8:	d8800315 	stw	r2,12(sp)
   21bfc:	d9403617 	ldw	r5,216(sp)
   21c00:	d8802504 	addi	r2,sp,148
   21c04:	d9002c17 	ldw	r4,176(sp)
   21c08:	d8800215 	stw	r2,8(sp)
   21c0c:	d8802604 	addi	r2,sp,152
   21c10:	d8c00015 	stw	r3,0(sp)
   21c14:	d8800115 	stw	r2,4(sp)
   21c18:	01c00084 	movi	r7,2
   21c1c:	980d883a 	mov	r6,r19
   21c20:	d8c03c15 	stw	r3,240(sp)
   21c24:	da003d15 	stw	r8,244(sp)
   21c28:	0022b2c0 	call	22b2c <_dtoa_r>
   21c2c:	1021883a 	mov	r16,r2
   21c30:	008019c4 	movi	r2,103
   21c34:	d8c03c17 	ldw	r3,240(sp)
   21c38:	da003d17 	ldw	r8,244(sp)
   21c3c:	88817126 	beq	r17,r2,22204 <___vfprintf_internal_r+0x1cfc>
   21c40:	008011c4 	movi	r2,71
   21c44:	88829226 	beq	r17,r2,22690 <___vfprintf_internal_r+0x2188>
   21c48:	80f9883a 	add	fp,r16,r3
   21c4c:	d9003617 	ldw	r4,216(sp)
   21c50:	000d883a 	mov	r6,zero
   21c54:	000f883a 	mov	r7,zero
   21c58:	980b883a 	mov	r5,r19
   21c5c:	da003d15 	stw	r8,244(sp)
   21c60:	002b8140 	call	2b814 <__eqdf2>
   21c64:	da003d17 	ldw	r8,244(sp)
   21c68:	10018d26 	beq	r2,zero,222a0 <___vfprintf_internal_r+0x1d98>
   21c6c:	d8802117 	ldw	r2,132(sp)
   21c70:	1700062e 	bgeu	r2,fp,21c8c <___vfprintf_internal_r+0x1784>
   21c74:	01000c04 	movi	r4,48
   21c78:	10c00044 	addi	r3,r2,1
   21c7c:	d8c02115 	stw	r3,132(sp)
   21c80:	11000005 	stb	r4,0(r2)
   21c84:	d8802117 	ldw	r2,132(sp)
   21c88:	173ffb36 	bltu	r2,fp,21c78 <___vfprintf_internal_r+0x1770>
   21c8c:	1405c83a 	sub	r2,r2,r16
   21c90:	d8803315 	stw	r2,204(sp)
   21c94:	008011c4 	movi	r2,71
   21c98:	b0817626 	beq	r22,r2,22274 <___vfprintf_internal_r+0x1d6c>
   21c9c:	00801944 	movi	r2,101
   21ca0:	1442810e 	bge	r2,r17,226a8 <___vfprintf_internal_r+0x21a0>
   21ca4:	d8c02617 	ldw	r3,152(sp)
   21ca8:	00801984 	movi	r2,102
   21cac:	d8c03215 	stw	r3,200(sp)
   21cb0:	8881fe26 	beq	r17,r2,224ac <___vfprintf_internal_r+0x1fa4>
   21cb4:	d8c03217 	ldw	r3,200(sp)
   21cb8:	d9003317 	ldw	r4,204(sp)
   21cbc:	1901dd16 	blt	r3,r4,22434 <___vfprintf_internal_r+0x1f2c>
   21cc0:	9480004c 	andi	r18,r18,1
   21cc4:	90022b1e 	bne	r18,zero,22574 <___vfprintf_internal_r+0x206c>
   21cc8:	1805883a 	mov	r2,r3
   21ccc:	18028016 	blt	r3,zero,226d0 <___vfprintf_internal_r+0x21c8>
   21cd0:	d8c03217 	ldw	r3,200(sp)
   21cd4:	044019c4 	movi	r17,103
   21cd8:	d8c02e15 	stw	r3,184(sp)
   21cdc:	df002a07 	ldb	fp,168(sp)
   21ce0:	e001531e 	bne	fp,zero,22230 <___vfprintf_internal_r+0x1d28>
   21ce4:	df002783 	ldbu	fp,158(sp)
   21ce8:	d8802a15 	stw	r2,168(sp)
   21cec:	dc802b17 	ldw	r18,172(sp)
   21cf0:	d8002915 	stw	zero,164(sp)
   21cf4:	003bd106 	br	20c3c <___vfprintf_internal_r+0x734>
   21cf8:	d8802d17 	ldw	r2,180(sp)
   21cfc:	d8c02d17 	ldw	r3,180(sp)
   21d00:	d9002d17 	ldw	r4,180(sp)
   21d04:	10800017 	ldw	r2,0(r2)
   21d08:	18c00117 	ldw	r3,4(r3)
   21d0c:	21000204 	addi	r4,r4,8
   21d10:	d8803615 	stw	r2,216(sp)
   21d14:	d8c03815 	stw	r3,224(sp)
   21d18:	d9002d15 	stw	r4,180(sp)
   21d1c:	003b7506 	br	20af4 <___vfprintf_internal_r+0x5ec>
   21d20:	ac400007 	ldb	r17,0(r21)
   21d24:	003a5906 	br	2068c <___vfprintf_internal_r+0x184>
   21d28:	9080100c 	andi	r2,r18,64
   21d2c:	1000a826 	beq	r2,zero,21fd0 <___vfprintf_internal_r+0x1ac8>
   21d30:	d9002d17 	ldw	r4,180(sp)
   21d34:	002d883a 	mov	r22,zero
   21d38:	24c0000b 	ldhu	r19,0(r4)
   21d3c:	21000104 	addi	r4,r4,4
   21d40:	d9002d15 	stw	r4,180(sp)
   21d44:	003ccb06 	br	21074 <___vfprintf_internal_r+0xb6c>
   21d48:	d8c02d17 	ldw	r3,180(sp)
   21d4c:	d9002917 	ldw	r4,164(sp)
   21d50:	002d883a 	mov	r22,zero
   21d54:	18800104 	addi	r2,r3,4
   21d58:	1cc00017 	ldw	r19,0(r3)
   21d5c:	203ebb0e 	bge	r4,zero,2184c <___vfprintf_internal_r+0x1344>
   21d60:	003ef106 	br	21928 <___vfprintf_internal_r+0x1420>
   21d64:	9080040c 	andi	r2,r18,16
   21d68:	1000921e 	bne	r2,zero,21fb4 <___vfprintf_internal_r+0x1aac>
   21d6c:	9480100c 	andi	r18,r18,64
   21d70:	90013926 	beq	r18,zero,22258 <___vfprintf_internal_r+0x1d50>
   21d74:	d9002d17 	ldw	r4,180(sp)
   21d78:	d9402f17 	ldw	r5,188(sp)
   21d7c:	20800017 	ldw	r2,0(r4)
   21d80:	21000104 	addi	r4,r4,4
   21d84:	d9002d15 	stw	r4,180(sp)
   21d88:	1140000d 	sth	r5,0(r2)
   21d8c:	003a1606 	br	205e8 <___vfprintf_internal_r+0xe0>
   21d90:	9080100c 	andi	r2,r18,64
   21d94:	10008026 	beq	r2,zero,21f98 <___vfprintf_internal_r+0x1a90>
   21d98:	d8c02d17 	ldw	r3,180(sp)
   21d9c:	1cc0000f 	ldh	r19,0(r3)
   21da0:	18c00104 	addi	r3,r3,4
   21da4:	d8c02d15 	stw	r3,180(sp)
   21da8:	982dd7fa 	srai	r22,r19,31
   21dac:	b005883a 	mov	r2,r22
   21db0:	003b1f06 	br	20a30 <___vfprintf_internal_r+0x528>
   21db4:	9080100c 	andi	r2,r18,64
   21db8:	d8002785 	stb	zero,158(sp)
   21dbc:	10008a1e 	bne	r2,zero,21fe8 <___vfprintf_internal_r+0x1ae0>
   21dc0:	d9402d17 	ldw	r5,180(sp)
   21dc4:	d8c02917 	ldw	r3,164(sp)
   21dc8:	002d883a 	mov	r22,zero
   21dcc:	28800104 	addi	r2,r5,4
   21dd0:	2cc00017 	ldw	r19,0(r5)
   21dd4:	183e4b0e 	bge	r3,zero,21704 <___vfprintf_internal_r+0x11fc>
   21dd8:	9d86b03a 	or	r3,r19,r22
   21ddc:	d8802d15 	stw	r2,180(sp)
   21de0:	183e4c1e 	bne	r3,zero,21714 <___vfprintf_internal_r+0x120c>
   21de4:	0039883a 	mov	fp,zero
   21de8:	0005883a 	mov	r2,zero
   21dec:	003d4006 	br	212f0 <___vfprintf_internal_r+0xde8>
   21df0:	01400034 	movhi	r5,0
   21df4:	29401084 	addi	r5,r5,66
   21df8:	d9402b15 	stw	r5,172(sp)
   21dfc:	d9402b17 	ldw	r5,172(sp)
   21e00:	1c47883a 	add	r3,r3,r17
   21e04:	10800044 	addi	r2,r2,1
   21e08:	41400015 	stw	r5,0(r8)
   21e0c:	44400115 	stw	r17,4(r8)
   21e10:	d8c02015 	stw	r3,128(sp)
   21e14:	d8801f15 	stw	r2,124(sp)
   21e18:	010001c4 	movi	r4,7
   21e1c:	20bec816 	blt	r4,r2,21940 <___vfprintf_internal_r+0x1438>
   21e20:	42000204 	addi	r8,r8,8
   21e24:	003ecd06 	br	2195c <___vfprintf_internal_r+0x1454>
   21e28:	d9002917 	ldw	r4,164(sp)
   21e2c:	d8002785 	stb	zero,158(sp)
   21e30:	203d2d16 	blt	r4,zero,212e8 <___vfprintf_internal_r+0xde0>
   21e34:	00bfdfc4 	movi	r2,-129
   21e38:	90a4703a 	and	r18,r18,r2
   21e3c:	003a9106 	br	20884 <___vfprintf_internal_r+0x37c>
   21e40:	01000034 	movhi	r4,0
   21e44:	21001084 	addi	r4,r4,66
   21e48:	d9002b15 	stw	r4,172(sp)
   21e4c:	003c0c06 	br	20e80 <___vfprintf_internal_r+0x978>
   21e50:	d9002c17 	ldw	r4,176(sp)
   21e54:	d9801e04 	addi	r6,sp,120
   21e58:	b80b883a 	mov	r5,r23
   21e5c:	00270200 	call	27020 <__sprint_r>
   21e60:	103aab1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21e64:	d8c02017 	ldw	r3,128(sp)
   21e68:	da000404 	addi	r8,sp,16
   21e6c:	003d4106 	br	21374 <___vfprintf_internal_r+0xe6c>
   21e70:	d8801f17 	ldw	r2,124(sp)
   21e74:	01400034 	movhi	r5,0
   21e78:	01000044 	movi	r4,1
   21e7c:	18c00044 	addi	r3,r3,1
   21e80:	10800044 	addi	r2,r2,1
   21e84:	29401004 	addi	r5,r5,64
   21e88:	41000115 	stw	r4,4(r8)
   21e8c:	41400015 	stw	r5,0(r8)
   21e90:	d8c02015 	stw	r3,128(sp)
   21e94:	d8801f15 	stw	r2,124(sp)
   21e98:	010001c4 	movi	r4,7
   21e9c:	20805c16 	blt	r4,r2,22010 <___vfprintf_internal_r+0x1b08>
   21ea0:	42000204 	addi	r8,r8,8
   21ea4:	8800041e 	bne	r17,zero,21eb8 <___vfprintf_internal_r+0x19b0>
   21ea8:	d8803317 	ldw	r2,204(sp)
   21eac:	1000021e 	bne	r2,zero,21eb8 <___vfprintf_internal_r+0x19b0>
   21eb0:	9080004c 	andi	r2,r18,1
   21eb4:	103c0926 	beq	r2,zero,20edc <___vfprintf_internal_r+0x9d4>
   21eb8:	d9003717 	ldw	r4,220(sp)
   21ebc:	d8801f17 	ldw	r2,124(sp)
   21ec0:	d9403417 	ldw	r5,208(sp)
   21ec4:	20c7883a 	add	r3,r4,r3
   21ec8:	10800044 	addi	r2,r2,1
   21ecc:	41000115 	stw	r4,4(r8)
   21ed0:	41400015 	stw	r5,0(r8)
   21ed4:	d8c02015 	stw	r3,128(sp)
   21ed8:	d8801f15 	stw	r2,124(sp)
   21edc:	010001c4 	movi	r4,7
   21ee0:	20812116 	blt	r4,r2,22368 <___vfprintf_internal_r+0x1e60>
   21ee4:	42000204 	addi	r8,r8,8
   21ee8:	0463c83a 	sub	r17,zero,r17
   21eec:	0440730e 	bge	zero,r17,220bc <___vfprintf_internal_r+0x1bb4>
   21ef0:	05800404 	movi	r22,16
   21ef4:	b440860e 	bge	r22,r17,22110 <___vfprintf_internal_r+0x1c08>
   21ef8:	01400034 	movhi	r5,0
   21efc:	29401084 	addi	r5,r5,66
   21f00:	d9402b15 	stw	r5,172(sp)
   21f04:	070001c4 	movi	fp,7
   21f08:	dcc02c17 	ldw	r19,176(sp)
   21f0c:	00000306 	br	21f1c <___vfprintf_internal_r+0x1a14>
   21f10:	42000204 	addi	r8,r8,8
   21f14:	8c7ffc04 	addi	r17,r17,-16
   21f18:	b440800e 	bge	r22,r17,2211c <___vfprintf_internal_r+0x1c14>
   21f1c:	18c00404 	addi	r3,r3,16
   21f20:	10800044 	addi	r2,r2,1
   21f24:	45000015 	stw	r20,0(r8)
   21f28:	45800115 	stw	r22,4(r8)
   21f2c:	d8c02015 	stw	r3,128(sp)
   21f30:	d8801f15 	stw	r2,124(sp)
   21f34:	e0bff60e 	bge	fp,r2,21f10 <___vfprintf_internal_r+0x1a08>
   21f38:	d9801e04 	addi	r6,sp,120
   21f3c:	b80b883a 	mov	r5,r23
   21f40:	9809883a 	mov	r4,r19
   21f44:	00270200 	call	27020 <__sprint_r>
   21f48:	103a711e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   21f4c:	d8c02017 	ldw	r3,128(sp)
   21f50:	d8801f17 	ldw	r2,124(sp)
   21f54:	da000404 	addi	r8,sp,16
   21f58:	003fee06 	br	21f14 <___vfprintf_internal_r+0x1a0c>
   21f5c:	00bfffc4 	movi	r2,-1
   21f60:	003a6f06 	br	20920 <___vfprintf_internal_r+0x418>
   21f64:	008011c4 	movi	r2,71
   21f68:	1440b816 	blt	r2,r17,2224c <___vfprintf_internal_r+0x1d44>
   21f6c:	04000034 	movhi	r16,0
   21f70:	84000204 	addi	r16,r16,8
   21f74:	00c000c4 	movi	r3,3
   21f78:	00bfdfc4 	movi	r2,-129
   21f7c:	d8c02a15 	stw	r3,168(sp)
   21f80:	90a4703a 	and	r18,r18,r2
   21f84:	df002783 	ldbu	fp,158(sp)
   21f88:	d8c02e15 	stw	r3,184(sp)
   21f8c:	d8002915 	stw	zero,164(sp)
   21f90:	d8003215 	stw	zero,200(sp)
   21f94:	003b2906 	br	20c3c <___vfprintf_internal_r+0x734>
   21f98:	d9002d17 	ldw	r4,180(sp)
   21f9c:	24c00017 	ldw	r19,0(r4)
   21fa0:	21000104 	addi	r4,r4,4
   21fa4:	d9002d15 	stw	r4,180(sp)
   21fa8:	982dd7fa 	srai	r22,r19,31
   21fac:	b005883a 	mov	r2,r22
   21fb0:	003a9f06 	br	20a30 <___vfprintf_internal_r+0x528>
   21fb4:	d9402d17 	ldw	r5,180(sp)
   21fb8:	d8c02f17 	ldw	r3,188(sp)
   21fbc:	28800017 	ldw	r2,0(r5)
   21fc0:	29400104 	addi	r5,r5,4
   21fc4:	d9402d15 	stw	r5,180(sp)
   21fc8:	10c00015 	stw	r3,0(r2)
   21fcc:	00398606 	br	205e8 <___vfprintf_internal_r+0xe0>
   21fd0:	d9402d17 	ldw	r5,180(sp)
   21fd4:	002d883a 	mov	r22,zero
   21fd8:	2cc00017 	ldw	r19,0(r5)
   21fdc:	29400104 	addi	r5,r5,4
   21fe0:	d9402d15 	stw	r5,180(sp)
   21fe4:	003c2306 	br	21074 <___vfprintf_internal_r+0xb6c>
   21fe8:	d8c02d17 	ldw	r3,180(sp)
   21fec:	d9002917 	ldw	r4,164(sp)
   21ff0:	002d883a 	mov	r22,zero
   21ff4:	18800104 	addi	r2,r3,4
   21ff8:	1cc0000b 	ldhu	r19,0(r3)
   21ffc:	203dc10e 	bge	r4,zero,21704 <___vfprintf_internal_r+0x11fc>
   22000:	003f7506 	br	21dd8 <___vfprintf_internal_r+0x18d0>
   22004:	04000034 	movhi	r16,0
   22008:	84000004 	addi	r16,r16,0
   2200c:	003acc06 	br	20b40 <___vfprintf_internal_r+0x638>
   22010:	d9002c17 	ldw	r4,176(sp)
   22014:	d9801e04 	addi	r6,sp,120
   22018:	b80b883a 	mov	r5,r23
   2201c:	00270200 	call	27020 <__sprint_r>
   22020:	103a3b1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   22024:	dc402617 	ldw	r17,152(sp)
   22028:	d8c02017 	ldw	r3,128(sp)
   2202c:	da000404 	addi	r8,sp,16
   22030:	003f9c06 	br	21ea4 <___vfprintf_internal_r+0x199c>
   22034:	ac400043 	ldbu	r17,1(r21)
   22038:	94800814 	ori	r18,r18,32
   2203c:	ad400044 	addi	r21,r21,1
   22040:	8c403fcc 	andi	r17,r17,255
   22044:	8c40201c 	xori	r17,r17,128
   22048:	8c7fe004 	addi	r17,r17,-128
   2204c:	00398f06 	br	2068c <___vfprintf_internal_r+0x184>
   22050:	d8c02d15 	stw	r3,180(sp)
   22054:	0039883a 	mov	fp,zero
   22058:	003e3506 	br	21930 <___vfprintf_internal_r+0x1428>
   2205c:	d9002c17 	ldw	r4,176(sp)
   22060:	d9801e04 	addi	r6,sp,120
   22064:	b80b883a 	mov	r5,r23
   22068:	00270200 	call	27020 <__sprint_r>
   2206c:	103a281e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   22070:	d8c02017 	ldw	r3,128(sp)
   22074:	da000404 	addi	r8,sp,16
   22078:	003cd006 	br	213bc <___vfprintf_internal_r+0xeb4>
   2207c:	8009883a 	mov	r4,r16
   22080:	da003d15 	stw	r8,244(sp)
   22084:	0026e8c0 	call	26e8c <strlen>
   22088:	d8802e15 	stw	r2,184(sp)
   2208c:	da003d17 	ldw	r8,244(sp)
   22090:	103c340e 	bge	r2,zero,21164 <___vfprintf_internal_r+0xc5c>
   22094:	0005883a 	mov	r2,zero
   22098:	003c3206 	br	21164 <___vfprintf_internal_r+0xc5c>
   2209c:	d9002c17 	ldw	r4,176(sp)
   220a0:	d9801e04 	addi	r6,sp,120
   220a4:	b80b883a 	mov	r5,r23
   220a8:	00270200 	call	27020 <__sprint_r>
   220ac:	103a181e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   220b0:	d8c02017 	ldw	r3,128(sp)
   220b4:	d8801f17 	ldw	r2,124(sp)
   220b8:	da000404 	addi	r8,sp,16
   220bc:	d9403317 	ldw	r5,204(sp)
   220c0:	10800044 	addi	r2,r2,1
   220c4:	44000015 	stw	r16,0(r8)
   220c8:	28c7883a 	add	r3,r5,r3
   220cc:	003b7d06 	br	20ec4 <___vfprintf_internal_r+0x9bc>
   220d0:	01000034 	movhi	r4,0
   220d4:	21001484 	addi	r4,r4,82
   220d8:	d9003515 	stw	r4,212(sp)
   220dc:	003b1406 	br	20d30 <___vfprintf_internal_r+0x828>
   220e0:	013fffc4 	movi	r4,-1
   220e4:	003a3506 	br	209bc <___vfprintf_internal_r+0x4b4>
   220e8:	0023883a 	mov	r17,zero
   220ec:	003d9d06 	br	21764 <___vfprintf_internal_r+0x125c>
   220f0:	d9002c17 	ldw	r4,176(sp)
   220f4:	d9801e04 	addi	r6,sp,120
   220f8:	b80b883a 	mov	r5,r23
   220fc:	00270200 	call	27020 <__sprint_r>
   22100:	103a031e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   22104:	d8c02017 	ldw	r3,128(sp)
   22108:	da000404 	addi	r8,sp,16
   2210c:	003d9406 	br	21760 <___vfprintf_internal_r+0x1258>
   22110:	01000034 	movhi	r4,0
   22114:	21001084 	addi	r4,r4,66
   22118:	d9002b15 	stw	r4,172(sp)
   2211c:	d9002b17 	ldw	r4,172(sp)
   22120:	1c47883a 	add	r3,r3,r17
   22124:	10800044 	addi	r2,r2,1
   22128:	41000015 	stw	r4,0(r8)
   2212c:	44400115 	stw	r17,4(r8)
   22130:	d8c02015 	stw	r3,128(sp)
   22134:	d8801f15 	stw	r2,124(sp)
   22138:	010001c4 	movi	r4,7
   2213c:	20bfd716 	blt	r4,r2,2209c <___vfprintf_internal_r+0x1b94>
   22140:	42000204 	addi	r8,r8,8
   22144:	003fdd06 	br	220bc <___vfprintf_internal_r+0x1bb4>
   22148:	d9002c17 	ldw	r4,176(sp)
   2214c:	d9801e04 	addi	r6,sp,120
   22150:	b80b883a 	mov	r5,r23
   22154:	00270200 	call	27020 <__sprint_r>
   22158:	1039ed1e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   2215c:	d8802617 	ldw	r2,152(sp)
   22160:	d8c02017 	ldw	r3,128(sp)
   22164:	da000404 	addi	r8,sp,16
   22168:	003e1006 	br	219ac <___vfprintf_internal_r+0x14a4>
   2216c:	00800044 	movi	r2,1
   22170:	10803fcc 	andi	r2,r2,255
   22174:	00c00044 	movi	r3,1
   22178:	10fa3526 	beq	r2,r3,20a50 <___vfprintf_internal_r+0x548>
   2217c:	00c00084 	movi	r3,2
   22180:	10fbcb26 	beq	r2,r3,210b0 <___vfprintf_internal_r+0xba8>
   22184:	003a8f06 	br	20bc4 <___vfprintf_internal_r+0x6bc>
   22188:	01000034 	movhi	r4,0
   2218c:	21001484 	addi	r4,r4,82
   22190:	d9003515 	stw	r4,212(sp)
   22194:	003b7606 	br	20f70 <___vfprintf_internal_r+0xa68>
   22198:	d8802917 	ldw	r2,164(sp)
   2219c:	00c00184 	movi	r3,6
   221a0:	1880012e 	bgeu	r3,r2,221a8 <___vfprintf_internal_r+0x1ca0>
   221a4:	1805883a 	mov	r2,r3
   221a8:	d8802e15 	stw	r2,184(sp)
   221ac:	1000ef16 	blt	r2,zero,2256c <___vfprintf_internal_r+0x2064>
   221b0:	04000034 	movhi	r16,0
   221b4:	d8802a15 	stw	r2,168(sp)
   221b8:	dcc02d15 	stw	r19,180(sp)
   221bc:	d8002915 	stw	zero,164(sp)
   221c0:	d8003215 	stw	zero,200(sp)
   221c4:	84000e04 	addi	r16,r16,56
   221c8:	0039883a 	mov	fp,zero
   221cc:	003aa206 	br	20c58 <___vfprintf_internal_r+0x750>
   221d0:	0021883a 	mov	r16,zero
   221d4:	003e0706 	br	219f4 <___vfprintf_internal_r+0x14ec>
   221d8:	d9002c17 	ldw	r4,176(sp)
   221dc:	d9801e04 	addi	r6,sp,120
   221e0:	b80b883a 	mov	r5,r23
   221e4:	00270200 	call	27020 <__sprint_r>
   221e8:	1039c91e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   221ec:	d8802617 	ldw	r2,152(sp)
   221f0:	d9403317 	ldw	r5,204(sp)
   221f4:	d8c02017 	ldw	r3,128(sp)
   221f8:	da000404 	addi	r8,sp,16
   221fc:	2885c83a 	sub	r2,r5,r2
   22200:	003dfb06 	br	219f0 <___vfprintf_internal_r+0x14e8>
   22204:	9080004c 	andi	r2,r18,1
   22208:	103e8f1e 	bne	r2,zero,21c48 <___vfprintf_internal_r+0x1740>
   2220c:	d8802117 	ldw	r2,132(sp)
   22210:	003e9e06 	br	21c8c <___vfprintf_internal_r+0x1784>
   22214:	1025883a 	mov	r18,r2
   22218:	0039883a 	mov	fp,zero
   2221c:	00800084 	movi	r2,2
   22220:	003fd306 	br	22170 <___vfprintf_internal_r+0x1c68>
   22224:	07000b44 	movi	fp,45
   22228:	df002785 	stb	fp,158(sp)
   2222c:	003a4006 	br	20b30 <___vfprintf_internal_r+0x628>
   22230:	00c00b44 	movi	r3,45
   22234:	d8c02785 	stb	r3,158(sp)
   22238:	d8802a15 	stw	r2,168(sp)
   2223c:	dc802b17 	ldw	r18,172(sp)
   22240:	d8002915 	stw	zero,164(sp)
   22244:	07000b44 	movi	fp,45
   22248:	003a8006 	br	20c4c <___vfprintf_internal_r+0x744>
   2224c:	04000034 	movhi	r16,0
   22250:	84000304 	addi	r16,r16,12
   22254:	003f4706 	br	21f74 <___vfprintf_internal_r+0x1a6c>
   22258:	d8c02d17 	ldw	r3,180(sp)
   2225c:	d9002f17 	ldw	r4,188(sp)
   22260:	18800017 	ldw	r2,0(r3)
   22264:	18c00104 	addi	r3,r3,4
   22268:	d8c02d15 	stw	r3,180(sp)
   2226c:	11000015 	stw	r4,0(r2)
   22270:	0038dd06 	br	205e8 <___vfprintf_internal_r+0xe0>
   22274:	dd802617 	ldw	r22,152(sp)
   22278:	00bfff44 	movi	r2,-3
   2227c:	b0801c16 	blt	r22,r2,222f0 <___vfprintf_internal_r+0x1de8>
   22280:	d9402917 	ldw	r5,164(sp)
   22284:	2d801a16 	blt	r5,r22,222f0 <___vfprintf_internal_r+0x1de8>
   22288:	dd803215 	stw	r22,200(sp)
   2228c:	003e8906 	br	21cb4 <___vfprintf_internal_r+0x17ac>
   22290:	01000034 	movhi	r4,0
   22294:	21001084 	addi	r4,r4,66
   22298:	d9002b15 	stw	r4,172(sp)
   2229c:	003c9106 	br	214e4 <___vfprintf_internal_r+0xfdc>
   222a0:	e005883a 	mov	r2,fp
   222a4:	003e7906 	br	21c8c <___vfprintf_internal_r+0x1784>
   222a8:	d9402917 	ldw	r5,164(sp)
   222ac:	df002783 	ldbu	fp,158(sp)
   222b0:	dcc02d15 	stw	r19,180(sp)
   222b4:	d9402a15 	stw	r5,168(sp)
   222b8:	d9402e15 	stw	r5,184(sp)
   222bc:	d8002915 	stw	zero,164(sp)
   222c0:	d8003215 	stw	zero,200(sp)
   222c4:	003a5d06 	br	20c3c <___vfprintf_internal_r+0x734>
   222c8:	9080004c 	andi	r2,r18,1
   222cc:	0039883a 	mov	fp,zero
   222d0:	10000426 	beq	r2,zero,222e4 <___vfprintf_internal_r+0x1ddc>
   222d4:	00800c04 	movi	r2,48
   222d8:	dc001dc4 	addi	r16,sp,119
   222dc:	d8801dc5 	stb	r2,119(sp)
   222e0:	003b8006 	br	210e4 <___vfprintf_internal_r+0xbdc>
   222e4:	d8002e15 	stw	zero,184(sp)
   222e8:	dc001e04 	addi	r16,sp,120
   222ec:	003a4d06 	br	20c24 <___vfprintf_internal_r+0x71c>
   222f0:	8c7fff84 	addi	r17,r17,-2
   222f4:	b5bfffc4 	addi	r22,r22,-1
   222f8:	dd802615 	stw	r22,152(sp)
   222fc:	dc4022c5 	stb	r17,139(sp)
   22300:	b000bf16 	blt	r22,zero,22600 <___vfprintf_internal_r+0x20f8>
   22304:	00800ac4 	movi	r2,43
   22308:	d8802305 	stb	r2,140(sp)
   2230c:	00800244 	movi	r2,9
   22310:	15807016 	blt	r2,r22,224d4 <___vfprintf_internal_r+0x1fcc>
   22314:	00800c04 	movi	r2,48
   22318:	b5800c04 	addi	r22,r22,48
   2231c:	d8802345 	stb	r2,141(sp)
   22320:	dd802385 	stb	r22,142(sp)
   22324:	d88023c4 	addi	r2,sp,143
   22328:	df0022c4 	addi	fp,sp,139
   2232c:	d8c03317 	ldw	r3,204(sp)
   22330:	1739c83a 	sub	fp,r2,fp
   22334:	d9003317 	ldw	r4,204(sp)
   22338:	e0c7883a 	add	r3,fp,r3
   2233c:	df003a15 	stw	fp,232(sp)
   22340:	d8c02e15 	stw	r3,184(sp)
   22344:	00800044 	movi	r2,1
   22348:	1100b30e 	bge	r2,r4,22618 <___vfprintf_internal_r+0x2110>
   2234c:	d8c02e17 	ldw	r3,184(sp)
   22350:	18c00044 	addi	r3,r3,1
   22354:	d8c02e15 	stw	r3,184(sp)
   22358:	1805883a 	mov	r2,r3
   2235c:	1800ac16 	blt	r3,zero,22610 <___vfprintf_internal_r+0x2108>
   22360:	d8003215 	stw	zero,200(sp)
   22364:	003e5d06 	br	21cdc <___vfprintf_internal_r+0x17d4>
   22368:	d9002c17 	ldw	r4,176(sp)
   2236c:	d9801e04 	addi	r6,sp,120
   22370:	b80b883a 	mov	r5,r23
   22374:	00270200 	call	27020 <__sprint_r>
   22378:	1039651e 	bne	r2,zero,20910 <___vfprintf_internal_r+0x408>
   2237c:	dc402617 	ldw	r17,152(sp)
   22380:	d8c02017 	ldw	r3,128(sp)
   22384:	d8801f17 	ldw	r2,124(sp)
   22388:	da000404 	addi	r8,sp,16
   2238c:	003ed606 	br	21ee8 <___vfprintf_internal_r+0x19e0>
   22390:	582b883a 	mov	r21,r11
   22394:	d8002915 	stw	zero,164(sp)
   22398:	0038bd06 	br	20690 <___vfprintf_internal_r+0x188>
   2239c:	d8802917 	ldw	r2,164(sp)
   223a0:	103e071e 	bne	r2,zero,21bc0 <___vfprintf_internal_r+0x16b8>
   223a4:	dc002915 	stw	r16,164(sp)
   223a8:	003e0506 	br	21bc0 <___vfprintf_internal_r+0x16b8>
   223ac:	d9002917 	ldw	r4,164(sp)
   223b0:	20c00044 	addi	r3,r4,1
   223b4:	003e0f06 	br	21bf4 <___vfprintf_internal_r+0x16ec>
   223b8:	01400184 	movi	r5,6
   223bc:	d9402915 	stw	r5,164(sp)
   223c0:	003dff06 	br	21bc0 <___vfprintf_internal_r+0x16b8>
   223c4:	d8802104 	addi	r2,sp,132
   223c8:	d8800315 	stw	r2,12(sp)
   223cc:	d8802504 	addi	r2,sp,148
   223d0:	d8800215 	stw	r2,8(sp)
   223d4:	d8802604 	addi	r2,sp,152
   223d8:	d8800115 	stw	r2,4(sp)
   223dc:	d8802917 	ldw	r2,164(sp)
   223e0:	d9403617 	ldw	r5,216(sp)
   223e4:	d9002c17 	ldw	r4,176(sp)
   223e8:	d8800015 	stw	r2,0(sp)
   223ec:	01c000c4 	movi	r7,3
   223f0:	980d883a 	mov	r6,r19
   223f4:	da003d15 	stw	r8,244(sp)
   223f8:	0022b2c0 	call	22b2c <_dtoa_r>
   223fc:	d8c02917 	ldw	r3,164(sp)
   22400:	da003d17 	ldw	r8,244(sp)
   22404:	1021883a 	mov	r16,r2
   22408:	10f9883a 	add	fp,r2,r3
   2240c:	81000007 	ldb	r4,0(r16)
   22410:	00800c04 	movi	r2,48
   22414:	20805e26 	beq	r4,r2,22590 <___vfprintf_internal_r+0x2088>
   22418:	d8c02617 	ldw	r3,152(sp)
   2241c:	e0f9883a 	add	fp,fp,r3
   22420:	003e0a06 	br	21c4c <___vfprintf_internal_r+0x1744>
   22424:	00c00b44 	movi	r3,45
   22428:	24e0003c 	xorhi	r19,r4,32768
   2242c:	d8c02a05 	stb	r3,168(sp)
   22430:	003de906 	br	21bd8 <___vfprintf_internal_r+0x16d0>
   22434:	d8c03217 	ldw	r3,200(sp)
   22438:	00c07a0e 	bge	zero,r3,22624 <___vfprintf_internal_r+0x211c>
   2243c:	00800044 	movi	r2,1
   22440:	d9003317 	ldw	r4,204(sp)
   22444:	1105883a 	add	r2,r2,r4
   22448:	d8802e15 	stw	r2,184(sp)
   2244c:	10004e16 	blt	r2,zero,22588 <___vfprintf_internal_r+0x2080>
   22450:	044019c4 	movi	r17,103
   22454:	003e2106 	br	21cdc <___vfprintf_internal_r+0x17d4>
   22458:	d9002917 	ldw	r4,164(sp)
   2245c:	d8802104 	addi	r2,sp,132
   22460:	d8800315 	stw	r2,12(sp)
   22464:	d9000015 	stw	r4,0(sp)
   22468:	d8802504 	addi	r2,sp,148
   2246c:	d9403617 	ldw	r5,216(sp)
   22470:	d9002c17 	ldw	r4,176(sp)
   22474:	d8800215 	stw	r2,8(sp)
   22478:	d8802604 	addi	r2,sp,152
   2247c:	d8800115 	stw	r2,4(sp)
   22480:	01c000c4 	movi	r7,3
   22484:	980d883a 	mov	r6,r19
   22488:	da003d15 	stw	r8,244(sp)
   2248c:	0022b2c0 	call	22b2c <_dtoa_r>
   22490:	d8c02917 	ldw	r3,164(sp)
   22494:	da003d17 	ldw	r8,244(sp)
   22498:	1021883a 	mov	r16,r2
   2249c:	00801184 	movi	r2,70
   224a0:	80f9883a 	add	fp,r16,r3
   224a4:	88bfd926 	beq	r17,r2,2240c <___vfprintf_internal_r+0x1f04>
   224a8:	003de806 	br	21c4c <___vfprintf_internal_r+0x1744>
   224ac:	d9002917 	ldw	r4,164(sp)
   224b0:	00c04d0e 	bge	zero,r3,225e8 <___vfprintf_internal_r+0x20e0>
   224b4:	2000441e 	bne	r4,zero,225c8 <___vfprintf_internal_r+0x20c0>
   224b8:	9480004c 	andi	r18,r18,1
   224bc:	9000421e 	bne	r18,zero,225c8 <___vfprintf_internal_r+0x20c0>
   224c0:	1805883a 	mov	r2,r3
   224c4:	18007016 	blt	r3,zero,22688 <___vfprintf_internal_r+0x2180>
   224c8:	d8c03217 	ldw	r3,200(sp)
   224cc:	d8c02e15 	stw	r3,184(sp)
   224d0:	003e0206 	br	21cdc <___vfprintf_internal_r+0x17d4>
   224d4:	df0022c4 	addi	fp,sp,139
   224d8:	dc002915 	stw	r16,164(sp)
   224dc:	4027883a 	mov	r19,r8
   224e0:	e021883a 	mov	r16,fp
   224e4:	b009883a 	mov	r4,r22
   224e8:	01400284 	movi	r5,10
   224ec:	002a5500 	call	2a550 <__modsi3>
   224f0:	10800c04 	addi	r2,r2,48
   224f4:	843fffc4 	addi	r16,r16,-1
   224f8:	b009883a 	mov	r4,r22
   224fc:	01400284 	movi	r5,10
   22500:	80800005 	stb	r2,0(r16)
   22504:	002a4cc0 	call	2a4cc <__divsi3>
   22508:	102d883a 	mov	r22,r2
   2250c:	00800244 	movi	r2,9
   22510:	15bff416 	blt	r2,r22,224e4 <___vfprintf_internal_r+0x1fdc>
   22514:	9811883a 	mov	r8,r19
   22518:	b0800c04 	addi	r2,r22,48
   2251c:	8027883a 	mov	r19,r16
   22520:	997fffc4 	addi	r5,r19,-1
   22524:	98bfffc5 	stb	r2,-1(r19)
   22528:	dc002917 	ldw	r16,164(sp)
   2252c:	2f006a2e 	bgeu	r5,fp,226d8 <___vfprintf_internal_r+0x21d0>
   22530:	d9c02384 	addi	r7,sp,142
   22534:	3ccfc83a 	sub	r7,r7,r19
   22538:	d9002344 	addi	r4,sp,141
   2253c:	e1cf883a 	add	r7,fp,r7
   22540:	00000106 	br	22548 <___vfprintf_internal_r+0x2040>
   22544:	28800003 	ldbu	r2,0(r5)
   22548:	20800005 	stb	r2,0(r4)
   2254c:	21000044 	addi	r4,r4,1
   22550:	29400044 	addi	r5,r5,1
   22554:	393ffb1e 	bne	r7,r4,22544 <___vfprintf_internal_r+0x203c>
   22558:	d8802304 	addi	r2,sp,140
   2255c:	14c5c83a 	sub	r2,r2,r19
   22560:	d8c02344 	addi	r3,sp,141
   22564:	1885883a 	add	r2,r3,r2
   22568:	003f7006 	br	2232c <___vfprintf_internal_r+0x1e24>
   2256c:	0005883a 	mov	r2,zero
   22570:	003f0f06 	br	221b0 <___vfprintf_internal_r+0x1ca8>
   22574:	d8c03217 	ldw	r3,200(sp)
   22578:	18c00044 	addi	r3,r3,1
   2257c:	d8c02e15 	stw	r3,184(sp)
   22580:	1805883a 	mov	r2,r3
   22584:	183fb20e 	bge	r3,zero,22450 <___vfprintf_internal_r+0x1f48>
   22588:	0005883a 	mov	r2,zero
   2258c:	003fb006 	br	22450 <___vfprintf_internal_r+0x1f48>
   22590:	d9003617 	ldw	r4,216(sp)
   22594:	000d883a 	mov	r6,zero
   22598:	000f883a 	mov	r7,zero
   2259c:	980b883a 	mov	r5,r19
   225a0:	d8c03c15 	stw	r3,240(sp)
   225a4:	da003d15 	stw	r8,244(sp)
   225a8:	002b8140 	call	2b814 <__eqdf2>
   225ac:	d8c03c17 	ldw	r3,240(sp)
   225b0:	da003d17 	ldw	r8,244(sp)
   225b4:	103f9826 	beq	r2,zero,22418 <___vfprintf_internal_r+0x1f10>
   225b8:	00800044 	movi	r2,1
   225bc:	10c7c83a 	sub	r3,r2,r3
   225c0:	d8c02615 	stw	r3,152(sp)
   225c4:	003f9506 	br	2241c <___vfprintf_internal_r+0x1f14>
   225c8:	d9002917 	ldw	r4,164(sp)
   225cc:	d8c03217 	ldw	r3,200(sp)
   225d0:	20800044 	addi	r2,r4,1
   225d4:	1885883a 	add	r2,r3,r2
   225d8:	d8802e15 	stw	r2,184(sp)
   225dc:	103dbf0e 	bge	r2,zero,21cdc <___vfprintf_internal_r+0x17d4>
   225e0:	0005883a 	mov	r2,zero
   225e4:	003dbd06 	br	21cdc <___vfprintf_internal_r+0x17d4>
   225e8:	2000211e 	bne	r4,zero,22670 <___vfprintf_internal_r+0x2168>
   225ec:	9480004c 	andi	r18,r18,1
   225f0:	90001f1e 	bne	r18,zero,22670 <___vfprintf_internal_r+0x2168>
   225f4:	00800044 	movi	r2,1
   225f8:	d8802e15 	stw	r2,184(sp)
   225fc:	003db706 	br	21cdc <___vfprintf_internal_r+0x17d4>
   22600:	00800b44 	movi	r2,45
   22604:	05adc83a 	sub	r22,zero,r22
   22608:	d8802305 	stb	r2,140(sp)
   2260c:	003f3f06 	br	2230c <___vfprintf_internal_r+0x1e04>
   22610:	0005883a 	mov	r2,zero
   22614:	003f5206 	br	22360 <___vfprintf_internal_r+0x1e58>
   22618:	90a4703a 	and	r18,r18,r2
   2261c:	903f4e26 	beq	r18,zero,22358 <___vfprintf_internal_r+0x1e50>
   22620:	003f4a06 	br	2234c <___vfprintf_internal_r+0x1e44>
   22624:	00800084 	movi	r2,2
   22628:	10c5c83a 	sub	r2,r2,r3
   2262c:	003f8406 	br	22440 <___vfprintf_internal_r+0x1f38>
   22630:	d8802d17 	ldw	r2,180(sp)
   22634:	d9002d17 	ldw	r4,180(sp)
   22638:	ac400043 	ldbu	r17,1(r21)
   2263c:	10800017 	ldw	r2,0(r2)
   22640:	582b883a 	mov	r21,r11
   22644:	d8802915 	stw	r2,164(sp)
   22648:	20800104 	addi	r2,r4,4
   2264c:	d9002917 	ldw	r4,164(sp)
   22650:	d8802d15 	stw	r2,180(sp)
   22654:	203e7a0e 	bge	r4,zero,22040 <___vfprintf_internal_r+0x1b38>
   22658:	8c403fcc 	andi	r17,r17,255
   2265c:	00bfffc4 	movi	r2,-1
   22660:	8c40201c 	xori	r17,r17,128
   22664:	d8802915 	stw	r2,164(sp)
   22668:	8c7fe004 	addi	r17,r17,-128
   2266c:	00380706 	br	2068c <___vfprintf_internal_r+0x184>
   22670:	d8c02917 	ldw	r3,164(sp)
   22674:	18c00084 	addi	r3,r3,2
   22678:	d8c02e15 	stw	r3,184(sp)
   2267c:	1805883a 	mov	r2,r3
   22680:	183d960e 	bge	r3,zero,21cdc <___vfprintf_internal_r+0x17d4>
   22684:	003fd606 	br	225e0 <___vfprintf_internal_r+0x20d8>
   22688:	0005883a 	mov	r2,zero
   2268c:	003f8e06 	br	224c8 <___vfprintf_internal_r+0x1fc0>
   22690:	9080004c 	andi	r2,r18,1
   22694:	103f811e 	bne	r2,zero,2249c <___vfprintf_internal_r+0x1f94>
   22698:	d8802117 	ldw	r2,132(sp)
   2269c:	1405c83a 	sub	r2,r2,r16
   226a0:	d8803315 	stw	r2,204(sp)
   226a4:	b47ef326 	beq	r22,r17,22274 <___vfprintf_internal_r+0x1d6c>
   226a8:	dd802617 	ldw	r22,152(sp)
   226ac:	003f1106 	br	222f4 <___vfprintf_internal_r+0x1dec>
   226b0:	d9c02785 	stb	r7,158(sp)
   226b4:	00390406 	br	20ac8 <___vfprintf_internal_r+0x5c0>
   226b8:	d9c02785 	stb	r7,158(sp)
   226bc:	0038d306 	br	20a0c <___vfprintf_internal_r+0x504>
   226c0:	d9c02785 	stb	r7,158(sp)
   226c4:	003a6106 	br	2104c <___vfprintf_internal_r+0xb44>
   226c8:	d9c02785 	stb	r7,158(sp)
   226cc:	003af806 	br	212b0 <___vfprintf_internal_r+0xda8>
   226d0:	0005883a 	mov	r2,zero
   226d4:	003d7e06 	br	21cd0 <___vfprintf_internal_r+0x17c8>
   226d8:	d8802344 	addi	r2,sp,141
   226dc:	003f1306 	br	2232c <___vfprintf_internal_r+0x1e24>
   226e0:	d9c02785 	stb	r7,158(sp)
   226e4:	00392306 	br	20b74 <___vfprintf_internal_r+0x66c>
   226e8:	d9c02785 	stb	r7,158(sp)
   226ec:	003aa906 	br	21194 <___vfprintf_internal_r+0xc8c>
   226f0:	d9c02785 	stb	r7,158(sp)
   226f4:	003a3d06 	br	20fec <___vfprintf_internal_r+0xae4>
   226f8:	d9c02785 	stb	r7,158(sp)
   226fc:	003aca06 	br	21228 <___vfprintf_internal_r+0xd20>

00022700 <__vfprintf_internal>:
   22700:	00800034 	movhi	r2,0
   22704:	10876b04 	addi	r2,r2,7596
   22708:	300f883a 	mov	r7,r6
   2270c:	280d883a 	mov	r6,r5
   22710:	200b883a 	mov	r5,r4
   22714:	11000017 	ldw	r4,0(r2)
   22718:	00205081 	jmpi	20508 <___vfprintf_internal_r>

0002271c <__sbprintf>:
   2271c:	2880030b 	ldhu	r2,12(r5)
   22720:	2ac01917 	ldw	r11,100(r5)
   22724:	2a80038b 	ldhu	r10,14(r5)
   22728:	2a400717 	ldw	r9,28(r5)
   2272c:	2a000917 	ldw	r8,36(r5)
   22730:	defee204 	addi	sp,sp,-1144
   22734:	00c10004 	movi	r3,1024
   22738:	dc011a15 	stw	r16,1128(sp)
   2273c:	10bfff4c 	andi	r2,r2,65533
   22740:	2821883a 	mov	r16,r5
   22744:	d8cb883a 	add	r5,sp,r3
   22748:	dc811c15 	stw	r18,1136(sp)
   2274c:	dc411b15 	stw	r17,1132(sp)
   22750:	dfc11d15 	stw	ra,1140(sp)
   22754:	2025883a 	mov	r18,r4
   22758:	d881030d 	sth	r2,1036(sp)
   2275c:	dac11915 	stw	r11,1124(sp)
   22760:	da81038d 	sth	r10,1038(sp)
   22764:	da410715 	stw	r9,1052(sp)
   22768:	da010915 	stw	r8,1060(sp)
   2276c:	dec10015 	stw	sp,1024(sp)
   22770:	dec10415 	stw	sp,1040(sp)
   22774:	d8c10215 	stw	r3,1032(sp)
   22778:	d8c10515 	stw	r3,1044(sp)
   2277c:	d8010615 	stw	zero,1048(sp)
   22780:	00205080 	call	20508 <___vfprintf_internal_r>
   22784:	1023883a 	mov	r17,r2
   22788:	10000416 	blt	r2,zero,2279c <__sbprintf+0x80>
   2278c:	d9410004 	addi	r5,sp,1024
   22790:	9009883a 	mov	r4,r18
   22794:	00243d00 	call	243d0 <_fflush_r>
   22798:	10000d1e 	bne	r2,zero,227d0 <__sbprintf+0xb4>
   2279c:	d881030b 	ldhu	r2,1036(sp)
   227a0:	1080100c 	andi	r2,r2,64
   227a4:	10000326 	beq	r2,zero,227b4 <__sbprintf+0x98>
   227a8:	8080030b 	ldhu	r2,12(r16)
   227ac:	10801014 	ori	r2,r2,64
   227b0:	8080030d 	sth	r2,12(r16)
   227b4:	8805883a 	mov	r2,r17
   227b8:	dfc11d17 	ldw	ra,1140(sp)
   227bc:	dc811c17 	ldw	r18,1136(sp)
   227c0:	dc411b17 	ldw	r17,1132(sp)
   227c4:	dc011a17 	ldw	r16,1128(sp)
   227c8:	dec11e04 	addi	sp,sp,1144
   227cc:	f800283a 	ret
   227d0:	047fffc4 	movi	r17,-1
   227d4:	003ff106 	br	2279c <__sbprintf+0x80>

000227d8 <__swsetup_r>:
   227d8:	00800034 	movhi	r2,0
   227dc:	defffd04 	addi	sp,sp,-12
   227e0:	10876b04 	addi	r2,r2,7596
   227e4:	dc400115 	stw	r17,4(sp)
   227e8:	2023883a 	mov	r17,r4
   227ec:	11000017 	ldw	r4,0(r2)
   227f0:	dc000015 	stw	r16,0(sp)
   227f4:	dfc00215 	stw	ra,8(sp)
   227f8:	2821883a 	mov	r16,r5
   227fc:	20000226 	beq	r4,zero,22808 <__swsetup_r+0x30>
   22800:	20800e17 	ldw	r2,56(r4)
   22804:	10003126 	beq	r2,zero,228cc <__swsetup_r+0xf4>
   22808:	8080030b 	ldhu	r2,12(r16)
   2280c:	10c0020c 	andi	r3,r2,8
   22810:	1009883a 	mov	r4,r2
   22814:	18000f26 	beq	r3,zero,22854 <__swsetup_r+0x7c>
   22818:	80c00417 	ldw	r3,16(r16)
   2281c:	18001526 	beq	r3,zero,22874 <__swsetup_r+0x9c>
   22820:	1100004c 	andi	r4,r2,1
   22824:	20001c1e 	bne	r4,zero,22898 <__swsetup_r+0xc0>
   22828:	1080008c 	andi	r2,r2,2
   2282c:	1000291e 	bne	r2,zero,228d4 <__swsetup_r+0xfc>
   22830:	80800517 	ldw	r2,20(r16)
   22834:	80800215 	stw	r2,8(r16)
   22838:	18001c26 	beq	r3,zero,228ac <__swsetup_r+0xd4>
   2283c:	0005883a 	mov	r2,zero
   22840:	dfc00217 	ldw	ra,8(sp)
   22844:	dc400117 	ldw	r17,4(sp)
   22848:	dc000017 	ldw	r16,0(sp)
   2284c:	dec00304 	addi	sp,sp,12
   22850:	f800283a 	ret
   22854:	2080040c 	andi	r2,r4,16
   22858:	10002e26 	beq	r2,zero,22914 <__swsetup_r+0x13c>
   2285c:	2080010c 	andi	r2,r4,4
   22860:	10001e1e 	bne	r2,zero,228dc <__swsetup_r+0x104>
   22864:	80c00417 	ldw	r3,16(r16)
   22868:	20800214 	ori	r2,r4,8
   2286c:	8080030d 	sth	r2,12(r16)
   22870:	183feb1e 	bne	r3,zero,22820 <__swsetup_r+0x48>
   22874:	1100a00c 	andi	r4,r2,640
   22878:	01408004 	movi	r5,512
   2287c:	217fe826 	beq	r4,r5,22820 <__swsetup_r+0x48>
   22880:	800b883a 	mov	r5,r16
   22884:	8809883a 	mov	r4,r17
   22888:	0024e940 	call	24e94 <__smakebuf_r>
   2288c:	8080030b 	ldhu	r2,12(r16)
   22890:	80c00417 	ldw	r3,16(r16)
   22894:	003fe206 	br	22820 <__swsetup_r+0x48>
   22898:	80800517 	ldw	r2,20(r16)
   2289c:	80000215 	stw	zero,8(r16)
   228a0:	0085c83a 	sub	r2,zero,r2
   228a4:	80800615 	stw	r2,24(r16)
   228a8:	183fe41e 	bne	r3,zero,2283c <__swsetup_r+0x64>
   228ac:	80c0030b 	ldhu	r3,12(r16)
   228b0:	0005883a 	mov	r2,zero
   228b4:	1900200c 	andi	r4,r3,128
   228b8:	203fe126 	beq	r4,zero,22840 <__swsetup_r+0x68>
   228bc:	18c01014 	ori	r3,r3,64
   228c0:	80c0030d 	sth	r3,12(r16)
   228c4:	00bfffc4 	movi	r2,-1
   228c8:	003fdd06 	br	22840 <__swsetup_r+0x68>
   228cc:	00247ac0 	call	247ac <__sinit>
   228d0:	003fcd06 	br	22808 <__swsetup_r+0x30>
   228d4:	0005883a 	mov	r2,zero
   228d8:	003fd606 	br	22834 <__swsetup_r+0x5c>
   228dc:	81400c17 	ldw	r5,48(r16)
   228e0:	28000626 	beq	r5,zero,228fc <__swsetup_r+0x124>
   228e4:	80801004 	addi	r2,r16,64
   228e8:	28800326 	beq	r5,r2,228f8 <__swsetup_r+0x120>
   228ec:	8809883a 	mov	r4,r17
   228f0:	00249200 	call	24920 <_free_r>
   228f4:	8100030b 	ldhu	r4,12(r16)
   228f8:	80000c15 	stw	zero,48(r16)
   228fc:	80c00417 	ldw	r3,16(r16)
   22900:	00bff6c4 	movi	r2,-37
   22904:	1108703a 	and	r4,r2,r4
   22908:	80000115 	stw	zero,4(r16)
   2290c:	80c00015 	stw	r3,0(r16)
   22910:	003fd506 	br	22868 <__swsetup_r+0x90>
   22914:	00800244 	movi	r2,9
   22918:	88800015 	stw	r2,0(r17)
   2291c:	20801014 	ori	r2,r4,64
   22920:	8080030d 	sth	r2,12(r16)
   22924:	00bfffc4 	movi	r2,-1
   22928:	003fc506 	br	22840 <__swsetup_r+0x68>

0002292c <quorem>:
   2292c:	defff704 	addi	sp,sp,-36
   22930:	dc800215 	stw	r18,8(sp)
   22934:	20800417 	ldw	r2,16(r4)
   22938:	2c800417 	ldw	r18,16(r5)
   2293c:	dfc00815 	stw	ra,32(sp)
   22940:	ddc00715 	stw	r23,28(sp)
   22944:	dd800615 	stw	r22,24(sp)
   22948:	dd400515 	stw	r21,20(sp)
   2294c:	dd000415 	stw	r20,16(sp)
   22950:	dcc00315 	stw	r19,12(sp)
   22954:	dc400115 	stw	r17,4(sp)
   22958:	dc000015 	stw	r16,0(sp)
   2295c:	14807116 	blt	r2,r18,22b24 <quorem+0x1f8>
   22960:	94bfffc4 	addi	r18,r18,-1
   22964:	94ad883a 	add	r22,r18,r18
   22968:	b5ad883a 	add	r22,r22,r22
   2296c:	2c400504 	addi	r17,r5,20
   22970:	8da9883a 	add	r20,r17,r22
   22974:	25400504 	addi	r21,r4,20
   22978:	282f883a 	mov	r23,r5
   2297c:	adad883a 	add	r22,r21,r22
   22980:	a1400017 	ldw	r5,0(r20)
   22984:	2021883a 	mov	r16,r4
   22988:	b1000017 	ldw	r4,0(r22)
   2298c:	29400044 	addi	r5,r5,1
   22990:	002a5c40 	call	2a5c4 <__udivsi3>
   22994:	1027883a 	mov	r19,r2
   22998:	10002c26 	beq	r2,zero,22a4c <quorem+0x120>
   2299c:	a813883a 	mov	r9,r21
   229a0:	880b883a 	mov	r5,r17
   229a4:	0009883a 	mov	r4,zero
   229a8:	000d883a 	mov	r6,zero
   229ac:	2a000017 	ldw	r8,0(r5)
   229b0:	49c00017 	ldw	r7,0(r9)
   229b4:	29400104 	addi	r5,r5,4
   229b8:	40bfffcc 	andi	r2,r8,65535
   229bc:	14c5383a 	mul	r2,r2,r19
   229c0:	4010d43a 	srli	r8,r8,16
   229c4:	38ffffcc 	andi	r3,r7,65535
   229c8:	1105883a 	add	r2,r2,r4
   229cc:	1008d43a 	srli	r4,r2,16
   229d0:	44d1383a 	mul	r8,r8,r19
   229d4:	198d883a 	add	r6,r3,r6
   229d8:	10ffffcc 	andi	r3,r2,65535
   229dc:	30c7c83a 	sub	r3,r6,r3
   229e0:	380ed43a 	srli	r7,r7,16
   229e4:	4105883a 	add	r2,r8,r4
   229e8:	180dd43a 	srai	r6,r3,16
   229ec:	113fffcc 	andi	r4,r2,65535
   229f0:	390fc83a 	sub	r7,r7,r4
   229f4:	398d883a 	add	r6,r7,r6
   229f8:	300e943a 	slli	r7,r6,16
   229fc:	18ffffcc 	andi	r3,r3,65535
   22a00:	1008d43a 	srli	r4,r2,16
   22a04:	38ceb03a 	or	r7,r7,r3
   22a08:	49c00015 	stw	r7,0(r9)
   22a0c:	300dd43a 	srai	r6,r6,16
   22a10:	4a400104 	addi	r9,r9,4
   22a14:	a17fe52e 	bgeu	r20,r5,229ac <quorem+0x80>
   22a18:	b0800017 	ldw	r2,0(r22)
   22a1c:	10000b1e 	bne	r2,zero,22a4c <quorem+0x120>
   22a20:	b0bfff04 	addi	r2,r22,-4
   22a24:	a880082e 	bgeu	r21,r2,22a48 <quorem+0x11c>
   22a28:	b0ffff17 	ldw	r3,-4(r22)
   22a2c:	18000326 	beq	r3,zero,22a3c <quorem+0x110>
   22a30:	00000506 	br	22a48 <quorem+0x11c>
   22a34:	10c00017 	ldw	r3,0(r2)
   22a38:	1800031e 	bne	r3,zero,22a48 <quorem+0x11c>
   22a3c:	10bfff04 	addi	r2,r2,-4
   22a40:	94bfffc4 	addi	r18,r18,-1
   22a44:	a8bffb36 	bltu	r21,r2,22a34 <quorem+0x108>
   22a48:	84800415 	stw	r18,16(r16)
   22a4c:	b80b883a 	mov	r5,r23
   22a50:	8009883a 	mov	r4,r16
   22a54:	00264780 	call	26478 <__mcmp>
   22a58:	10002616 	blt	r2,zero,22af4 <quorem+0x1c8>
   22a5c:	9cc00044 	addi	r19,r19,1
   22a60:	a805883a 	mov	r2,r21
   22a64:	000b883a 	mov	r5,zero
   22a68:	11000017 	ldw	r4,0(r2)
   22a6c:	89800017 	ldw	r6,0(r17)
   22a70:	10800104 	addi	r2,r2,4
   22a74:	20ffffcc 	andi	r3,r4,65535
   22a78:	194b883a 	add	r5,r3,r5
   22a7c:	30ffffcc 	andi	r3,r6,65535
   22a80:	28c7c83a 	sub	r3,r5,r3
   22a84:	300cd43a 	srli	r6,r6,16
   22a88:	2008d43a 	srli	r4,r4,16
   22a8c:	180bd43a 	srai	r5,r3,16
   22a90:	18ffffcc 	andi	r3,r3,65535
   22a94:	2189c83a 	sub	r4,r4,r6
   22a98:	2149883a 	add	r4,r4,r5
   22a9c:	200c943a 	slli	r6,r4,16
   22aa0:	8c400104 	addi	r17,r17,4
   22aa4:	200bd43a 	srai	r5,r4,16
   22aa8:	30c6b03a 	or	r3,r6,r3
   22aac:	10ffff15 	stw	r3,-4(r2)
   22ab0:	a47fed2e 	bgeu	r20,r17,22a68 <quorem+0x13c>
   22ab4:	9485883a 	add	r2,r18,r18
   22ab8:	1085883a 	add	r2,r2,r2
   22abc:	a887883a 	add	r3,r21,r2
   22ac0:	18800017 	ldw	r2,0(r3)
   22ac4:	10000b1e 	bne	r2,zero,22af4 <quorem+0x1c8>
   22ac8:	18bfff04 	addi	r2,r3,-4
   22acc:	a880082e 	bgeu	r21,r2,22af0 <quorem+0x1c4>
   22ad0:	18ffff17 	ldw	r3,-4(r3)
   22ad4:	18000326 	beq	r3,zero,22ae4 <quorem+0x1b8>
   22ad8:	00000506 	br	22af0 <quorem+0x1c4>
   22adc:	10c00017 	ldw	r3,0(r2)
   22ae0:	1800031e 	bne	r3,zero,22af0 <quorem+0x1c4>
   22ae4:	10bfff04 	addi	r2,r2,-4
   22ae8:	94bfffc4 	addi	r18,r18,-1
   22aec:	a8bffb36 	bltu	r21,r2,22adc <quorem+0x1b0>
   22af0:	84800415 	stw	r18,16(r16)
   22af4:	9805883a 	mov	r2,r19
   22af8:	dfc00817 	ldw	ra,32(sp)
   22afc:	ddc00717 	ldw	r23,28(sp)
   22b00:	dd800617 	ldw	r22,24(sp)
   22b04:	dd400517 	ldw	r21,20(sp)
   22b08:	dd000417 	ldw	r20,16(sp)
   22b0c:	dcc00317 	ldw	r19,12(sp)
   22b10:	dc800217 	ldw	r18,8(sp)
   22b14:	dc400117 	ldw	r17,4(sp)
   22b18:	dc000017 	ldw	r16,0(sp)
   22b1c:	dec00904 	addi	sp,sp,36
   22b20:	f800283a 	ret
   22b24:	0005883a 	mov	r2,zero
   22b28:	003ff306 	br	22af8 <quorem+0x1cc>

00022b2c <_dtoa_r>:
   22b2c:	20801017 	ldw	r2,64(r4)
   22b30:	deffde04 	addi	sp,sp,-136
   22b34:	df002015 	stw	fp,128(sp)
   22b38:	dcc01b15 	stw	r19,108(sp)
   22b3c:	dc801a15 	stw	r18,104(sp)
   22b40:	dc401915 	stw	r17,100(sp)
   22b44:	dc001815 	stw	r16,96(sp)
   22b48:	dfc02115 	stw	ra,132(sp)
   22b4c:	ddc01f15 	stw	r23,124(sp)
   22b50:	dd801e15 	stw	r22,120(sp)
   22b54:	dd401d15 	stw	r21,116(sp)
   22b58:	dd001c15 	stw	r20,112(sp)
   22b5c:	d9c00315 	stw	r7,12(sp)
   22b60:	2039883a 	mov	fp,r4
   22b64:	3023883a 	mov	r17,r6
   22b68:	2825883a 	mov	r18,r5
   22b6c:	dc002417 	ldw	r16,144(sp)
   22b70:	3027883a 	mov	r19,r6
   22b74:	10000826 	beq	r2,zero,22b98 <_dtoa_r+0x6c>
   22b78:	21801117 	ldw	r6,68(r4)
   22b7c:	00c00044 	movi	r3,1
   22b80:	100b883a 	mov	r5,r2
   22b84:	1986983a 	sll	r3,r3,r6
   22b88:	11800115 	stw	r6,4(r2)
   22b8c:	10c00215 	stw	r3,8(r2)
   22b90:	0025c580 	call	25c58 <_Bfree>
   22b94:	e0001015 	stw	zero,64(fp)
   22b98:	88002e16 	blt	r17,zero,22c54 <_dtoa_r+0x128>
   22b9c:	80000015 	stw	zero,0(r16)
   22ba0:	889ffc2c 	andhi	r2,r17,32752
   22ba4:	00dffc34 	movhi	r3,32752
   22ba8:	10c01c26 	beq	r2,r3,22c1c <_dtoa_r+0xf0>
   22bac:	000d883a 	mov	r6,zero
   22bb0:	000f883a 	mov	r7,zero
   22bb4:	9009883a 	mov	r4,r18
   22bb8:	980b883a 	mov	r5,r19
   22bbc:	002b8140 	call	2b814 <__eqdf2>
   22bc0:	10002b1e 	bne	r2,zero,22c70 <_dtoa_r+0x144>
   22bc4:	d9c02317 	ldw	r7,140(sp)
   22bc8:	00800044 	movi	r2,1
   22bcc:	38800015 	stw	r2,0(r7)
   22bd0:	d8802517 	ldw	r2,148(sp)
   22bd4:	10019e26 	beq	r2,zero,23250 <_dtoa_r+0x724>
   22bd8:	d8c02517 	ldw	r3,148(sp)
   22bdc:	00800034 	movhi	r2,0
   22be0:	10801044 	addi	r2,r2,65
   22be4:	18800015 	stw	r2,0(r3)
   22be8:	10bfffc4 	addi	r2,r2,-1
   22bec:	dfc02117 	ldw	ra,132(sp)
   22bf0:	df002017 	ldw	fp,128(sp)
   22bf4:	ddc01f17 	ldw	r23,124(sp)
   22bf8:	dd801e17 	ldw	r22,120(sp)
   22bfc:	dd401d17 	ldw	r21,116(sp)
   22c00:	dd001c17 	ldw	r20,112(sp)
   22c04:	dcc01b17 	ldw	r19,108(sp)
   22c08:	dc801a17 	ldw	r18,104(sp)
   22c0c:	dc401917 	ldw	r17,100(sp)
   22c10:	dc001817 	ldw	r16,96(sp)
   22c14:	dec02204 	addi	sp,sp,136
   22c18:	f800283a 	ret
   22c1c:	d8c02317 	ldw	r3,140(sp)
   22c20:	0089c3c4 	movi	r2,9999
   22c24:	18800015 	stw	r2,0(r3)
   22c28:	90017726 	beq	r18,zero,23208 <_dtoa_r+0x6dc>
   22c2c:	00800034 	movhi	r2,0
   22c30:	10801c04 	addi	r2,r2,112
   22c34:	d9002517 	ldw	r4,148(sp)
   22c38:	203fec26 	beq	r4,zero,22bec <_dtoa_r+0xc0>
   22c3c:	10c000c7 	ldb	r3,3(r2)
   22c40:	1801781e 	bne	r3,zero,23224 <_dtoa_r+0x6f8>
   22c44:	10c000c4 	addi	r3,r2,3
   22c48:	d9802517 	ldw	r6,148(sp)
   22c4c:	30c00015 	stw	r3,0(r6)
   22c50:	003fe606 	br	22bec <_dtoa_r+0xc0>
   22c54:	04e00034 	movhi	r19,32768
   22c58:	9cffffc4 	addi	r19,r19,-1
   22c5c:	00800044 	movi	r2,1
   22c60:	8ce6703a 	and	r19,r17,r19
   22c64:	80800015 	stw	r2,0(r16)
   22c68:	9823883a 	mov	r17,r19
   22c6c:	003fcc06 	br	22ba0 <_dtoa_r+0x74>
   22c70:	d8800204 	addi	r2,sp,8
   22c74:	d8800015 	stw	r2,0(sp)
   22c78:	d9c00104 	addi	r7,sp,4
   22c7c:	900b883a 	mov	r5,r18
   22c80:	980d883a 	mov	r6,r19
   22c84:	e009883a 	mov	r4,fp
   22c88:	8820d53a 	srli	r16,r17,20
   22c8c:	00268440 	call	26844 <__d2b>
   22c90:	d8800915 	stw	r2,36(sp)
   22c94:	8001651e 	bne	r16,zero,2322c <_dtoa_r+0x700>
   22c98:	dd800217 	ldw	r22,8(sp)
   22c9c:	dc000117 	ldw	r16,4(sp)
   22ca0:	00800804 	movi	r2,32
   22ca4:	b421883a 	add	r16,r22,r16
   22ca8:	80c10c84 	addi	r3,r16,1074
   22cac:	10c2d10e 	bge	r2,r3,237f4 <_dtoa_r+0xcc8>
   22cb0:	00801004 	movi	r2,64
   22cb4:	81010484 	addi	r4,r16,1042
   22cb8:	10c7c83a 	sub	r3,r2,r3
   22cbc:	9108d83a 	srl	r4,r18,r4
   22cc0:	88e2983a 	sll	r17,r17,r3
   22cc4:	2448b03a 	or	r4,r4,r17
   22cc8:	002cbdc0 	call	2cbdc <__floatunsidf>
   22ccc:	017f8434 	movhi	r5,65040
   22cd0:	01800044 	movi	r6,1
   22cd4:	1009883a 	mov	r4,r2
   22cd8:	194b883a 	add	r5,r3,r5
   22cdc:	843fffc4 	addi	r16,r16,-1
   22ce0:	d9801115 	stw	r6,68(sp)
   22ce4:	000d883a 	mov	r6,zero
   22ce8:	01cffe34 	movhi	r7,16376
   22cec:	002c1840 	call	2c184 <__subdf3>
   22cf0:	0198dbf4 	movhi	r6,25455
   22cf4:	01cff4f4 	movhi	r7,16339
   22cf8:	3190d844 	addi	r6,r6,17249
   22cfc:	39e1e9c4 	addi	r7,r7,-30809
   22d00:	1009883a 	mov	r4,r2
   22d04:	180b883a 	mov	r5,r3
   22d08:	002ba6c0 	call	2ba6c <__muldf3>
   22d0c:	01a2d874 	movhi	r6,35681
   22d10:	01cff1f4 	movhi	r7,16327
   22d14:	31b22cc4 	addi	r6,r6,-14157
   22d18:	39e28a04 	addi	r7,r7,-30168
   22d1c:	180b883a 	mov	r5,r3
   22d20:	1009883a 	mov	r4,r2
   22d24:	002a6800 	call	2a680 <__adddf3>
   22d28:	8009883a 	mov	r4,r16
   22d2c:	1029883a 	mov	r20,r2
   22d30:	1823883a 	mov	r17,r3
   22d34:	002cb000 	call	2cb00 <__floatsidf>
   22d38:	019427f4 	movhi	r6,20639
   22d3c:	01cff4f4 	movhi	r7,16339
   22d40:	319e7ec4 	addi	r6,r6,31227
   22d44:	39d104c4 	addi	r7,r7,17427
   22d48:	1009883a 	mov	r4,r2
   22d4c:	180b883a 	mov	r5,r3
   22d50:	002ba6c0 	call	2ba6c <__muldf3>
   22d54:	100d883a 	mov	r6,r2
   22d58:	180f883a 	mov	r7,r3
   22d5c:	a009883a 	mov	r4,r20
   22d60:	880b883a 	mov	r5,r17
   22d64:	002a6800 	call	2a680 <__adddf3>
   22d68:	1009883a 	mov	r4,r2
   22d6c:	180b883a 	mov	r5,r3
   22d70:	1029883a 	mov	r20,r2
   22d74:	1823883a 	mov	r17,r3
   22d78:	002ca800 	call	2ca80 <__fixdfsi>
   22d7c:	000d883a 	mov	r6,zero
   22d80:	000f883a 	mov	r7,zero
   22d84:	a009883a 	mov	r4,r20
   22d88:	880b883a 	mov	r5,r17
   22d8c:	d8800515 	stw	r2,20(sp)
   22d90:	002b9780 	call	2b978 <__ledf2>
   22d94:	10028716 	blt	r2,zero,237b4 <_dtoa_r+0xc88>
   22d98:	d8c00517 	ldw	r3,20(sp)
   22d9c:	00800584 	movi	r2,22
   22da0:	10c27536 	bltu	r2,r3,23778 <_dtoa_r+0xc4c>
   22da4:	180490fa 	slli	r2,r3,3
   22da8:	00c00034 	movhi	r3,0
   22dac:	18c03804 	addi	r3,r3,224
   22db0:	1885883a 	add	r2,r3,r2
   22db4:	11000017 	ldw	r4,0(r2)
   22db8:	11400117 	ldw	r5,4(r2)
   22dbc:	900d883a 	mov	r6,r18
   22dc0:	980f883a 	mov	r7,r19
   22dc4:	002b89c0 	call	2b89c <__gedf2>
   22dc8:	00828d0e 	bge	zero,r2,23800 <_dtoa_r+0xcd4>
   22dcc:	d9000517 	ldw	r4,20(sp)
   22dd0:	d8000e15 	stw	zero,56(sp)
   22dd4:	213fffc4 	addi	r4,r4,-1
   22dd8:	d9000515 	stw	r4,20(sp)
   22ddc:	b42dc83a 	sub	r22,r22,r16
   22de0:	b5bfffc4 	addi	r22,r22,-1
   22de4:	b0026f16 	blt	r22,zero,237a4 <_dtoa_r+0xc78>
   22de8:	d8000815 	stw	zero,32(sp)
   22dec:	d9c00517 	ldw	r7,20(sp)
   22df0:	38026416 	blt	r7,zero,23784 <_dtoa_r+0xc58>
   22df4:	b1ed883a 	add	r22,r22,r7
   22df8:	d9c00d15 	stw	r7,52(sp)
   22dfc:	d8000a15 	stw	zero,40(sp)
   22e00:	d9800317 	ldw	r6,12(sp)
   22e04:	00800244 	movi	r2,9
   22e08:	11811436 	bltu	r2,r6,2325c <_dtoa_r+0x730>
   22e0c:	00800144 	movi	r2,5
   22e10:	1184e10e 	bge	r2,r6,24198 <_dtoa_r+0x166c>
   22e14:	31bfff04 	addi	r6,r6,-4
   22e18:	d9800315 	stw	r6,12(sp)
   22e1c:	0023883a 	mov	r17,zero
   22e20:	d9800317 	ldw	r6,12(sp)
   22e24:	008000c4 	movi	r2,3
   22e28:	30836726 	beq	r6,r2,23bc8 <_dtoa_r+0x109c>
   22e2c:	1183410e 	bge	r2,r6,23b34 <_dtoa_r+0x1008>
   22e30:	d9c00317 	ldw	r7,12(sp)
   22e34:	00800104 	movi	r2,4
   22e38:	38827c26 	beq	r7,r2,2382c <_dtoa_r+0xd00>
   22e3c:	00800144 	movi	r2,5
   22e40:	3884c41e 	bne	r7,r2,24154 <_dtoa_r+0x1628>
   22e44:	00800044 	movi	r2,1
   22e48:	d8800b15 	stw	r2,44(sp)
   22e4c:	d8c00517 	ldw	r3,20(sp)
   22e50:	d9002217 	ldw	r4,136(sp)
   22e54:	1907883a 	add	r3,r3,r4
   22e58:	19800044 	addi	r6,r3,1
   22e5c:	d8c00c15 	stw	r3,48(sp)
   22e60:	d9800615 	stw	r6,24(sp)
   22e64:	0183a40e 	bge	zero,r6,23cf8 <_dtoa_r+0x11cc>
   22e68:	d9800617 	ldw	r6,24(sp)
   22e6c:	3021883a 	mov	r16,r6
   22e70:	e0001115 	stw	zero,68(fp)
   22e74:	008005c4 	movi	r2,23
   22e78:	1184c92e 	bgeu	r2,r6,241a0 <_dtoa_r+0x1674>
   22e7c:	00c00044 	movi	r3,1
   22e80:	00800104 	movi	r2,4
   22e84:	1085883a 	add	r2,r2,r2
   22e88:	11000504 	addi	r4,r2,20
   22e8c:	180b883a 	mov	r5,r3
   22e90:	18c00044 	addi	r3,r3,1
   22e94:	313ffb2e 	bgeu	r6,r4,22e84 <_dtoa_r+0x358>
   22e98:	e1401115 	stw	r5,68(fp)
   22e9c:	e009883a 	mov	r4,fp
   22ea0:	0025bb00 	call	25bb0 <_Balloc>
   22ea4:	d8800715 	stw	r2,28(sp)
   22ea8:	e0801015 	stw	r2,64(fp)
   22eac:	00800384 	movi	r2,14
   22eb0:	1400f736 	bltu	r2,r16,23290 <_dtoa_r+0x764>
   22eb4:	8800f626 	beq	r17,zero,23290 <_dtoa_r+0x764>
   22eb8:	d9c00517 	ldw	r7,20(sp)
   22ebc:	01c39a0e 	bge	zero,r7,23d28 <_dtoa_r+0x11fc>
   22ec0:	388003cc 	andi	r2,r7,15
   22ec4:	100490fa 	slli	r2,r2,3
   22ec8:	382bd13a 	srai	r21,r7,4
   22ecc:	00c00034 	movhi	r3,0
   22ed0:	18c03804 	addi	r3,r3,224
   22ed4:	1885883a 	add	r2,r3,r2
   22ed8:	a8c0040c 	andi	r3,r21,16
   22edc:	12400017 	ldw	r9,0(r2)
   22ee0:	12000117 	ldw	r8,4(r2)
   22ee4:	18037926 	beq	r3,zero,23ccc <_dtoa_r+0x11a0>
   22ee8:	00800034 	movhi	r2,0
   22eec:	10802e04 	addi	r2,r2,184
   22ef0:	11800817 	ldw	r6,32(r2)
   22ef4:	11c00917 	ldw	r7,36(r2)
   22ef8:	9009883a 	mov	r4,r18
   22efc:	980b883a 	mov	r5,r19
   22f00:	da001715 	stw	r8,92(sp)
   22f04:	da401615 	stw	r9,88(sp)
   22f08:	002af2c0 	call	2af2c <__divdf3>
   22f0c:	da001717 	ldw	r8,92(sp)
   22f10:	da401617 	ldw	r9,88(sp)
   22f14:	ad4003cc 	andi	r21,r21,15
   22f18:	040000c4 	movi	r16,3
   22f1c:	1023883a 	mov	r17,r2
   22f20:	1829883a 	mov	r20,r3
   22f24:	a8001126 	beq	r21,zero,22f6c <_dtoa_r+0x440>
   22f28:	05c00034 	movhi	r23,0
   22f2c:	bdc02e04 	addi	r23,r23,184
   22f30:	4805883a 	mov	r2,r9
   22f34:	4007883a 	mov	r3,r8
   22f38:	a980004c 	andi	r6,r21,1
   22f3c:	1009883a 	mov	r4,r2
   22f40:	a82bd07a 	srai	r21,r21,1
   22f44:	180b883a 	mov	r5,r3
   22f48:	30000426 	beq	r6,zero,22f5c <_dtoa_r+0x430>
   22f4c:	b9800017 	ldw	r6,0(r23)
   22f50:	b9c00117 	ldw	r7,4(r23)
   22f54:	84000044 	addi	r16,r16,1
   22f58:	002ba6c0 	call	2ba6c <__muldf3>
   22f5c:	bdc00204 	addi	r23,r23,8
   22f60:	a83ff51e 	bne	r21,zero,22f38 <_dtoa_r+0x40c>
   22f64:	1013883a 	mov	r9,r2
   22f68:	1811883a 	mov	r8,r3
   22f6c:	480d883a 	mov	r6,r9
   22f70:	400f883a 	mov	r7,r8
   22f74:	8809883a 	mov	r4,r17
   22f78:	a00b883a 	mov	r5,r20
   22f7c:	002af2c0 	call	2af2c <__divdf3>
   22f80:	d8800f15 	stw	r2,60(sp)
   22f84:	d8c01015 	stw	r3,64(sp)
   22f88:	d8c00e17 	ldw	r3,56(sp)
   22f8c:	18000626 	beq	r3,zero,22fa8 <_dtoa_r+0x47c>
   22f90:	d9000f17 	ldw	r4,60(sp)
   22f94:	d9401017 	ldw	r5,64(sp)
   22f98:	000d883a 	mov	r6,zero
   22f9c:	01cffc34 	movhi	r7,16368
   22fa0:	002b9780 	call	2b978 <__ledf2>
   22fa4:	10040b16 	blt	r2,zero,23fd4 <_dtoa_r+0x14a8>
   22fa8:	8009883a 	mov	r4,r16
   22fac:	002cb000 	call	2cb00 <__floatsidf>
   22fb0:	d9800f17 	ldw	r6,60(sp)
   22fb4:	d9c01017 	ldw	r7,64(sp)
   22fb8:	1009883a 	mov	r4,r2
   22fbc:	180b883a 	mov	r5,r3
   22fc0:	002ba6c0 	call	2ba6c <__muldf3>
   22fc4:	000d883a 	mov	r6,zero
   22fc8:	01d00734 	movhi	r7,16412
   22fcc:	1009883a 	mov	r4,r2
   22fd0:	180b883a 	mov	r5,r3
   22fd4:	002a6800 	call	2a680 <__adddf3>
   22fd8:	1021883a 	mov	r16,r2
   22fdc:	d8800617 	ldw	r2,24(sp)
   22fe0:	047f3034 	movhi	r17,64704
   22fe4:	1c63883a 	add	r17,r3,r17
   22fe8:	10031826 	beq	r2,zero,23c4c <_dtoa_r+0x1120>
   22fec:	d8c00517 	ldw	r3,20(sp)
   22ff0:	db000617 	ldw	r12,24(sp)
   22ff4:	d8c01315 	stw	r3,76(sp)
   22ff8:	d9000b17 	ldw	r4,44(sp)
   22ffc:	20038f26 	beq	r4,zero,23e3c <_dtoa_r+0x1310>
   23000:	60bfffc4 	addi	r2,r12,-1
   23004:	100490fa 	slli	r2,r2,3
   23008:	00c00034 	movhi	r3,0
   2300c:	18c03804 	addi	r3,r3,224
   23010:	1885883a 	add	r2,r3,r2
   23014:	11800017 	ldw	r6,0(r2)
   23018:	11c00117 	ldw	r7,4(r2)
   2301c:	d8800717 	ldw	r2,28(sp)
   23020:	0009883a 	mov	r4,zero
   23024:	014ff834 	movhi	r5,16352
   23028:	db001615 	stw	r12,88(sp)
   2302c:	15c00044 	addi	r23,r2,1
   23030:	002af2c0 	call	2af2c <__divdf3>
   23034:	800d883a 	mov	r6,r16
   23038:	880f883a 	mov	r7,r17
   2303c:	1009883a 	mov	r4,r2
   23040:	180b883a 	mov	r5,r3
   23044:	002c1840 	call	2c184 <__subdf3>
   23048:	d9401017 	ldw	r5,64(sp)
   2304c:	d9000f17 	ldw	r4,60(sp)
   23050:	102b883a 	mov	r21,r2
   23054:	d8c01215 	stw	r3,72(sp)
   23058:	002ca800 	call	2ca80 <__fixdfsi>
   2305c:	1009883a 	mov	r4,r2
   23060:	1029883a 	mov	r20,r2
   23064:	002cb000 	call	2cb00 <__floatsidf>
   23068:	d9000f17 	ldw	r4,60(sp)
   2306c:	d9401017 	ldw	r5,64(sp)
   23070:	100d883a 	mov	r6,r2
   23074:	180f883a 	mov	r7,r3
   23078:	002c1840 	call	2c184 <__subdf3>
   2307c:	1823883a 	mov	r17,r3
   23080:	d8c00717 	ldw	r3,28(sp)
   23084:	d9401217 	ldw	r5,72(sp)
   23088:	a2000c04 	addi	r8,r20,48
   2308c:	1021883a 	mov	r16,r2
   23090:	1a000005 	stb	r8,0(r3)
   23094:	800d883a 	mov	r6,r16
   23098:	880f883a 	mov	r7,r17
   2309c:	a809883a 	mov	r4,r21
   230a0:	4029883a 	mov	r20,r8
   230a4:	002b89c0 	call	2b89c <__gedf2>
   230a8:	00841d16 	blt	zero,r2,24120 <_dtoa_r+0x15f4>
   230ac:	800d883a 	mov	r6,r16
   230b0:	880f883a 	mov	r7,r17
   230b4:	0009883a 	mov	r4,zero
   230b8:	014ffc34 	movhi	r5,16368
   230bc:	002c1840 	call	2c184 <__subdf3>
   230c0:	d9401217 	ldw	r5,72(sp)
   230c4:	100d883a 	mov	r6,r2
   230c8:	180f883a 	mov	r7,r3
   230cc:	a809883a 	mov	r4,r21
   230d0:	002b89c0 	call	2b89c <__gedf2>
   230d4:	db001617 	ldw	r12,88(sp)
   230d8:	00840e16 	blt	zero,r2,24114 <_dtoa_r+0x15e8>
   230dc:	00800044 	movi	r2,1
   230e0:	13006b0e 	bge	r2,r12,23290 <_dtoa_r+0x764>
   230e4:	d9000717 	ldw	r4,28(sp)
   230e8:	dd800f15 	stw	r22,60(sp)
   230ec:	dcc01015 	stw	r19,64(sp)
   230f0:	2319883a 	add	r12,r4,r12
   230f4:	dcc01217 	ldw	r19,72(sp)
   230f8:	602d883a 	mov	r22,r12
   230fc:	dc801215 	stw	r18,72(sp)
   23100:	b825883a 	mov	r18,r23
   23104:	00000906 	br	2312c <_dtoa_r+0x600>
   23108:	002c1840 	call	2c184 <__subdf3>
   2310c:	a80d883a 	mov	r6,r21
   23110:	980f883a 	mov	r7,r19
   23114:	1009883a 	mov	r4,r2
   23118:	180b883a 	mov	r5,r3
   2311c:	002b9780 	call	2b978 <__ledf2>
   23120:	1003e816 	blt	r2,zero,240c4 <_dtoa_r+0x1598>
   23124:	b825883a 	mov	r18,r23
   23128:	bd83e926 	beq	r23,r22,240d0 <_dtoa_r+0x15a4>
   2312c:	a809883a 	mov	r4,r21
   23130:	980b883a 	mov	r5,r19
   23134:	000d883a 	mov	r6,zero
   23138:	01d00934 	movhi	r7,16420
   2313c:	002ba6c0 	call	2ba6c <__muldf3>
   23140:	000d883a 	mov	r6,zero
   23144:	01d00934 	movhi	r7,16420
   23148:	8009883a 	mov	r4,r16
   2314c:	880b883a 	mov	r5,r17
   23150:	102b883a 	mov	r21,r2
   23154:	1827883a 	mov	r19,r3
   23158:	002ba6c0 	call	2ba6c <__muldf3>
   2315c:	180b883a 	mov	r5,r3
   23160:	1009883a 	mov	r4,r2
   23164:	1821883a 	mov	r16,r3
   23168:	1023883a 	mov	r17,r2
   2316c:	002ca800 	call	2ca80 <__fixdfsi>
   23170:	1009883a 	mov	r4,r2
   23174:	1029883a 	mov	r20,r2
   23178:	002cb000 	call	2cb00 <__floatsidf>
   2317c:	8809883a 	mov	r4,r17
   23180:	800b883a 	mov	r5,r16
   23184:	100d883a 	mov	r6,r2
   23188:	180f883a 	mov	r7,r3
   2318c:	002c1840 	call	2c184 <__subdf3>
   23190:	a5000c04 	addi	r20,r20,48
   23194:	a80d883a 	mov	r6,r21
   23198:	980f883a 	mov	r7,r19
   2319c:	1009883a 	mov	r4,r2
   231a0:	180b883a 	mov	r5,r3
   231a4:	95000005 	stb	r20,0(r18)
   231a8:	1021883a 	mov	r16,r2
   231ac:	1823883a 	mov	r17,r3
   231b0:	002b9780 	call	2b978 <__ledf2>
   231b4:	bdc00044 	addi	r23,r23,1
   231b8:	800d883a 	mov	r6,r16
   231bc:	880f883a 	mov	r7,r17
   231c0:	0009883a 	mov	r4,zero
   231c4:	014ffc34 	movhi	r5,16368
   231c8:	103fcf0e 	bge	r2,zero,23108 <_dtoa_r+0x5dc>
   231cc:	d8c01317 	ldw	r3,76(sp)
   231d0:	d8c00515 	stw	r3,20(sp)
   231d4:	d9400917 	ldw	r5,36(sp)
   231d8:	e009883a 	mov	r4,fp
   231dc:	0025c580 	call	25c58 <_Bfree>
   231e0:	d9000517 	ldw	r4,20(sp)
   231e4:	d9802317 	ldw	r6,140(sp)
   231e8:	d9c02517 	ldw	r7,148(sp)
   231ec:	b8000005 	stb	zero,0(r23)
   231f0:	20800044 	addi	r2,r4,1
   231f4:	30800015 	stw	r2,0(r6)
   231f8:	3802aa26 	beq	r7,zero,23ca4 <_dtoa_r+0x1178>
   231fc:	3dc00015 	stw	r23,0(r7)
   23200:	d8800717 	ldw	r2,28(sp)
   23204:	003e7906 	br	22bec <_dtoa_r+0xc0>
   23208:	00800434 	movhi	r2,16
   2320c:	10bfffc4 	addi	r2,r2,-1
   23210:	88a2703a 	and	r17,r17,r2
   23214:	883e851e 	bne	r17,zero,22c2c <_dtoa_r+0x100>
   23218:	00800034 	movhi	r2,0
   2321c:	10801904 	addi	r2,r2,100
   23220:	003e8406 	br	22c34 <_dtoa_r+0x108>
   23224:	10c00204 	addi	r3,r2,8
   23228:	003e8706 	br	22c48 <_dtoa_r+0x11c>
   2322c:	01400434 	movhi	r5,16
   23230:	297fffc4 	addi	r5,r5,-1
   23234:	994a703a 	and	r5,r19,r5
   23238:	9009883a 	mov	r4,r18
   2323c:	843f0044 	addi	r16,r16,-1023
   23240:	294ffc34 	orhi	r5,r5,16368
   23244:	dd800217 	ldw	r22,8(sp)
   23248:	d8001115 	stw	zero,68(sp)
   2324c:	003ea506 	br	22ce4 <_dtoa_r+0x1b8>
   23250:	00800034 	movhi	r2,0
   23254:	10801004 	addi	r2,r2,64
   23258:	003e6406 	br	22bec <_dtoa_r+0xc0>
   2325c:	e0001115 	stw	zero,68(fp)
   23260:	000b883a 	mov	r5,zero
   23264:	e009883a 	mov	r4,fp
   23268:	0025bb00 	call	25bb0 <_Balloc>
   2326c:	01bfffc4 	movi	r6,-1
   23270:	01c00044 	movi	r7,1
   23274:	d8800715 	stw	r2,28(sp)
   23278:	d9800c15 	stw	r6,48(sp)
   2327c:	e0801015 	stw	r2,64(fp)
   23280:	d8000315 	stw	zero,12(sp)
   23284:	d9c00b15 	stw	r7,44(sp)
   23288:	d9800615 	stw	r6,24(sp)
   2328c:	d8002215 	stw	zero,136(sp)
   23290:	d8800117 	ldw	r2,4(sp)
   23294:	10008916 	blt	r2,zero,234bc <_dtoa_r+0x990>
   23298:	d9000517 	ldw	r4,20(sp)
   2329c:	00c00384 	movi	r3,14
   232a0:	19008616 	blt	r3,r4,234bc <_dtoa_r+0x990>
   232a4:	200490fa 	slli	r2,r4,3
   232a8:	00c00034 	movhi	r3,0
   232ac:	d9802217 	ldw	r6,136(sp)
   232b0:	18c03804 	addi	r3,r3,224
   232b4:	1885883a 	add	r2,r3,r2
   232b8:	14000017 	ldw	r16,0(r2)
   232bc:	14400117 	ldw	r17,4(r2)
   232c0:	30016316 	blt	r6,zero,23850 <_dtoa_r+0xd24>
   232c4:	800d883a 	mov	r6,r16
   232c8:	880f883a 	mov	r7,r17
   232cc:	9009883a 	mov	r4,r18
   232d0:	980b883a 	mov	r5,r19
   232d4:	002af2c0 	call	2af2c <__divdf3>
   232d8:	180b883a 	mov	r5,r3
   232dc:	1009883a 	mov	r4,r2
   232e0:	002ca800 	call	2ca80 <__fixdfsi>
   232e4:	1009883a 	mov	r4,r2
   232e8:	102b883a 	mov	r21,r2
   232ec:	002cb000 	call	2cb00 <__floatsidf>
   232f0:	800d883a 	mov	r6,r16
   232f4:	880f883a 	mov	r7,r17
   232f8:	1009883a 	mov	r4,r2
   232fc:	180b883a 	mov	r5,r3
   23300:	002ba6c0 	call	2ba6c <__muldf3>
   23304:	100d883a 	mov	r6,r2
   23308:	180f883a 	mov	r7,r3
   2330c:	9009883a 	mov	r4,r18
   23310:	980b883a 	mov	r5,r19
   23314:	002c1840 	call	2c184 <__subdf3>
   23318:	d9c00717 	ldw	r7,28(sp)
   2331c:	1009883a 	mov	r4,r2
   23320:	a8800c04 	addi	r2,r21,48
   23324:	38800005 	stb	r2,0(r7)
   23328:	3dc00044 	addi	r23,r7,1
   2332c:	d9c00617 	ldw	r7,24(sp)
   23330:	01800044 	movi	r6,1
   23334:	180b883a 	mov	r5,r3
   23338:	2005883a 	mov	r2,r4
   2333c:	39803826 	beq	r7,r6,23420 <_dtoa_r+0x8f4>
   23340:	000d883a 	mov	r6,zero
   23344:	01d00934 	movhi	r7,16420
   23348:	002ba6c0 	call	2ba6c <__muldf3>
   2334c:	000d883a 	mov	r6,zero
   23350:	000f883a 	mov	r7,zero
   23354:	1009883a 	mov	r4,r2
   23358:	180b883a 	mov	r5,r3
   2335c:	1025883a 	mov	r18,r2
   23360:	1827883a 	mov	r19,r3
   23364:	002b8140 	call	2b814 <__eqdf2>
   23368:	103f9a26 	beq	r2,zero,231d4 <_dtoa_r+0x6a8>
   2336c:	d9c00617 	ldw	r7,24(sp)
   23370:	d8c00717 	ldw	r3,28(sp)
   23374:	b829883a 	mov	r20,r23
   23378:	38bfffc4 	addi	r2,r7,-1
   2337c:	18ad883a 	add	r22,r3,r2
   23380:	00000a06 	br	233ac <_dtoa_r+0x880>
   23384:	002ba6c0 	call	2ba6c <__muldf3>
   23388:	000d883a 	mov	r6,zero
   2338c:	000f883a 	mov	r7,zero
   23390:	1009883a 	mov	r4,r2
   23394:	180b883a 	mov	r5,r3
   23398:	1025883a 	mov	r18,r2
   2339c:	1827883a 	mov	r19,r3
   233a0:	b829883a 	mov	r20,r23
   233a4:	002b8140 	call	2b814 <__eqdf2>
   233a8:	103f8a26 	beq	r2,zero,231d4 <_dtoa_r+0x6a8>
   233ac:	800d883a 	mov	r6,r16
   233b0:	880f883a 	mov	r7,r17
   233b4:	9009883a 	mov	r4,r18
   233b8:	980b883a 	mov	r5,r19
   233bc:	002af2c0 	call	2af2c <__divdf3>
   233c0:	180b883a 	mov	r5,r3
   233c4:	1009883a 	mov	r4,r2
   233c8:	002ca800 	call	2ca80 <__fixdfsi>
   233cc:	1009883a 	mov	r4,r2
   233d0:	102b883a 	mov	r21,r2
   233d4:	002cb000 	call	2cb00 <__floatsidf>
   233d8:	800d883a 	mov	r6,r16
   233dc:	880f883a 	mov	r7,r17
   233e0:	1009883a 	mov	r4,r2
   233e4:	180b883a 	mov	r5,r3
   233e8:	002ba6c0 	call	2ba6c <__muldf3>
   233ec:	100d883a 	mov	r6,r2
   233f0:	180f883a 	mov	r7,r3
   233f4:	9009883a 	mov	r4,r18
   233f8:	980b883a 	mov	r5,r19
   233fc:	002c1840 	call	2c184 <__subdf3>
   23400:	aa000c04 	addi	r8,r21,48
   23404:	a2000005 	stb	r8,0(r20)
   23408:	000d883a 	mov	r6,zero
   2340c:	01d00934 	movhi	r7,16420
   23410:	1009883a 	mov	r4,r2
   23414:	180b883a 	mov	r5,r3
   23418:	a5c00044 	addi	r23,r20,1
   2341c:	b53fd91e 	bne	r22,r20,23384 <_dtoa_r+0x858>
   23420:	100d883a 	mov	r6,r2
   23424:	180f883a 	mov	r7,r3
   23428:	1009883a 	mov	r4,r2
   2342c:	180b883a 	mov	r5,r3
   23430:	002a6800 	call	2a680 <__adddf3>
   23434:	100d883a 	mov	r6,r2
   23438:	180f883a 	mov	r7,r3
   2343c:	8009883a 	mov	r4,r16
   23440:	880b883a 	mov	r5,r17
   23444:	1027883a 	mov	r19,r2
   23448:	1825883a 	mov	r18,r3
   2344c:	002b9780 	call	2b978 <__ledf2>
   23450:	10000816 	blt	r2,zero,23474 <_dtoa_r+0x948>
   23454:	980d883a 	mov	r6,r19
   23458:	900f883a 	mov	r7,r18
   2345c:	8009883a 	mov	r4,r16
   23460:	880b883a 	mov	r5,r17
   23464:	002b8140 	call	2b814 <__eqdf2>
   23468:	103f5a1e 	bne	r2,zero,231d4 <_dtoa_r+0x6a8>
   2346c:	ad40004c 	andi	r21,r21,1
   23470:	a83f5826 	beq	r21,zero,231d4 <_dtoa_r+0x6a8>
   23474:	bd3fffc3 	ldbu	r20,-1(r23)
   23478:	b8bfffc4 	addi	r2,r23,-1
   2347c:	1007883a 	mov	r3,r2
   23480:	01400e44 	movi	r5,57
   23484:	d9800717 	ldw	r6,28(sp)
   23488:	00000506 	br	234a0 <_dtoa_r+0x974>
   2348c:	18ffffc4 	addi	r3,r3,-1
   23490:	11824726 	beq	r2,r6,23db0 <_dtoa_r+0x1284>
   23494:	1d000003 	ldbu	r20,0(r3)
   23498:	102f883a 	mov	r23,r2
   2349c:	10bfffc4 	addi	r2,r2,-1
   234a0:	a1003fcc 	andi	r4,r20,255
   234a4:	2100201c 	xori	r4,r4,128
   234a8:	213fe004 	addi	r4,r4,-128
   234ac:	217ff726 	beq	r4,r5,2348c <_dtoa_r+0x960>
   234b0:	a2000044 	addi	r8,r20,1
   234b4:	12000005 	stb	r8,0(r2)
   234b8:	003f4606 	br	231d4 <_dtoa_r+0x6a8>
   234bc:	d9000b17 	ldw	r4,44(sp)
   234c0:	2000c826 	beq	r4,zero,237e4 <_dtoa_r+0xcb8>
   234c4:	d9800317 	ldw	r6,12(sp)
   234c8:	00c00044 	movi	r3,1
   234cc:	1980f90e 	bge	r3,r6,238b4 <_dtoa_r+0xd88>
   234d0:	d8800617 	ldw	r2,24(sp)
   234d4:	d8c00a17 	ldw	r3,40(sp)
   234d8:	157fffc4 	addi	r21,r2,-1
   234dc:	1d41f316 	blt	r3,r21,23cac <_dtoa_r+0x1180>
   234e0:	1d6bc83a 	sub	r21,r3,r21
   234e4:	d9c00617 	ldw	r7,24(sp)
   234e8:	3802aa16 	blt	r7,zero,23f94 <_dtoa_r+0x1468>
   234ec:	dd000817 	ldw	r20,32(sp)
   234f0:	d8800617 	ldw	r2,24(sp)
   234f4:	d8c00817 	ldw	r3,32(sp)
   234f8:	01400044 	movi	r5,1
   234fc:	e009883a 	mov	r4,fp
   23500:	1887883a 	add	r3,r3,r2
   23504:	d8c00815 	stw	r3,32(sp)
   23508:	b0ad883a 	add	r22,r22,r2
   2350c:	0025fbc0 	call	25fbc <__i2b>
   23510:	1023883a 	mov	r17,r2
   23514:	a0000826 	beq	r20,zero,23538 <_dtoa_r+0xa0c>
   23518:	0580070e 	bge	zero,r22,23538 <_dtoa_r+0xa0c>
   2351c:	a005883a 	mov	r2,r20
   23520:	b500b916 	blt	r22,r20,23808 <_dtoa_r+0xcdc>
   23524:	d9000817 	ldw	r4,32(sp)
   23528:	a0a9c83a 	sub	r20,r20,r2
   2352c:	b0adc83a 	sub	r22,r22,r2
   23530:	2089c83a 	sub	r4,r4,r2
   23534:	d9000815 	stw	r4,32(sp)
   23538:	d9800a17 	ldw	r6,40(sp)
   2353c:	0181810e 	bge	zero,r6,23b44 <_dtoa_r+0x1018>
   23540:	d9c00b17 	ldw	r7,44(sp)
   23544:	3800b326 	beq	r7,zero,23814 <_dtoa_r+0xce8>
   23548:	a800b226 	beq	r21,zero,23814 <_dtoa_r+0xce8>
   2354c:	880b883a 	mov	r5,r17
   23550:	a80d883a 	mov	r6,r21
   23554:	e009883a 	mov	r4,fp
   23558:	00261f00 	call	261f0 <__pow5mult>
   2355c:	d9800917 	ldw	r6,36(sp)
   23560:	100b883a 	mov	r5,r2
   23564:	e009883a 	mov	r4,fp
   23568:	1023883a 	mov	r17,r2
   2356c:	0025ff80 	call	25ff8 <__multiply>
   23570:	1021883a 	mov	r16,r2
   23574:	d8800a17 	ldw	r2,40(sp)
   23578:	d9400917 	ldw	r5,36(sp)
   2357c:	e009883a 	mov	r4,fp
   23580:	1545c83a 	sub	r2,r2,r21
   23584:	d8800a15 	stw	r2,40(sp)
   23588:	0025c580 	call	25c58 <_Bfree>
   2358c:	d8c00a17 	ldw	r3,40(sp)
   23590:	18009f1e 	bne	r3,zero,23810 <_dtoa_r+0xce4>
   23594:	05c00044 	movi	r23,1
   23598:	e009883a 	mov	r4,fp
   2359c:	b80b883a 	mov	r5,r23
   235a0:	0025fbc0 	call	25fbc <__i2b>
   235a4:	d9000d17 	ldw	r4,52(sp)
   235a8:	102b883a 	mov	r21,r2
   235ac:	2000ce26 	beq	r4,zero,238e8 <_dtoa_r+0xdbc>
   235b0:	200d883a 	mov	r6,r4
   235b4:	100b883a 	mov	r5,r2
   235b8:	e009883a 	mov	r4,fp
   235bc:	00261f00 	call	261f0 <__pow5mult>
   235c0:	d9800317 	ldw	r6,12(sp)
   235c4:	102b883a 	mov	r21,r2
   235c8:	b981810e 	bge	r23,r6,23bd0 <_dtoa_r+0x10a4>
   235cc:	0027883a 	mov	r19,zero
   235d0:	a8800417 	ldw	r2,16(r21)
   235d4:	05c00804 	movi	r23,32
   235d8:	10800104 	addi	r2,r2,4
   235dc:	1085883a 	add	r2,r2,r2
   235e0:	1085883a 	add	r2,r2,r2
   235e4:	a885883a 	add	r2,r21,r2
   235e8:	11000017 	ldw	r4,0(r2)
   235ec:	0025ea40 	call	25ea4 <__hi0bits>
   235f0:	b885c83a 	sub	r2,r23,r2
   235f4:	1585883a 	add	r2,r2,r22
   235f8:	108007cc 	andi	r2,r2,31
   235fc:	1000b326 	beq	r2,zero,238cc <_dtoa_r+0xda0>
   23600:	00c00804 	movi	r3,32
   23604:	1887c83a 	sub	r3,r3,r2
   23608:	01000104 	movi	r4,4
   2360c:	20c2cd0e 	bge	r4,r3,24144 <_dtoa_r+0x1618>
   23610:	00c00704 	movi	r3,28
   23614:	1885c83a 	sub	r2,r3,r2
   23618:	d8c00817 	ldw	r3,32(sp)
   2361c:	a0a9883a 	add	r20,r20,r2
   23620:	b0ad883a 	add	r22,r22,r2
   23624:	1887883a 	add	r3,r3,r2
   23628:	d8c00815 	stw	r3,32(sp)
   2362c:	d9800817 	ldw	r6,32(sp)
   23630:	0180040e 	bge	zero,r6,23644 <_dtoa_r+0xb18>
   23634:	800b883a 	mov	r5,r16
   23638:	e009883a 	mov	r4,fp
   2363c:	00263300 	call	26330 <__lshift>
   23640:	1021883a 	mov	r16,r2
   23644:	0580050e 	bge	zero,r22,2365c <_dtoa_r+0xb30>
   23648:	a80b883a 	mov	r5,r21
   2364c:	b00d883a 	mov	r6,r22
   23650:	e009883a 	mov	r4,fp
   23654:	00263300 	call	26330 <__lshift>
   23658:	102b883a 	mov	r21,r2
   2365c:	d9c00e17 	ldw	r7,56(sp)
   23660:	3801211e 	bne	r7,zero,23ae8 <_dtoa_r+0xfbc>
   23664:	d9800617 	ldw	r6,24(sp)
   23668:	0181380e 	bge	zero,r6,23b4c <_dtoa_r+0x1020>
   2366c:	d8c00b17 	ldw	r3,44(sp)
   23670:	1800ab1e 	bne	r3,zero,23920 <_dtoa_r+0xdf4>
   23674:	dc800717 	ldw	r18,28(sp)
   23678:	dcc00617 	ldw	r19,24(sp)
   2367c:	9029883a 	mov	r20,r18
   23680:	00000206 	br	2368c <_dtoa_r+0xb60>
   23684:	0025c800 	call	25c80 <__multadd>
   23688:	1021883a 	mov	r16,r2
   2368c:	a80b883a 	mov	r5,r21
   23690:	8009883a 	mov	r4,r16
   23694:	002292c0 	call	2292c <quorem>
   23698:	10800c04 	addi	r2,r2,48
   2369c:	90800005 	stb	r2,0(r18)
   236a0:	94800044 	addi	r18,r18,1
   236a4:	9507c83a 	sub	r3,r18,r20
   236a8:	000f883a 	mov	r7,zero
   236ac:	01800284 	movi	r6,10
   236b0:	800b883a 	mov	r5,r16
   236b4:	e009883a 	mov	r4,fp
   236b8:	1cfff216 	blt	r3,r19,23684 <_dtoa_r+0xb58>
   236bc:	1011883a 	mov	r8,r2
   236c0:	d8800617 	ldw	r2,24(sp)
   236c4:	0082370e 	bge	zero,r2,23fa4 <_dtoa_r+0x1478>
   236c8:	d9000717 	ldw	r4,28(sp)
   236cc:	0025883a 	mov	r18,zero
   236d0:	20af883a 	add	r23,r4,r2
   236d4:	01800044 	movi	r6,1
   236d8:	800b883a 	mov	r5,r16
   236dc:	e009883a 	mov	r4,fp
   236e0:	da001715 	stw	r8,92(sp)
   236e4:	00263300 	call	26330 <__lshift>
   236e8:	a80b883a 	mov	r5,r21
   236ec:	1009883a 	mov	r4,r2
   236f0:	d8800915 	stw	r2,36(sp)
   236f4:	00264780 	call	26478 <__mcmp>
   236f8:	da001717 	ldw	r8,92(sp)
   236fc:	0081800e 	bge	zero,r2,23d00 <_dtoa_r+0x11d4>
   23700:	b93fffc3 	ldbu	r4,-1(r23)
   23704:	b8bfffc4 	addi	r2,r23,-1
   23708:	1007883a 	mov	r3,r2
   2370c:	01800e44 	movi	r6,57
   23710:	d9c00717 	ldw	r7,28(sp)
   23714:	00000506 	br	2372c <_dtoa_r+0xc00>
   23718:	18ffffc4 	addi	r3,r3,-1
   2371c:	11c12326 	beq	r2,r7,23bac <_dtoa_r+0x1080>
   23720:	19000003 	ldbu	r4,0(r3)
   23724:	102f883a 	mov	r23,r2
   23728:	10bfffc4 	addi	r2,r2,-1
   2372c:	21403fcc 	andi	r5,r4,255
   23730:	2940201c 	xori	r5,r5,128
   23734:	297fe004 	addi	r5,r5,-128
   23738:	29bff726 	beq	r5,r6,23718 <_dtoa_r+0xbec>
   2373c:	21000044 	addi	r4,r4,1
   23740:	11000005 	stb	r4,0(r2)
   23744:	a80b883a 	mov	r5,r21
   23748:	e009883a 	mov	r4,fp
   2374c:	0025c580 	call	25c58 <_Bfree>
   23750:	883ea026 	beq	r17,zero,231d4 <_dtoa_r+0x6a8>
   23754:	90000426 	beq	r18,zero,23768 <_dtoa_r+0xc3c>
   23758:	94400326 	beq	r18,r17,23768 <_dtoa_r+0xc3c>
   2375c:	900b883a 	mov	r5,r18
   23760:	e009883a 	mov	r4,fp
   23764:	0025c580 	call	25c58 <_Bfree>
   23768:	880b883a 	mov	r5,r17
   2376c:	e009883a 	mov	r4,fp
   23770:	0025c580 	call	25c58 <_Bfree>
   23774:	003e9706 	br	231d4 <_dtoa_r+0x6a8>
   23778:	01800044 	movi	r6,1
   2377c:	d9800e15 	stw	r6,56(sp)
   23780:	003d9606 	br	22ddc <_dtoa_r+0x2b0>
   23784:	d8800817 	ldw	r2,32(sp)
   23788:	d8c00517 	ldw	r3,20(sp)
   2378c:	d8000d15 	stw	zero,52(sp)
   23790:	10c5c83a 	sub	r2,r2,r3
   23794:	00c9c83a 	sub	r4,zero,r3
   23798:	d8800815 	stw	r2,32(sp)
   2379c:	d9000a15 	stw	r4,40(sp)
   237a0:	003d9706 	br	22e00 <_dtoa_r+0x2d4>
   237a4:	05adc83a 	sub	r22,zero,r22
   237a8:	dd800815 	stw	r22,32(sp)
   237ac:	002d883a 	mov	r22,zero
   237b0:	003d8e06 	br	22dec <_dtoa_r+0x2c0>
   237b4:	d9000517 	ldw	r4,20(sp)
   237b8:	002cb000 	call	2cb00 <__floatsidf>
   237bc:	100d883a 	mov	r6,r2
   237c0:	180f883a 	mov	r7,r3
   237c4:	a009883a 	mov	r4,r20
   237c8:	880b883a 	mov	r5,r17
   237cc:	002b8140 	call	2b814 <__eqdf2>
   237d0:	103d7126 	beq	r2,zero,22d98 <_dtoa_r+0x26c>
   237d4:	d9c00517 	ldw	r7,20(sp)
   237d8:	39ffffc4 	addi	r7,r7,-1
   237dc:	d9c00515 	stw	r7,20(sp)
   237e0:	003d6d06 	br	22d98 <_dtoa_r+0x26c>
   237e4:	dd400a17 	ldw	r21,40(sp)
   237e8:	dd000817 	ldw	r20,32(sp)
   237ec:	0023883a 	mov	r17,zero
   237f0:	003f4806 	br	23514 <_dtoa_r+0x9e8>
   237f4:	10e3c83a 	sub	r17,r2,r3
   237f8:	9448983a 	sll	r4,r18,r17
   237fc:	003d3206 	br	22cc8 <_dtoa_r+0x19c>
   23800:	d8000e15 	stw	zero,56(sp)
   23804:	003d7506 	br	22ddc <_dtoa_r+0x2b0>
   23808:	b005883a 	mov	r2,r22
   2380c:	003f4506 	br	23524 <_dtoa_r+0x9f8>
   23810:	dc000915 	stw	r16,36(sp)
   23814:	d9800a17 	ldw	r6,40(sp)
   23818:	d9400917 	ldw	r5,36(sp)
   2381c:	e009883a 	mov	r4,fp
   23820:	00261f00 	call	261f0 <__pow5mult>
   23824:	1021883a 	mov	r16,r2
   23828:	003f5a06 	br	23594 <_dtoa_r+0xa68>
   2382c:	01c00044 	movi	r7,1
   23830:	d9c00b15 	stw	r7,44(sp)
   23834:	d8802217 	ldw	r2,136(sp)
   23838:	0081280e 	bge	zero,r2,23cdc <_dtoa_r+0x11b0>
   2383c:	100d883a 	mov	r6,r2
   23840:	1021883a 	mov	r16,r2
   23844:	d8800c15 	stw	r2,48(sp)
   23848:	d8800615 	stw	r2,24(sp)
   2384c:	003d8806 	br	22e70 <_dtoa_r+0x344>
   23850:	d8800617 	ldw	r2,24(sp)
   23854:	00be9b16 	blt	zero,r2,232c4 <_dtoa_r+0x798>
   23858:	10010f1e 	bne	r2,zero,23c98 <_dtoa_r+0x116c>
   2385c:	880b883a 	mov	r5,r17
   23860:	000d883a 	mov	r6,zero
   23864:	01d00534 	movhi	r7,16404
   23868:	8009883a 	mov	r4,r16
   2386c:	002ba6c0 	call	2ba6c <__muldf3>
   23870:	900d883a 	mov	r6,r18
   23874:	980f883a 	mov	r7,r19
   23878:	1009883a 	mov	r4,r2
   2387c:	180b883a 	mov	r5,r3
   23880:	002b89c0 	call	2b89c <__gedf2>
   23884:	002b883a 	mov	r21,zero
   23888:	0023883a 	mov	r17,zero
   2388c:	1000bf16 	blt	r2,zero,23b8c <_dtoa_r+0x1060>
   23890:	d9802217 	ldw	r6,136(sp)
   23894:	ddc00717 	ldw	r23,28(sp)
   23898:	018c303a 	nor	r6,zero,r6
   2389c:	d9800515 	stw	r6,20(sp)
   238a0:	a80b883a 	mov	r5,r21
   238a4:	e009883a 	mov	r4,fp
   238a8:	0025c580 	call	25c58 <_Bfree>
   238ac:	883e4926 	beq	r17,zero,231d4 <_dtoa_r+0x6a8>
   238b0:	003fad06 	br	23768 <_dtoa_r+0xc3c>
   238b4:	d9c01117 	ldw	r7,68(sp)
   238b8:	3801bc26 	beq	r7,zero,23fac <_dtoa_r+0x1480>
   238bc:	10810cc4 	addi	r2,r2,1075
   238c0:	dd400a17 	ldw	r21,40(sp)
   238c4:	dd000817 	ldw	r20,32(sp)
   238c8:	003f0a06 	br	234f4 <_dtoa_r+0x9c8>
   238cc:	00800704 	movi	r2,28
   238d0:	d9000817 	ldw	r4,32(sp)
   238d4:	a0a9883a 	add	r20,r20,r2
   238d8:	b0ad883a 	add	r22,r22,r2
   238dc:	2089883a 	add	r4,r4,r2
   238e0:	d9000815 	stw	r4,32(sp)
   238e4:	003f5106 	br	2362c <_dtoa_r+0xb00>
   238e8:	d8c00317 	ldw	r3,12(sp)
   238ec:	b8c1fc0e 	bge	r23,r3,240e0 <_dtoa_r+0x15b4>
   238f0:	0027883a 	mov	r19,zero
   238f4:	b805883a 	mov	r2,r23
   238f8:	003f3e06 	br	235f4 <_dtoa_r+0xac8>
   238fc:	880b883a 	mov	r5,r17
   23900:	e009883a 	mov	r4,fp
   23904:	000f883a 	mov	r7,zero
   23908:	01800284 	movi	r6,10
   2390c:	0025c800 	call	25c80 <__multadd>
   23910:	d9000c17 	ldw	r4,48(sp)
   23914:	1023883a 	mov	r17,r2
   23918:	0102040e 	bge	zero,r4,2412c <_dtoa_r+0x1600>
   2391c:	d9000615 	stw	r4,24(sp)
   23920:	0500050e 	bge	zero,r20,23938 <_dtoa_r+0xe0c>
   23924:	880b883a 	mov	r5,r17
   23928:	a00d883a 	mov	r6,r20
   2392c:	e009883a 	mov	r4,fp
   23930:	00263300 	call	26330 <__lshift>
   23934:	1023883a 	mov	r17,r2
   23938:	9801241e 	bne	r19,zero,23dcc <_dtoa_r+0x12a0>
   2393c:	8829883a 	mov	r20,r17
   23940:	d9000617 	ldw	r4,24(sp)
   23944:	dcc00717 	ldw	r19,28(sp)
   23948:	9480004c 	andi	r18,r18,1
   2394c:	20bfffc4 	addi	r2,r4,-1
   23950:	9885883a 	add	r2,r19,r2
   23954:	d8800415 	stw	r2,16(sp)
   23958:	dc800615 	stw	r18,24(sp)
   2395c:	a80b883a 	mov	r5,r21
   23960:	8009883a 	mov	r4,r16
   23964:	002292c0 	call	2292c <quorem>
   23968:	880b883a 	mov	r5,r17
   2396c:	8009883a 	mov	r4,r16
   23970:	102f883a 	mov	r23,r2
   23974:	00264780 	call	26478 <__mcmp>
   23978:	a80b883a 	mov	r5,r21
   2397c:	a00d883a 	mov	r6,r20
   23980:	e009883a 	mov	r4,fp
   23984:	102d883a 	mov	r22,r2
   23988:	00264d80 	call	264d8 <__mdiff>
   2398c:	1007883a 	mov	r3,r2
   23990:	10800317 	ldw	r2,12(r2)
   23994:	bc800c04 	addi	r18,r23,48
   23998:	180b883a 	mov	r5,r3
   2399c:	10004e1e 	bne	r2,zero,23ad8 <_dtoa_r+0xfac>
   239a0:	8009883a 	mov	r4,r16
   239a4:	d8c01615 	stw	r3,88(sp)
   239a8:	00264780 	call	26478 <__mcmp>
   239ac:	d8c01617 	ldw	r3,88(sp)
   239b0:	e009883a 	mov	r4,fp
   239b4:	d8801615 	stw	r2,88(sp)
   239b8:	180b883a 	mov	r5,r3
   239bc:	0025c580 	call	25c58 <_Bfree>
   239c0:	d8801617 	ldw	r2,88(sp)
   239c4:	1000041e 	bne	r2,zero,239d8 <_dtoa_r+0xeac>
   239c8:	d9800317 	ldw	r6,12(sp)
   239cc:	3000021e 	bne	r6,zero,239d8 <_dtoa_r+0xeac>
   239d0:	d8c00617 	ldw	r3,24(sp)
   239d4:	18003726 	beq	r3,zero,23ab4 <_dtoa_r+0xf88>
   239d8:	b0002016 	blt	r22,zero,23a5c <_dtoa_r+0xf30>
   239dc:	b000041e 	bne	r22,zero,239f0 <_dtoa_r+0xec4>
   239e0:	d9000317 	ldw	r4,12(sp)
   239e4:	2000021e 	bne	r4,zero,239f0 <_dtoa_r+0xec4>
   239e8:	d8c00617 	ldw	r3,24(sp)
   239ec:	18001b26 	beq	r3,zero,23a5c <_dtoa_r+0xf30>
   239f0:	00810716 	blt	zero,r2,23e10 <_dtoa_r+0x12e4>
   239f4:	d8c00417 	ldw	r3,16(sp)
   239f8:	9d800044 	addi	r22,r19,1
   239fc:	9c800005 	stb	r18,0(r19)
   23a00:	b02f883a 	mov	r23,r22
   23a04:	98c10626 	beq	r19,r3,23e20 <_dtoa_r+0x12f4>
   23a08:	800b883a 	mov	r5,r16
   23a0c:	000f883a 	mov	r7,zero
   23a10:	01800284 	movi	r6,10
   23a14:	e009883a 	mov	r4,fp
   23a18:	0025c800 	call	25c80 <__multadd>
   23a1c:	1021883a 	mov	r16,r2
   23a20:	000f883a 	mov	r7,zero
   23a24:	01800284 	movi	r6,10
   23a28:	880b883a 	mov	r5,r17
   23a2c:	e009883a 	mov	r4,fp
   23a30:	8d002526 	beq	r17,r20,23ac8 <_dtoa_r+0xf9c>
   23a34:	0025c800 	call	25c80 <__multadd>
   23a38:	a00b883a 	mov	r5,r20
   23a3c:	000f883a 	mov	r7,zero
   23a40:	01800284 	movi	r6,10
   23a44:	e009883a 	mov	r4,fp
   23a48:	1023883a 	mov	r17,r2
   23a4c:	0025c800 	call	25c80 <__multadd>
   23a50:	1029883a 	mov	r20,r2
   23a54:	b027883a 	mov	r19,r22
   23a58:	003fc006 	br	2395c <_dtoa_r+0xe30>
   23a5c:	9011883a 	mov	r8,r18
   23a60:	00800e0e 	bge	zero,r2,23a9c <_dtoa_r+0xf70>
   23a64:	800b883a 	mov	r5,r16
   23a68:	01800044 	movi	r6,1
   23a6c:	e009883a 	mov	r4,fp
   23a70:	da001715 	stw	r8,92(sp)
   23a74:	00263300 	call	26330 <__lshift>
   23a78:	a80b883a 	mov	r5,r21
   23a7c:	1009883a 	mov	r4,r2
   23a80:	1021883a 	mov	r16,r2
   23a84:	00264780 	call	26478 <__mcmp>
   23a88:	da001717 	ldw	r8,92(sp)
   23a8c:	0081960e 	bge	zero,r2,240e8 <_dtoa_r+0x15bc>
   23a90:	00800e44 	movi	r2,57
   23a94:	40817026 	beq	r8,r2,24058 <_dtoa_r+0x152c>
   23a98:	ba000c44 	addi	r8,r23,49
   23a9c:	8825883a 	mov	r18,r17
   23aa0:	9dc00044 	addi	r23,r19,1
   23aa4:	9a000005 	stb	r8,0(r19)
   23aa8:	a023883a 	mov	r17,r20
   23aac:	dc000915 	stw	r16,36(sp)
   23ab0:	003f2406 	br	23744 <_dtoa_r+0xc18>
   23ab4:	00800e44 	movi	r2,57
   23ab8:	9011883a 	mov	r8,r18
   23abc:	90816626 	beq	r18,r2,24058 <_dtoa_r+0x152c>
   23ac0:	05bff516 	blt	zero,r22,23a98 <_dtoa_r+0xf6c>
   23ac4:	003ff506 	br	23a9c <_dtoa_r+0xf70>
   23ac8:	0025c800 	call	25c80 <__multadd>
   23acc:	1023883a 	mov	r17,r2
   23ad0:	1029883a 	mov	r20,r2
   23ad4:	003fdf06 	br	23a54 <_dtoa_r+0xf28>
   23ad8:	e009883a 	mov	r4,fp
   23adc:	0025c580 	call	25c58 <_Bfree>
   23ae0:	00800044 	movi	r2,1
   23ae4:	003fbc06 	br	239d8 <_dtoa_r+0xeac>
   23ae8:	a80b883a 	mov	r5,r21
   23aec:	8009883a 	mov	r4,r16
   23af0:	00264780 	call	26478 <__mcmp>
   23af4:	103edb0e 	bge	r2,zero,23664 <_dtoa_r+0xb38>
   23af8:	800b883a 	mov	r5,r16
   23afc:	000f883a 	mov	r7,zero
   23b00:	01800284 	movi	r6,10
   23b04:	e009883a 	mov	r4,fp
   23b08:	0025c800 	call	25c80 <__multadd>
   23b0c:	1021883a 	mov	r16,r2
   23b10:	d8800517 	ldw	r2,20(sp)
   23b14:	d8c00b17 	ldw	r3,44(sp)
   23b18:	10bfffc4 	addi	r2,r2,-1
   23b1c:	d8800515 	stw	r2,20(sp)
   23b20:	183f761e 	bne	r3,zero,238fc <_dtoa_r+0xdd0>
   23b24:	d9000c17 	ldw	r4,48(sp)
   23b28:	0101730e 	bge	zero,r4,240f8 <_dtoa_r+0x15cc>
   23b2c:	d9000615 	stw	r4,24(sp)
   23b30:	003ed006 	br	23674 <_dtoa_r+0xb48>
   23b34:	00800084 	movi	r2,2
   23b38:	3081861e 	bne	r6,r2,24154 <_dtoa_r+0x1628>
   23b3c:	d8000b15 	stw	zero,44(sp)
   23b40:	003f3c06 	br	23834 <_dtoa_r+0xd08>
   23b44:	dc000917 	ldw	r16,36(sp)
   23b48:	003e9206 	br	23594 <_dtoa_r+0xa68>
   23b4c:	d9c00317 	ldw	r7,12(sp)
   23b50:	00800084 	movi	r2,2
   23b54:	11fec50e 	bge	r2,r7,2366c <_dtoa_r+0xb40>
   23b58:	d9000617 	ldw	r4,24(sp)
   23b5c:	20013c1e 	bne	r4,zero,24050 <_dtoa_r+0x1524>
   23b60:	a80b883a 	mov	r5,r21
   23b64:	000f883a 	mov	r7,zero
   23b68:	01800144 	movi	r6,5
   23b6c:	e009883a 	mov	r4,fp
   23b70:	0025c800 	call	25c80 <__multadd>
   23b74:	100b883a 	mov	r5,r2
   23b78:	8009883a 	mov	r4,r16
   23b7c:	102b883a 	mov	r21,r2
   23b80:	00264780 	call	26478 <__mcmp>
   23b84:	dc000915 	stw	r16,36(sp)
   23b88:	00bf410e 	bge	zero,r2,23890 <_dtoa_r+0xd64>
   23b8c:	d9c00717 	ldw	r7,28(sp)
   23b90:	00800c44 	movi	r2,49
   23b94:	38800005 	stb	r2,0(r7)
   23b98:	d8800517 	ldw	r2,20(sp)
   23b9c:	3dc00044 	addi	r23,r7,1
   23ba0:	10800044 	addi	r2,r2,1
   23ba4:	d8800515 	stw	r2,20(sp)
   23ba8:	003f3d06 	br	238a0 <_dtoa_r+0xd74>
   23bac:	d9800517 	ldw	r6,20(sp)
   23bb0:	d9c00717 	ldw	r7,28(sp)
   23bb4:	00800c44 	movi	r2,49
   23bb8:	31800044 	addi	r6,r6,1
   23bbc:	d9800515 	stw	r6,20(sp)
   23bc0:	38800005 	stb	r2,0(r7)
   23bc4:	003edf06 	br	23744 <_dtoa_r+0xc18>
   23bc8:	d8000b15 	stw	zero,44(sp)
   23bcc:	003c9f06 	br	22e4c <_dtoa_r+0x320>
   23bd0:	903e7e1e 	bne	r18,zero,235cc <_dtoa_r+0xaa0>
   23bd4:	00800434 	movhi	r2,16
   23bd8:	10bfffc4 	addi	r2,r2,-1
   23bdc:	9884703a 	and	r2,r19,r2
   23be0:	1000ea1e 	bne	r2,zero,23f8c <_dtoa_r+0x1460>
   23be4:	9cdffc2c 	andhi	r19,r19,32752
   23be8:	9800e826 	beq	r19,zero,23f8c <_dtoa_r+0x1460>
   23bec:	d9c00817 	ldw	r7,32(sp)
   23bf0:	b5800044 	addi	r22,r22,1
   23bf4:	04c00044 	movi	r19,1
   23bf8:	39c00044 	addi	r7,r7,1
   23bfc:	d9c00815 	stw	r7,32(sp)
   23c00:	d8800d17 	ldw	r2,52(sp)
   23c04:	103e721e 	bne	r2,zero,235d0 <_dtoa_r+0xaa4>
   23c08:	00800044 	movi	r2,1
   23c0c:	003e7906 	br	235f4 <_dtoa_r+0xac8>
   23c10:	8009883a 	mov	r4,r16
   23c14:	002cb000 	call	2cb00 <__floatsidf>
   23c18:	d9800f17 	ldw	r6,60(sp)
   23c1c:	d9c01017 	ldw	r7,64(sp)
   23c20:	1009883a 	mov	r4,r2
   23c24:	180b883a 	mov	r5,r3
   23c28:	002ba6c0 	call	2ba6c <__muldf3>
   23c2c:	000d883a 	mov	r6,zero
   23c30:	01d00734 	movhi	r7,16412
   23c34:	1009883a 	mov	r4,r2
   23c38:	180b883a 	mov	r5,r3
   23c3c:	002a6800 	call	2a680 <__adddf3>
   23c40:	047f3034 	movhi	r17,64704
   23c44:	1021883a 	mov	r16,r2
   23c48:	1c63883a 	add	r17,r3,r17
   23c4c:	d9000f17 	ldw	r4,60(sp)
   23c50:	d9401017 	ldw	r5,64(sp)
   23c54:	000d883a 	mov	r6,zero
   23c58:	01d00534 	movhi	r7,16404
   23c5c:	002c1840 	call	2c184 <__subdf3>
   23c60:	800d883a 	mov	r6,r16
   23c64:	880f883a 	mov	r7,r17
   23c68:	1009883a 	mov	r4,r2
   23c6c:	180b883a 	mov	r5,r3
   23c70:	102b883a 	mov	r21,r2
   23c74:	1829883a 	mov	r20,r3
   23c78:	002b89c0 	call	2b89c <__gedf2>
   23c7c:	00806c16 	blt	zero,r2,23e30 <_dtoa_r+0x1304>
   23c80:	89e0003c 	xorhi	r7,r17,32768
   23c84:	800d883a 	mov	r6,r16
   23c88:	a809883a 	mov	r4,r21
   23c8c:	a00b883a 	mov	r5,r20
   23c90:	002b9780 	call	2b978 <__ledf2>
   23c94:	103d7e0e 	bge	r2,zero,23290 <_dtoa_r+0x764>
   23c98:	002b883a 	mov	r21,zero
   23c9c:	0023883a 	mov	r17,zero
   23ca0:	003efb06 	br	23890 <_dtoa_r+0xd64>
   23ca4:	d8800717 	ldw	r2,28(sp)
   23ca8:	003bd006 	br	22bec <_dtoa_r+0xc0>
   23cac:	d9000a17 	ldw	r4,40(sp)
   23cb0:	d9800d17 	ldw	r6,52(sp)
   23cb4:	dd400a15 	stw	r21,40(sp)
   23cb8:	a905c83a 	sub	r2,r21,r4
   23cbc:	308d883a 	add	r6,r6,r2
   23cc0:	d9800d15 	stw	r6,52(sp)
   23cc4:	002b883a 	mov	r21,zero
   23cc8:	003e0606 	br	234e4 <_dtoa_r+0x9b8>
   23ccc:	9023883a 	mov	r17,r18
   23cd0:	9829883a 	mov	r20,r19
   23cd4:	04000084 	movi	r16,2
   23cd8:	003c9206 	br	22f24 <_dtoa_r+0x3f8>
   23cdc:	04000044 	movi	r16,1
   23ce0:	dc000c15 	stw	r16,48(sp)
   23ce4:	dc000615 	stw	r16,24(sp)
   23ce8:	dc002215 	stw	r16,136(sp)
   23cec:	e0001115 	stw	zero,68(fp)
   23cf0:	000b883a 	mov	r5,zero
   23cf4:	003c6906 	br	22e9c <_dtoa_r+0x370>
   23cf8:	3021883a 	mov	r16,r6
   23cfc:	003ffb06 	br	23cec <_dtoa_r+0x11c0>
   23d00:	1000021e 	bne	r2,zero,23d0c <_dtoa_r+0x11e0>
   23d04:	4200004c 	andi	r8,r8,1
   23d08:	403e7d1e 	bne	r8,zero,23700 <_dtoa_r+0xbd4>
   23d0c:	01000c04 	movi	r4,48
   23d10:	00000106 	br	23d18 <_dtoa_r+0x11ec>
   23d14:	102f883a 	mov	r23,r2
   23d18:	b8bfffc4 	addi	r2,r23,-1
   23d1c:	10c00007 	ldb	r3,0(r2)
   23d20:	193ffc26 	beq	r3,r4,23d14 <_dtoa_r+0x11e8>
   23d24:	003e8706 	br	23744 <_dtoa_r+0xc18>
   23d28:	d8800517 	ldw	r2,20(sp)
   23d2c:	00a3c83a 	sub	r17,zero,r2
   23d30:	8800a426 	beq	r17,zero,23fc4 <_dtoa_r+0x1498>
   23d34:	888003cc 	andi	r2,r17,15
   23d38:	100490fa 	slli	r2,r2,3
   23d3c:	00c00034 	movhi	r3,0
   23d40:	18c03804 	addi	r3,r3,224
   23d44:	1885883a 	add	r2,r3,r2
   23d48:	11800017 	ldw	r6,0(r2)
   23d4c:	11c00117 	ldw	r7,4(r2)
   23d50:	9009883a 	mov	r4,r18
   23d54:	980b883a 	mov	r5,r19
   23d58:	8823d13a 	srai	r17,r17,4
   23d5c:	002ba6c0 	call	2ba6c <__muldf3>
   23d60:	d8800f15 	stw	r2,60(sp)
   23d64:	d8c01015 	stw	r3,64(sp)
   23d68:	8800e826 	beq	r17,zero,2410c <_dtoa_r+0x15e0>
   23d6c:	05000034 	movhi	r20,0
   23d70:	a5002e04 	addi	r20,r20,184
   23d74:	04000084 	movi	r16,2
   23d78:	8980004c 	andi	r6,r17,1
   23d7c:	1009883a 	mov	r4,r2
   23d80:	8823d07a 	srai	r17,r17,1
   23d84:	180b883a 	mov	r5,r3
   23d88:	30000426 	beq	r6,zero,23d9c <_dtoa_r+0x1270>
   23d8c:	a1800017 	ldw	r6,0(r20)
   23d90:	a1c00117 	ldw	r7,4(r20)
   23d94:	84000044 	addi	r16,r16,1
   23d98:	002ba6c0 	call	2ba6c <__muldf3>
   23d9c:	a5000204 	addi	r20,r20,8
   23da0:	883ff51e 	bne	r17,zero,23d78 <_dtoa_r+0x124c>
   23da4:	d8800f15 	stw	r2,60(sp)
   23da8:	d8c01015 	stw	r3,64(sp)
   23dac:	003c7606 	br	22f88 <_dtoa_r+0x45c>
   23db0:	00c00c04 	movi	r3,48
   23db4:	10c00005 	stb	r3,0(r2)
   23db8:	d8c00517 	ldw	r3,20(sp)
   23dbc:	bd3fffc3 	ldbu	r20,-1(r23)
   23dc0:	18c00044 	addi	r3,r3,1
   23dc4:	d8c00515 	stw	r3,20(sp)
   23dc8:	003db906 	br	234b0 <_dtoa_r+0x984>
   23dcc:	89400117 	ldw	r5,4(r17)
   23dd0:	e009883a 	mov	r4,fp
   23dd4:	0025bb00 	call	25bb0 <_Balloc>
   23dd8:	89800417 	ldw	r6,16(r17)
   23ddc:	89400304 	addi	r5,r17,12
   23de0:	11000304 	addi	r4,r2,12
   23de4:	31800084 	addi	r6,r6,2
   23de8:	318d883a 	add	r6,r6,r6
   23dec:	318d883a 	add	r6,r6,r6
   23df0:	1027883a 	mov	r19,r2
   23df4:	00259400 	call	25940 <memcpy>
   23df8:	01800044 	movi	r6,1
   23dfc:	980b883a 	mov	r5,r19
   23e00:	e009883a 	mov	r4,fp
   23e04:	00263300 	call	26330 <__lshift>
   23e08:	1029883a 	mov	r20,r2
   23e0c:	003ecc06 	br	23940 <_dtoa_r+0xe14>
   23e10:	00800e44 	movi	r2,57
   23e14:	90809026 	beq	r18,r2,24058 <_dtoa_r+0x152c>
   23e18:	92000044 	addi	r8,r18,1
   23e1c:	003f1f06 	br	23a9c <_dtoa_r+0xf70>
   23e20:	9011883a 	mov	r8,r18
   23e24:	8825883a 	mov	r18,r17
   23e28:	a023883a 	mov	r17,r20
   23e2c:	003e2906 	br	236d4 <_dtoa_r+0xba8>
   23e30:	002b883a 	mov	r21,zero
   23e34:	0023883a 	mov	r17,zero
   23e38:	003f5406 	br	23b8c <_dtoa_r+0x1060>
   23e3c:	61bfffc4 	addi	r6,r12,-1
   23e40:	300490fa 	slli	r2,r6,3
   23e44:	00c00034 	movhi	r3,0
   23e48:	18c03804 	addi	r3,r3,224
   23e4c:	1885883a 	add	r2,r3,r2
   23e50:	11000017 	ldw	r4,0(r2)
   23e54:	11400117 	ldw	r5,4(r2)
   23e58:	d8800717 	ldw	r2,28(sp)
   23e5c:	880f883a 	mov	r7,r17
   23e60:	d9801215 	stw	r6,72(sp)
   23e64:	800d883a 	mov	r6,r16
   23e68:	db001615 	stw	r12,88(sp)
   23e6c:	15c00044 	addi	r23,r2,1
   23e70:	002ba6c0 	call	2ba6c <__muldf3>
   23e74:	d9401017 	ldw	r5,64(sp)
   23e78:	d9000f17 	ldw	r4,60(sp)
   23e7c:	d8c01515 	stw	r3,84(sp)
   23e80:	d8801415 	stw	r2,80(sp)
   23e84:	002ca800 	call	2ca80 <__fixdfsi>
   23e88:	1009883a 	mov	r4,r2
   23e8c:	1021883a 	mov	r16,r2
   23e90:	002cb000 	call	2cb00 <__floatsidf>
   23e94:	d9000f17 	ldw	r4,60(sp)
   23e98:	d9401017 	ldw	r5,64(sp)
   23e9c:	100d883a 	mov	r6,r2
   23ea0:	180f883a 	mov	r7,r3
   23ea4:	002c1840 	call	2c184 <__subdf3>
   23ea8:	1829883a 	mov	r20,r3
   23eac:	d8c00717 	ldw	r3,28(sp)
   23eb0:	84000c04 	addi	r16,r16,48
   23eb4:	1023883a 	mov	r17,r2
   23eb8:	1c000005 	stb	r16,0(r3)
   23ebc:	db001617 	ldw	r12,88(sp)
   23ec0:	00800044 	movi	r2,1
   23ec4:	60802226 	beq	r12,r2,23f50 <_dtoa_r+0x1424>
   23ec8:	d9c00717 	ldw	r7,28(sp)
   23ecc:	8805883a 	mov	r2,r17
   23ed0:	b82b883a 	mov	r21,r23
   23ed4:	3b19883a 	add	r12,r7,r12
   23ed8:	6023883a 	mov	r17,r12
   23edc:	a007883a 	mov	r3,r20
   23ee0:	dc800f15 	stw	r18,60(sp)
   23ee4:	000d883a 	mov	r6,zero
   23ee8:	01d00934 	movhi	r7,16420
   23eec:	1009883a 	mov	r4,r2
   23ef0:	180b883a 	mov	r5,r3
   23ef4:	002ba6c0 	call	2ba6c <__muldf3>
   23ef8:	180b883a 	mov	r5,r3
   23efc:	1009883a 	mov	r4,r2
   23f00:	1829883a 	mov	r20,r3
   23f04:	1025883a 	mov	r18,r2
   23f08:	002ca800 	call	2ca80 <__fixdfsi>
   23f0c:	1009883a 	mov	r4,r2
   23f10:	1021883a 	mov	r16,r2
   23f14:	002cb000 	call	2cb00 <__floatsidf>
   23f18:	100d883a 	mov	r6,r2
   23f1c:	180f883a 	mov	r7,r3
   23f20:	9009883a 	mov	r4,r18
   23f24:	a00b883a 	mov	r5,r20
   23f28:	84000c04 	addi	r16,r16,48
   23f2c:	002c1840 	call	2c184 <__subdf3>
   23f30:	ad400044 	addi	r21,r21,1
   23f34:	ac3fffc5 	stb	r16,-1(r21)
   23f38:	ac7fea1e 	bne	r21,r17,23ee4 <_dtoa_r+0x13b8>
   23f3c:	1023883a 	mov	r17,r2
   23f40:	d8801217 	ldw	r2,72(sp)
   23f44:	dc800f17 	ldw	r18,60(sp)
   23f48:	1829883a 	mov	r20,r3
   23f4c:	b8af883a 	add	r23,r23,r2
   23f50:	d9001417 	ldw	r4,80(sp)
   23f54:	d9401517 	ldw	r5,84(sp)
   23f58:	000d883a 	mov	r6,zero
   23f5c:	01cff834 	movhi	r7,16352
   23f60:	002a6800 	call	2a680 <__adddf3>
   23f64:	880d883a 	mov	r6,r17
   23f68:	a00f883a 	mov	r7,r20
   23f6c:	1009883a 	mov	r4,r2
   23f70:	180b883a 	mov	r5,r3
   23f74:	002b9780 	call	2b978 <__ledf2>
   23f78:	10003e0e 	bge	r2,zero,24074 <_dtoa_r+0x1548>
   23f7c:	d9001317 	ldw	r4,76(sp)
   23f80:	bd3fffc3 	ldbu	r20,-1(r23)
   23f84:	d9000515 	stw	r4,20(sp)
   23f88:	003d3b06 	br	23478 <_dtoa_r+0x94c>
   23f8c:	0027883a 	mov	r19,zero
   23f90:	003f1b06 	br	23c00 <_dtoa_r+0x10d4>
   23f94:	d8800817 	ldw	r2,32(sp)
   23f98:	11e9c83a 	sub	r20,r2,r7
   23f9c:	0005883a 	mov	r2,zero
   23fa0:	003d5406 	br	234f4 <_dtoa_r+0x9c8>
   23fa4:	00800044 	movi	r2,1
   23fa8:	003dc706 	br	236c8 <_dtoa_r+0xb9c>
   23fac:	d8c00217 	ldw	r3,8(sp)
   23fb0:	00800d84 	movi	r2,54
   23fb4:	dd400a17 	ldw	r21,40(sp)
   23fb8:	10c5c83a 	sub	r2,r2,r3
   23fbc:	dd000817 	ldw	r20,32(sp)
   23fc0:	003d4c06 	br	234f4 <_dtoa_r+0x9c8>
   23fc4:	dc800f15 	stw	r18,60(sp)
   23fc8:	dcc01015 	stw	r19,64(sp)
   23fcc:	04000084 	movi	r16,2
   23fd0:	003bed06 	br	22f88 <_dtoa_r+0x45c>
   23fd4:	d9000617 	ldw	r4,24(sp)
   23fd8:	203f0d26 	beq	r4,zero,23c10 <_dtoa_r+0x10e4>
   23fdc:	d9800c17 	ldw	r6,48(sp)
   23fe0:	01bcab0e 	bge	zero,r6,23290 <_dtoa_r+0x764>
   23fe4:	d9401017 	ldw	r5,64(sp)
   23fe8:	d9000f17 	ldw	r4,60(sp)
   23fec:	000d883a 	mov	r6,zero
   23ff0:	01d00934 	movhi	r7,16420
   23ff4:	002ba6c0 	call	2ba6c <__muldf3>
   23ff8:	81000044 	addi	r4,r16,1
   23ffc:	d8800f15 	stw	r2,60(sp)
   24000:	d8c01015 	stw	r3,64(sp)
   24004:	002cb000 	call	2cb00 <__floatsidf>
   24008:	d9800f17 	ldw	r6,60(sp)
   2400c:	d9c01017 	ldw	r7,64(sp)
   24010:	1009883a 	mov	r4,r2
   24014:	180b883a 	mov	r5,r3
   24018:	002ba6c0 	call	2ba6c <__muldf3>
   2401c:	01d00734 	movhi	r7,16412
   24020:	000d883a 	mov	r6,zero
   24024:	1009883a 	mov	r4,r2
   24028:	180b883a 	mov	r5,r3
   2402c:	002a6800 	call	2a680 <__adddf3>
   24030:	d9c00517 	ldw	r7,20(sp)
   24034:	047f3034 	movhi	r17,64704
   24038:	1021883a 	mov	r16,r2
   2403c:	39ffffc4 	addi	r7,r7,-1
   24040:	d9c01315 	stw	r7,76(sp)
   24044:	1c63883a 	add	r17,r3,r17
   24048:	db000c17 	ldw	r12,48(sp)
   2404c:	003bea06 	br	22ff8 <_dtoa_r+0x4cc>
   24050:	dc000915 	stw	r16,36(sp)
   24054:	003e0e06 	br	23890 <_dtoa_r+0xd64>
   24058:	01000e44 	movi	r4,57
   2405c:	8825883a 	mov	r18,r17
   24060:	9dc00044 	addi	r23,r19,1
   24064:	99000005 	stb	r4,0(r19)
   24068:	a023883a 	mov	r17,r20
   2406c:	dc000915 	stw	r16,36(sp)
   24070:	003da406 	br	23704 <_dtoa_r+0xbd8>
   24074:	d9801417 	ldw	r6,80(sp)
   24078:	d9c01517 	ldw	r7,84(sp)
   2407c:	0009883a 	mov	r4,zero
   24080:	014ff834 	movhi	r5,16352
   24084:	002c1840 	call	2c184 <__subdf3>
   24088:	880d883a 	mov	r6,r17
   2408c:	a00f883a 	mov	r7,r20
   24090:	1009883a 	mov	r4,r2
   24094:	180b883a 	mov	r5,r3
   24098:	002b89c0 	call	2b89c <__gedf2>
   2409c:	00bc7c0e 	bge	zero,r2,23290 <_dtoa_r+0x764>
   240a0:	01000c04 	movi	r4,48
   240a4:	00000106 	br	240ac <_dtoa_r+0x1580>
   240a8:	102f883a 	mov	r23,r2
   240ac:	b8bfffc4 	addi	r2,r23,-1
   240b0:	10c00007 	ldb	r3,0(r2)
   240b4:	193ffc26 	beq	r3,r4,240a8 <_dtoa_r+0x157c>
   240b8:	d9801317 	ldw	r6,76(sp)
   240bc:	d9800515 	stw	r6,20(sp)
   240c0:	003c4406 	br	231d4 <_dtoa_r+0x6a8>
   240c4:	d9801317 	ldw	r6,76(sp)
   240c8:	d9800515 	stw	r6,20(sp)
   240cc:	003cea06 	br	23478 <_dtoa_r+0x94c>
   240d0:	dd800f17 	ldw	r22,60(sp)
   240d4:	dcc01017 	ldw	r19,64(sp)
   240d8:	dc801217 	ldw	r18,72(sp)
   240dc:	003c6c06 	br	23290 <_dtoa_r+0x764>
   240e0:	903e031e 	bne	r18,zero,238f0 <_dtoa_r+0xdc4>
   240e4:	003ebb06 	br	23bd4 <_dtoa_r+0x10a8>
   240e8:	103e6c1e 	bne	r2,zero,23a9c <_dtoa_r+0xf70>
   240ec:	4080004c 	andi	r2,r8,1
   240f0:	103e6a26 	beq	r2,zero,23a9c <_dtoa_r+0xf70>
   240f4:	003e6606 	br	23a90 <_dtoa_r+0xf64>
   240f8:	d8c00317 	ldw	r3,12(sp)
   240fc:	00800084 	movi	r2,2
   24100:	10c02916 	blt	r2,r3,241a8 <_dtoa_r+0x167c>
   24104:	d9000c17 	ldw	r4,48(sp)
   24108:	003e8806 	br	23b2c <_dtoa_r+0x1000>
   2410c:	04000084 	movi	r16,2
   24110:	003b9d06 	br	22f88 <_dtoa_r+0x45c>
   24114:	d9001317 	ldw	r4,76(sp)
   24118:	d9000515 	stw	r4,20(sp)
   2411c:	003cd606 	br	23478 <_dtoa_r+0x94c>
   24120:	d8801317 	ldw	r2,76(sp)
   24124:	d8800515 	stw	r2,20(sp)
   24128:	003c2a06 	br	231d4 <_dtoa_r+0x6a8>
   2412c:	d9800317 	ldw	r6,12(sp)
   24130:	00800084 	movi	r2,2
   24134:	11801516 	blt	r2,r6,2418c <_dtoa_r+0x1660>
   24138:	d9c00c17 	ldw	r7,48(sp)
   2413c:	d9c00615 	stw	r7,24(sp)
   24140:	003df706 	br	23920 <_dtoa_r+0xdf4>
   24144:	193d3926 	beq	r3,r4,2362c <_dtoa_r+0xb00>
   24148:	00c00f04 	movi	r3,60
   2414c:	1885c83a 	sub	r2,r3,r2
   24150:	003ddf06 	br	238d0 <_dtoa_r+0xda4>
   24154:	e009883a 	mov	r4,fp
   24158:	e0001115 	stw	zero,68(fp)
   2415c:	000b883a 	mov	r5,zero
   24160:	0025bb00 	call	25bb0 <_Balloc>
   24164:	d8800715 	stw	r2,28(sp)
   24168:	d8c00717 	ldw	r3,28(sp)
   2416c:	00bfffc4 	movi	r2,-1
   24170:	01000044 	movi	r4,1
   24174:	d8800c15 	stw	r2,48(sp)
   24178:	e0c01015 	stw	r3,64(fp)
   2417c:	d9000b15 	stw	r4,44(sp)
   24180:	d8800615 	stw	r2,24(sp)
   24184:	d8002215 	stw	zero,136(sp)
   24188:	003c4106 	br	23290 <_dtoa_r+0x764>
   2418c:	d8c00c17 	ldw	r3,48(sp)
   24190:	d8c00615 	stw	r3,24(sp)
   24194:	003e7006 	br	23b58 <_dtoa_r+0x102c>
   24198:	04400044 	movi	r17,1
   2419c:	003b2006 	br	22e20 <_dtoa_r+0x2f4>
   241a0:	000b883a 	mov	r5,zero
   241a4:	003b3d06 	br	22e9c <_dtoa_r+0x370>
   241a8:	d8800c17 	ldw	r2,48(sp)
   241ac:	d8800615 	stw	r2,24(sp)
   241b0:	003e6906 	br	23b58 <_dtoa_r+0x102c>

000241b4 <__sflush_r>:
   241b4:	2880030b 	ldhu	r2,12(r5)
   241b8:	defffb04 	addi	sp,sp,-20
   241bc:	dcc00315 	stw	r19,12(sp)
   241c0:	dc400115 	stw	r17,4(sp)
   241c4:	dfc00415 	stw	ra,16(sp)
   241c8:	dc800215 	stw	r18,8(sp)
   241cc:	dc000015 	stw	r16,0(sp)
   241d0:	10c0020c 	andi	r3,r2,8
   241d4:	2823883a 	mov	r17,r5
   241d8:	2027883a 	mov	r19,r4
   241dc:	1800311e 	bne	r3,zero,242a4 <__sflush_r+0xf0>
   241e0:	28c00117 	ldw	r3,4(r5)
   241e4:	10820014 	ori	r2,r2,2048
   241e8:	2880030d 	sth	r2,12(r5)
   241ec:	00c04b0e 	bge	zero,r3,2431c <__sflush_r+0x168>
   241f0:	8a000a17 	ldw	r8,40(r17)
   241f4:	40002326 	beq	r8,zero,24284 <__sflush_r+0xd0>
   241f8:	9c000017 	ldw	r16,0(r19)
   241fc:	10c4000c 	andi	r3,r2,4096
   24200:	98000015 	stw	zero,0(r19)
   24204:	18004826 	beq	r3,zero,24328 <__sflush_r+0x174>
   24208:	89801417 	ldw	r6,80(r17)
   2420c:	10c0010c 	andi	r3,r2,4
   24210:	18000626 	beq	r3,zero,2422c <__sflush_r+0x78>
   24214:	88c00117 	ldw	r3,4(r17)
   24218:	88800c17 	ldw	r2,48(r17)
   2421c:	30cdc83a 	sub	r6,r6,r3
   24220:	10000226 	beq	r2,zero,2422c <__sflush_r+0x78>
   24224:	88800f17 	ldw	r2,60(r17)
   24228:	308dc83a 	sub	r6,r6,r2
   2422c:	89400717 	ldw	r5,28(r17)
   24230:	000f883a 	mov	r7,zero
   24234:	9809883a 	mov	r4,r19
   24238:	403ee83a 	callr	r8
   2423c:	00ffffc4 	movi	r3,-1
   24240:	10c04426 	beq	r2,r3,24354 <__sflush_r+0x1a0>
   24244:	88c0030b 	ldhu	r3,12(r17)
   24248:	89000417 	ldw	r4,16(r17)
   2424c:	88000115 	stw	zero,4(r17)
   24250:	197dffcc 	andi	r5,r3,63487
   24254:	8940030d 	sth	r5,12(r17)
   24258:	89000015 	stw	r4,0(r17)
   2425c:	18c4000c 	andi	r3,r3,4096
   24260:	18002c1e 	bne	r3,zero,24314 <__sflush_r+0x160>
   24264:	89400c17 	ldw	r5,48(r17)
   24268:	9c000015 	stw	r16,0(r19)
   2426c:	28000526 	beq	r5,zero,24284 <__sflush_r+0xd0>
   24270:	88801004 	addi	r2,r17,64
   24274:	28800226 	beq	r5,r2,24280 <__sflush_r+0xcc>
   24278:	9809883a 	mov	r4,r19
   2427c:	00249200 	call	24920 <_free_r>
   24280:	88000c15 	stw	zero,48(r17)
   24284:	0005883a 	mov	r2,zero
   24288:	dfc00417 	ldw	ra,16(sp)
   2428c:	dcc00317 	ldw	r19,12(sp)
   24290:	dc800217 	ldw	r18,8(sp)
   24294:	dc400117 	ldw	r17,4(sp)
   24298:	dc000017 	ldw	r16,0(sp)
   2429c:	dec00504 	addi	sp,sp,20
   242a0:	f800283a 	ret
   242a4:	2c800417 	ldw	r18,16(r5)
   242a8:	903ff626 	beq	r18,zero,24284 <__sflush_r+0xd0>
   242ac:	2c000017 	ldw	r16,0(r5)
   242b0:	108000cc 	andi	r2,r2,3
   242b4:	2c800015 	stw	r18,0(r5)
   242b8:	84a1c83a 	sub	r16,r16,r18
   242bc:	1000131e 	bne	r2,zero,2430c <__sflush_r+0x158>
   242c0:	28800517 	ldw	r2,20(r5)
   242c4:	88800215 	stw	r2,8(r17)
   242c8:	04000316 	blt	zero,r16,242d8 <__sflush_r+0x124>
   242cc:	003fed06 	br	24284 <__sflush_r+0xd0>
   242d0:	90a5883a 	add	r18,r18,r2
   242d4:	043feb0e 	bge	zero,r16,24284 <__sflush_r+0xd0>
   242d8:	88800917 	ldw	r2,36(r17)
   242dc:	89400717 	ldw	r5,28(r17)
   242e0:	800f883a 	mov	r7,r16
   242e4:	900d883a 	mov	r6,r18
   242e8:	9809883a 	mov	r4,r19
   242ec:	103ee83a 	callr	r2
   242f0:	80a1c83a 	sub	r16,r16,r2
   242f4:	00bff616 	blt	zero,r2,242d0 <__sflush_r+0x11c>
   242f8:	88c0030b 	ldhu	r3,12(r17)
   242fc:	00bfffc4 	movi	r2,-1
   24300:	18c01014 	ori	r3,r3,64
   24304:	88c0030d 	sth	r3,12(r17)
   24308:	003fdf06 	br	24288 <__sflush_r+0xd4>
   2430c:	0005883a 	mov	r2,zero
   24310:	003fec06 	br	242c4 <__sflush_r+0x110>
   24314:	88801415 	stw	r2,80(r17)
   24318:	003fd206 	br	24264 <__sflush_r+0xb0>
   2431c:	28c00f17 	ldw	r3,60(r5)
   24320:	00ffb316 	blt	zero,r3,241f0 <__sflush_r+0x3c>
   24324:	003fd706 	br	24284 <__sflush_r+0xd0>
   24328:	89400717 	ldw	r5,28(r17)
   2432c:	000d883a 	mov	r6,zero
   24330:	01c00044 	movi	r7,1
   24334:	9809883a 	mov	r4,r19
   24338:	403ee83a 	callr	r8
   2433c:	100d883a 	mov	r6,r2
   24340:	00bfffc4 	movi	r2,-1
   24344:	30801426 	beq	r6,r2,24398 <__sflush_r+0x1e4>
   24348:	8880030b 	ldhu	r2,12(r17)
   2434c:	8a000a17 	ldw	r8,40(r17)
   24350:	003fae06 	br	2420c <__sflush_r+0x58>
   24354:	98c00017 	ldw	r3,0(r19)
   24358:	183fba26 	beq	r3,zero,24244 <__sflush_r+0x90>
   2435c:	01000744 	movi	r4,29
   24360:	19000626 	beq	r3,r4,2437c <__sflush_r+0x1c8>
   24364:	01000584 	movi	r4,22
   24368:	19000426 	beq	r3,r4,2437c <__sflush_r+0x1c8>
   2436c:	88c0030b 	ldhu	r3,12(r17)
   24370:	18c01014 	ori	r3,r3,64
   24374:	88c0030d 	sth	r3,12(r17)
   24378:	003fc306 	br	24288 <__sflush_r+0xd4>
   2437c:	8880030b 	ldhu	r2,12(r17)
   24380:	88c00417 	ldw	r3,16(r17)
   24384:	88000115 	stw	zero,4(r17)
   24388:	10bdffcc 	andi	r2,r2,63487
   2438c:	8880030d 	sth	r2,12(r17)
   24390:	88c00015 	stw	r3,0(r17)
   24394:	003fb306 	br	24264 <__sflush_r+0xb0>
   24398:	98800017 	ldw	r2,0(r19)
   2439c:	103fea26 	beq	r2,zero,24348 <__sflush_r+0x194>
   243a0:	00c00744 	movi	r3,29
   243a4:	10c00226 	beq	r2,r3,243b0 <__sflush_r+0x1fc>
   243a8:	00c00584 	movi	r3,22
   243ac:	10c0031e 	bne	r2,r3,243bc <__sflush_r+0x208>
   243b0:	9c000015 	stw	r16,0(r19)
   243b4:	0005883a 	mov	r2,zero
   243b8:	003fb306 	br	24288 <__sflush_r+0xd4>
   243bc:	88c0030b 	ldhu	r3,12(r17)
   243c0:	3005883a 	mov	r2,r6
   243c4:	18c01014 	ori	r3,r3,64
   243c8:	88c0030d 	sth	r3,12(r17)
   243cc:	003fae06 	br	24288 <__sflush_r+0xd4>

000243d0 <_fflush_r>:
   243d0:	defffd04 	addi	sp,sp,-12
   243d4:	dc000115 	stw	r16,4(sp)
   243d8:	dfc00215 	stw	ra,8(sp)
   243dc:	2021883a 	mov	r16,r4
   243e0:	20000226 	beq	r4,zero,243ec <_fflush_r+0x1c>
   243e4:	20800e17 	ldw	r2,56(r4)
   243e8:	10000c26 	beq	r2,zero,2441c <_fflush_r+0x4c>
   243ec:	2880030f 	ldh	r2,12(r5)
   243f0:	1000051e 	bne	r2,zero,24408 <_fflush_r+0x38>
   243f4:	0005883a 	mov	r2,zero
   243f8:	dfc00217 	ldw	ra,8(sp)
   243fc:	dc000117 	ldw	r16,4(sp)
   24400:	dec00304 	addi	sp,sp,12
   24404:	f800283a 	ret
   24408:	8009883a 	mov	r4,r16
   2440c:	dfc00217 	ldw	ra,8(sp)
   24410:	dc000117 	ldw	r16,4(sp)
   24414:	dec00304 	addi	sp,sp,12
   24418:	00241b41 	jmpi	241b4 <__sflush_r>
   2441c:	d9400015 	stw	r5,0(sp)
   24420:	00247ac0 	call	247ac <__sinit>
   24424:	d9400017 	ldw	r5,0(sp)
   24428:	003ff006 	br	243ec <_fflush_r+0x1c>

0002442c <fflush>:
   2442c:	20000526 	beq	r4,zero,24444 <fflush+0x18>
   24430:	00800034 	movhi	r2,0
   24434:	10876b04 	addi	r2,r2,7596
   24438:	200b883a 	mov	r5,r4
   2443c:	11000017 	ldw	r4,0(r2)
   24440:	00243d01 	jmpi	243d0 <_fflush_r>
   24444:	00800034 	movhi	r2,0
   24448:	10876a04 	addi	r2,r2,7592
   2444c:	11000017 	ldw	r4,0(r2)
   24450:	014000b4 	movhi	r5,2
   24454:	2950f404 	addi	r5,r5,17360
   24458:	0024cf41 	jmpi	24cf4 <_fwalk_reent>

0002445c <__fp_unlock>:
   2445c:	0005883a 	mov	r2,zero
   24460:	f800283a 	ret

00024464 <_cleanup_r>:
   24464:	014000f4 	movhi	r5,3
   24468:	2961b904 	addi	r5,r5,-31004
   2446c:	0024cf41 	jmpi	24cf4 <_fwalk_reent>

00024470 <__sinit.part.1>:
   24470:	defff704 	addi	sp,sp,-36
   24474:	00c000b4 	movhi	r3,2
   24478:	dfc00815 	stw	ra,32(sp)
   2447c:	ddc00715 	stw	r23,28(sp)
   24480:	dd800615 	stw	r22,24(sp)
   24484:	dd400515 	stw	r21,20(sp)
   24488:	dd000415 	stw	r20,16(sp)
   2448c:	dcc00315 	stw	r19,12(sp)
   24490:	dc800215 	stw	r18,8(sp)
   24494:	dc400115 	stw	r17,4(sp)
   24498:	dc000015 	stw	r16,0(sp)
   2449c:	18d11904 	addi	r3,r3,17508
   244a0:	24000117 	ldw	r16,4(r4)
   244a4:	20c00f15 	stw	r3,60(r4)
   244a8:	2080bb04 	addi	r2,r4,748
   244ac:	00c000c4 	movi	r3,3
   244b0:	20c0b915 	stw	r3,740(r4)
   244b4:	2080ba15 	stw	r2,744(r4)
   244b8:	2000b815 	stw	zero,736(r4)
   244bc:	05c00204 	movi	r23,8
   244c0:	00800104 	movi	r2,4
   244c4:	2025883a 	mov	r18,r4
   244c8:	b80d883a 	mov	r6,r23
   244cc:	81001704 	addi	r4,r16,92
   244d0:	000b883a 	mov	r5,zero
   244d4:	80000015 	stw	zero,0(r16)
   244d8:	80000115 	stw	zero,4(r16)
   244dc:	80000215 	stw	zero,8(r16)
   244e0:	8080030d 	sth	r2,12(r16)
   244e4:	80001915 	stw	zero,100(r16)
   244e8:	8000038d 	sth	zero,14(r16)
   244ec:	80000415 	stw	zero,16(r16)
   244f0:	80000515 	stw	zero,20(r16)
   244f4:	80000615 	stw	zero,24(r16)
   244f8:	0025a880 	call	25a88 <memset>
   244fc:	058000b4 	movhi	r22,2
   24500:	94400217 	ldw	r17,8(r18)
   24504:	054000b4 	movhi	r21,2
   24508:	050000b4 	movhi	r20,2
   2450c:	04c000b4 	movhi	r19,2
   24510:	b59b1d04 	addi	r22,r22,27764
   24514:	ad5b3404 	addi	r21,r21,27856
   24518:	a51b5304 	addi	r20,r20,27980
   2451c:	9cdb6a04 	addi	r19,r19,28072
   24520:	85800815 	stw	r22,32(r16)
   24524:	85400915 	stw	r21,36(r16)
   24528:	85000a15 	stw	r20,40(r16)
   2452c:	84c00b15 	stw	r19,44(r16)
   24530:	84000715 	stw	r16,28(r16)
   24534:	00800284 	movi	r2,10
   24538:	8880030d 	sth	r2,12(r17)
   2453c:	00800044 	movi	r2,1
   24540:	b80d883a 	mov	r6,r23
   24544:	89001704 	addi	r4,r17,92
   24548:	000b883a 	mov	r5,zero
   2454c:	88000015 	stw	zero,0(r17)
   24550:	88000115 	stw	zero,4(r17)
   24554:	88000215 	stw	zero,8(r17)
   24558:	88001915 	stw	zero,100(r17)
   2455c:	8880038d 	sth	r2,14(r17)
   24560:	88000415 	stw	zero,16(r17)
   24564:	88000515 	stw	zero,20(r17)
   24568:	88000615 	stw	zero,24(r17)
   2456c:	0025a880 	call	25a88 <memset>
   24570:	94000317 	ldw	r16,12(r18)
   24574:	00800484 	movi	r2,18
   24578:	8c400715 	stw	r17,28(r17)
   2457c:	8d800815 	stw	r22,32(r17)
   24580:	8d400915 	stw	r21,36(r17)
   24584:	8d000a15 	stw	r20,40(r17)
   24588:	8cc00b15 	stw	r19,44(r17)
   2458c:	8080030d 	sth	r2,12(r16)
   24590:	00800084 	movi	r2,2
   24594:	80000015 	stw	zero,0(r16)
   24598:	80000115 	stw	zero,4(r16)
   2459c:	80000215 	stw	zero,8(r16)
   245a0:	80001915 	stw	zero,100(r16)
   245a4:	8080038d 	sth	r2,14(r16)
   245a8:	80000415 	stw	zero,16(r16)
   245ac:	80000515 	stw	zero,20(r16)
   245b0:	80000615 	stw	zero,24(r16)
   245b4:	b80d883a 	mov	r6,r23
   245b8:	000b883a 	mov	r5,zero
   245bc:	81001704 	addi	r4,r16,92
   245c0:	0025a880 	call	25a88 <memset>
   245c4:	00800044 	movi	r2,1
   245c8:	84000715 	stw	r16,28(r16)
   245cc:	85800815 	stw	r22,32(r16)
   245d0:	85400915 	stw	r21,36(r16)
   245d4:	85000a15 	stw	r20,40(r16)
   245d8:	84c00b15 	stw	r19,44(r16)
   245dc:	90800e15 	stw	r2,56(r18)
   245e0:	dfc00817 	ldw	ra,32(sp)
   245e4:	ddc00717 	ldw	r23,28(sp)
   245e8:	dd800617 	ldw	r22,24(sp)
   245ec:	dd400517 	ldw	r21,20(sp)
   245f0:	dd000417 	ldw	r20,16(sp)
   245f4:	dcc00317 	ldw	r19,12(sp)
   245f8:	dc800217 	ldw	r18,8(sp)
   245fc:	dc400117 	ldw	r17,4(sp)
   24600:	dc000017 	ldw	r16,0(sp)
   24604:	dec00904 	addi	sp,sp,36
   24608:	f800283a 	ret

0002460c <__fp_lock>:
   2460c:	0005883a 	mov	r2,zero
   24610:	f800283a 	ret

00024614 <__sfmoreglue>:
   24614:	defffc04 	addi	sp,sp,-16
   24618:	dc400115 	stw	r17,4(sp)
   2461c:	2c7fffc4 	addi	r17,r5,-1
   24620:	8c401a24 	muli	r17,r17,104
   24624:	dc800215 	stw	r18,8(sp)
   24628:	2825883a 	mov	r18,r5
   2462c:	89401d04 	addi	r5,r17,116
   24630:	dc000015 	stw	r16,0(sp)
   24634:	dfc00315 	stw	ra,12(sp)
   24638:	00250500 	call	25050 <_malloc_r>
   2463c:	1021883a 	mov	r16,r2
   24640:	10000726 	beq	r2,zero,24660 <__sfmoreglue+0x4c>
   24644:	11000304 	addi	r4,r2,12
   24648:	10000015 	stw	zero,0(r2)
   2464c:	14800115 	stw	r18,4(r2)
   24650:	11000215 	stw	r4,8(r2)
   24654:	89801a04 	addi	r6,r17,104
   24658:	000b883a 	mov	r5,zero
   2465c:	0025a880 	call	25a88 <memset>
   24660:	8005883a 	mov	r2,r16
   24664:	dfc00317 	ldw	ra,12(sp)
   24668:	dc800217 	ldw	r18,8(sp)
   2466c:	dc400117 	ldw	r17,4(sp)
   24670:	dc000017 	ldw	r16,0(sp)
   24674:	dec00404 	addi	sp,sp,16
   24678:	f800283a 	ret

0002467c <__sfp>:
   2467c:	defffb04 	addi	sp,sp,-20
   24680:	dc000015 	stw	r16,0(sp)
   24684:	04000034 	movhi	r16,0
   24688:	84076a04 	addi	r16,r16,7592
   2468c:	dcc00315 	stw	r19,12(sp)
   24690:	2027883a 	mov	r19,r4
   24694:	81000017 	ldw	r4,0(r16)
   24698:	dfc00415 	stw	ra,16(sp)
   2469c:	dc800215 	stw	r18,8(sp)
   246a0:	20800e17 	ldw	r2,56(r4)
   246a4:	dc400115 	stw	r17,4(sp)
   246a8:	1000021e 	bne	r2,zero,246b4 <__sfp+0x38>
   246ac:	00244700 	call	24470 <__sinit.part.1>
   246b0:	81000017 	ldw	r4,0(r16)
   246b4:	2480b804 	addi	r18,r4,736
   246b8:	047fffc4 	movi	r17,-1
   246bc:	91000117 	ldw	r4,4(r18)
   246c0:	94000217 	ldw	r16,8(r18)
   246c4:	213fffc4 	addi	r4,r4,-1
   246c8:	20000a16 	blt	r4,zero,246f4 <__sfp+0x78>
   246cc:	8080030f 	ldh	r2,12(r16)
   246d0:	10000c26 	beq	r2,zero,24704 <__sfp+0x88>
   246d4:	80c01d04 	addi	r3,r16,116
   246d8:	00000206 	br	246e4 <__sfp+0x68>
   246dc:	18bfe60f 	ldh	r2,-104(r3)
   246e0:	10000826 	beq	r2,zero,24704 <__sfp+0x88>
   246e4:	213fffc4 	addi	r4,r4,-1
   246e8:	1c3ffd04 	addi	r16,r3,-12
   246ec:	18c01a04 	addi	r3,r3,104
   246f0:	247ffa1e 	bne	r4,r17,246dc <__sfp+0x60>
   246f4:	90800017 	ldw	r2,0(r18)
   246f8:	10001d26 	beq	r2,zero,24770 <__sfp+0xf4>
   246fc:	1025883a 	mov	r18,r2
   24700:	003fee06 	br	246bc <__sfp+0x40>
   24704:	00bfffc4 	movi	r2,-1
   24708:	8080038d 	sth	r2,14(r16)
   2470c:	00800044 	movi	r2,1
   24710:	8080030d 	sth	r2,12(r16)
   24714:	80001915 	stw	zero,100(r16)
   24718:	80000015 	stw	zero,0(r16)
   2471c:	80000215 	stw	zero,8(r16)
   24720:	80000115 	stw	zero,4(r16)
   24724:	80000415 	stw	zero,16(r16)
   24728:	80000515 	stw	zero,20(r16)
   2472c:	80000615 	stw	zero,24(r16)
   24730:	01800204 	movi	r6,8
   24734:	000b883a 	mov	r5,zero
   24738:	81001704 	addi	r4,r16,92
   2473c:	0025a880 	call	25a88 <memset>
   24740:	8005883a 	mov	r2,r16
   24744:	80000c15 	stw	zero,48(r16)
   24748:	80000d15 	stw	zero,52(r16)
   2474c:	80001115 	stw	zero,68(r16)
   24750:	80001215 	stw	zero,72(r16)
   24754:	dfc00417 	ldw	ra,16(sp)
   24758:	dcc00317 	ldw	r19,12(sp)
   2475c:	dc800217 	ldw	r18,8(sp)
   24760:	dc400117 	ldw	r17,4(sp)
   24764:	dc000017 	ldw	r16,0(sp)
   24768:	dec00504 	addi	sp,sp,20
   2476c:	f800283a 	ret
   24770:	01400104 	movi	r5,4
   24774:	9809883a 	mov	r4,r19
   24778:	00246140 	call	24614 <__sfmoreglue>
   2477c:	90800015 	stw	r2,0(r18)
   24780:	103fde1e 	bne	r2,zero,246fc <__sfp+0x80>
   24784:	00800304 	movi	r2,12
   24788:	98800015 	stw	r2,0(r19)
   2478c:	0005883a 	mov	r2,zero
   24790:	003ff006 	br	24754 <__sfp+0xd8>

00024794 <_cleanup>:
   24794:	00800034 	movhi	r2,0
   24798:	10876a04 	addi	r2,r2,7592
   2479c:	11000017 	ldw	r4,0(r2)
   247a0:	014000f4 	movhi	r5,3
   247a4:	2961b904 	addi	r5,r5,-31004
   247a8:	0024cf41 	jmpi	24cf4 <_fwalk_reent>

000247ac <__sinit>:
   247ac:	20800e17 	ldw	r2,56(r4)
   247b0:	10000126 	beq	r2,zero,247b8 <__sinit+0xc>
   247b4:	f800283a 	ret
   247b8:	00244701 	jmpi	24470 <__sinit.part.1>

000247bc <__sfp_lock_acquire>:
   247bc:	f800283a 	ret

000247c0 <__sfp_lock_release>:
   247c0:	f800283a 	ret

000247c4 <__sinit_lock_acquire>:
   247c4:	f800283a 	ret

000247c8 <__sinit_lock_release>:
   247c8:	f800283a 	ret

000247cc <__fp_lock_all>:
   247cc:	00800034 	movhi	r2,0
   247d0:	10876b04 	addi	r2,r2,7596
   247d4:	11000017 	ldw	r4,0(r2)
   247d8:	014000b4 	movhi	r5,2
   247dc:	29518304 	addi	r5,r5,17932
   247e0:	0024c301 	jmpi	24c30 <_fwalk>

000247e4 <__fp_unlock_all>:
   247e4:	00800034 	movhi	r2,0
   247e8:	10876b04 	addi	r2,r2,7596
   247ec:	11000017 	ldw	r4,0(r2)
   247f0:	014000b4 	movhi	r5,2
   247f4:	29511704 	addi	r5,r5,17500
   247f8:	0024c301 	jmpi	24c30 <_fwalk>

000247fc <_malloc_trim_r>:
   247fc:	defffb04 	addi	sp,sp,-20
   24800:	dcc00315 	stw	r19,12(sp)
   24804:	04c00034 	movhi	r19,0
   24808:	dc800215 	stw	r18,8(sp)
   2480c:	dc400115 	stw	r17,4(sp)
   24810:	dc000015 	stw	r16,0(sp)
   24814:	dfc00415 	stw	ra,16(sp)
   24818:	2821883a 	mov	r16,r5
   2481c:	9cc1e604 	addi	r19,r19,1944
   24820:	2025883a 	mov	r18,r4
   24824:	002d3e40 	call	2d3e4 <__malloc_lock>
   24828:	98800217 	ldw	r2,8(r19)
   2482c:	14400117 	ldw	r17,4(r2)
   24830:	00bfff04 	movi	r2,-4
   24834:	88a2703a 	and	r17,r17,r2
   24838:	8c21c83a 	sub	r16,r17,r16
   2483c:	8403fbc4 	addi	r16,r16,4079
   24840:	8020d33a 	srli	r16,r16,12
   24844:	0083ffc4 	movi	r2,4095
   24848:	843fffc4 	addi	r16,r16,-1
   2484c:	8020933a 	slli	r16,r16,12
   24850:	1400060e 	bge	r2,r16,2486c <_malloc_trim_r+0x70>
   24854:	000b883a 	mov	r5,zero
   24858:	9009883a 	mov	r4,r18
   2485c:	0026c200 	call	26c20 <_sbrk_r>
   24860:	98c00217 	ldw	r3,8(r19)
   24864:	1c47883a 	add	r3,r3,r17
   24868:	10c00a26 	beq	r2,r3,24894 <_malloc_trim_r+0x98>
   2486c:	9009883a 	mov	r4,r18
   24870:	002d4080 	call	2d408 <__malloc_unlock>
   24874:	0005883a 	mov	r2,zero
   24878:	dfc00417 	ldw	ra,16(sp)
   2487c:	dcc00317 	ldw	r19,12(sp)
   24880:	dc800217 	ldw	r18,8(sp)
   24884:	dc400117 	ldw	r17,4(sp)
   24888:	dc000017 	ldw	r16,0(sp)
   2488c:	dec00504 	addi	sp,sp,20
   24890:	f800283a 	ret
   24894:	040bc83a 	sub	r5,zero,r16
   24898:	9009883a 	mov	r4,r18
   2489c:	0026c200 	call	26c20 <_sbrk_r>
   248a0:	00ffffc4 	movi	r3,-1
   248a4:	10c00d26 	beq	r2,r3,248dc <_malloc_trim_r+0xe0>
   248a8:	00c00034 	movhi	r3,0
   248ac:	18c78a04 	addi	r3,r3,7720
   248b0:	18800017 	ldw	r2,0(r3)
   248b4:	99000217 	ldw	r4,8(r19)
   248b8:	8c23c83a 	sub	r17,r17,r16
   248bc:	8c400054 	ori	r17,r17,1
   248c0:	1421c83a 	sub	r16,r2,r16
   248c4:	24400115 	stw	r17,4(r4)
   248c8:	9009883a 	mov	r4,r18
   248cc:	1c000015 	stw	r16,0(r3)
   248d0:	002d4080 	call	2d408 <__malloc_unlock>
   248d4:	00800044 	movi	r2,1
   248d8:	003fe706 	br	24878 <_malloc_trim_r+0x7c>
   248dc:	000b883a 	mov	r5,zero
   248e0:	9009883a 	mov	r4,r18
   248e4:	0026c200 	call	26c20 <_sbrk_r>
   248e8:	99000217 	ldw	r4,8(r19)
   248ec:	014003c4 	movi	r5,15
   248f0:	1107c83a 	sub	r3,r2,r4
   248f4:	28ffdd0e 	bge	r5,r3,2486c <_malloc_trim_r+0x70>
   248f8:	01400034 	movhi	r5,0
   248fc:	29476d04 	addi	r5,r5,7604
   24900:	29400017 	ldw	r5,0(r5)
   24904:	18c00054 	ori	r3,r3,1
   24908:	20c00115 	stw	r3,4(r4)
   2490c:	00c00034 	movhi	r3,0
   24910:	1145c83a 	sub	r2,r2,r5
   24914:	18c78a04 	addi	r3,r3,7720
   24918:	18800015 	stw	r2,0(r3)
   2491c:	003fd306 	br	2486c <_malloc_trim_r+0x70>

00024920 <_free_r>:
   24920:	28004126 	beq	r5,zero,24a28 <_free_r+0x108>
   24924:	defffd04 	addi	sp,sp,-12
   24928:	dc400115 	stw	r17,4(sp)
   2492c:	dc000015 	stw	r16,0(sp)
   24930:	2023883a 	mov	r17,r4
   24934:	2821883a 	mov	r16,r5
   24938:	dfc00215 	stw	ra,8(sp)
   2493c:	002d3e40 	call	2d3e4 <__malloc_lock>
   24940:	81ffff17 	ldw	r7,-4(r16)
   24944:	00bfff84 	movi	r2,-2
   24948:	01000034 	movhi	r4,0
   2494c:	81bffe04 	addi	r6,r16,-8
   24950:	3884703a 	and	r2,r7,r2
   24954:	2101e604 	addi	r4,r4,1944
   24958:	308b883a 	add	r5,r6,r2
   2495c:	2a400117 	ldw	r9,4(r5)
   24960:	22000217 	ldw	r8,8(r4)
   24964:	00ffff04 	movi	r3,-4
   24968:	48c6703a 	and	r3,r9,r3
   2496c:	2a005726 	beq	r5,r8,24acc <_free_r+0x1ac>
   24970:	28c00115 	stw	r3,4(r5)
   24974:	39c0004c 	andi	r7,r7,1
   24978:	3800091e 	bne	r7,zero,249a0 <_free_r+0x80>
   2497c:	823ffe17 	ldw	r8,-8(r16)
   24980:	22400204 	addi	r9,r4,8
   24984:	320dc83a 	sub	r6,r6,r8
   24988:	31c00217 	ldw	r7,8(r6)
   2498c:	1205883a 	add	r2,r2,r8
   24990:	3a406526 	beq	r7,r9,24b28 <_free_r+0x208>
   24994:	32000317 	ldw	r8,12(r6)
   24998:	3a000315 	stw	r8,12(r7)
   2499c:	41c00215 	stw	r7,8(r8)
   249a0:	28cf883a 	add	r7,r5,r3
   249a4:	39c00117 	ldw	r7,4(r7)
   249a8:	39c0004c 	andi	r7,r7,1
   249ac:	38003a26 	beq	r7,zero,24a98 <_free_r+0x178>
   249b0:	10c00054 	ori	r3,r2,1
   249b4:	30c00115 	stw	r3,4(r6)
   249b8:	3087883a 	add	r3,r6,r2
   249bc:	18800015 	stw	r2,0(r3)
   249c0:	00c07fc4 	movi	r3,511
   249c4:	18801936 	bltu	r3,r2,24a2c <_free_r+0x10c>
   249c8:	1004d0fa 	srli	r2,r2,3
   249cc:	01c00044 	movi	r7,1
   249d0:	21400117 	ldw	r5,4(r4)
   249d4:	10c00044 	addi	r3,r2,1
   249d8:	18c7883a 	add	r3,r3,r3
   249dc:	1005d0ba 	srai	r2,r2,2
   249e0:	18c7883a 	add	r3,r3,r3
   249e4:	18c7883a 	add	r3,r3,r3
   249e8:	1907883a 	add	r3,r3,r4
   249ec:	3884983a 	sll	r2,r7,r2
   249f0:	19c00017 	ldw	r7,0(r3)
   249f4:	1a3ffe04 	addi	r8,r3,-8
   249f8:	1144b03a 	or	r2,r2,r5
   249fc:	32000315 	stw	r8,12(r6)
   24a00:	31c00215 	stw	r7,8(r6)
   24a04:	20800115 	stw	r2,4(r4)
   24a08:	19800015 	stw	r6,0(r3)
   24a0c:	39800315 	stw	r6,12(r7)
   24a10:	8809883a 	mov	r4,r17
   24a14:	dfc00217 	ldw	ra,8(sp)
   24a18:	dc400117 	ldw	r17,4(sp)
   24a1c:	dc000017 	ldw	r16,0(sp)
   24a20:	dec00304 	addi	sp,sp,12
   24a24:	002d4081 	jmpi	2d408 <__malloc_unlock>
   24a28:	f800283a 	ret
   24a2c:	100ad27a 	srli	r5,r2,9
   24a30:	00c00104 	movi	r3,4
   24a34:	19404a36 	bltu	r3,r5,24b60 <_free_r+0x240>
   24a38:	100ad1ba 	srli	r5,r2,6
   24a3c:	28c00e44 	addi	r3,r5,57
   24a40:	18c7883a 	add	r3,r3,r3
   24a44:	29400e04 	addi	r5,r5,56
   24a48:	18c7883a 	add	r3,r3,r3
   24a4c:	18c7883a 	add	r3,r3,r3
   24a50:	1909883a 	add	r4,r3,r4
   24a54:	20c00017 	ldw	r3,0(r4)
   24a58:	01c00034 	movhi	r7,0
   24a5c:	213ffe04 	addi	r4,r4,-8
   24a60:	39c1e604 	addi	r7,r7,1944
   24a64:	20c04426 	beq	r4,r3,24b78 <_free_r+0x258>
   24a68:	01ffff04 	movi	r7,-4
   24a6c:	19400117 	ldw	r5,4(r3)
   24a70:	29ca703a 	and	r5,r5,r7
   24a74:	1140022e 	bgeu	r2,r5,24a80 <_free_r+0x160>
   24a78:	18c00217 	ldw	r3,8(r3)
   24a7c:	20fffb1e 	bne	r4,r3,24a6c <_free_r+0x14c>
   24a80:	19000317 	ldw	r4,12(r3)
   24a84:	31000315 	stw	r4,12(r6)
   24a88:	30c00215 	stw	r3,8(r6)
   24a8c:	21800215 	stw	r6,8(r4)
   24a90:	19800315 	stw	r6,12(r3)
   24a94:	003fde06 	br	24a10 <_free_r+0xf0>
   24a98:	29c00217 	ldw	r7,8(r5)
   24a9c:	10c5883a 	add	r2,r2,r3
   24aa0:	00c00034 	movhi	r3,0
   24aa4:	18c1e804 	addi	r3,r3,1952
   24aa8:	38c03b26 	beq	r7,r3,24b98 <_free_r+0x278>
   24aac:	2a000317 	ldw	r8,12(r5)
   24ab0:	11400054 	ori	r5,r2,1
   24ab4:	3087883a 	add	r3,r6,r2
   24ab8:	3a000315 	stw	r8,12(r7)
   24abc:	41c00215 	stw	r7,8(r8)
   24ac0:	31400115 	stw	r5,4(r6)
   24ac4:	18800015 	stw	r2,0(r3)
   24ac8:	003fbd06 	br	249c0 <_free_r+0xa0>
   24acc:	39c0004c 	andi	r7,r7,1
   24ad0:	10c5883a 	add	r2,r2,r3
   24ad4:	3800071e 	bne	r7,zero,24af4 <_free_r+0x1d4>
   24ad8:	81fffe17 	ldw	r7,-8(r16)
   24adc:	31cdc83a 	sub	r6,r6,r7
   24ae0:	30c00317 	ldw	r3,12(r6)
   24ae4:	31400217 	ldw	r5,8(r6)
   24ae8:	11c5883a 	add	r2,r2,r7
   24aec:	28c00315 	stw	r3,12(r5)
   24af0:	19400215 	stw	r5,8(r3)
   24af4:	10c00054 	ori	r3,r2,1
   24af8:	30c00115 	stw	r3,4(r6)
   24afc:	00c00034 	movhi	r3,0
   24b00:	18c76e04 	addi	r3,r3,7608
   24b04:	18c00017 	ldw	r3,0(r3)
   24b08:	21800215 	stw	r6,8(r4)
   24b0c:	10ffc036 	bltu	r2,r3,24a10 <_free_r+0xf0>
   24b10:	00800034 	movhi	r2,0
   24b14:	10878104 	addi	r2,r2,7684
   24b18:	11400017 	ldw	r5,0(r2)
   24b1c:	8809883a 	mov	r4,r17
   24b20:	00247fc0 	call	247fc <_malloc_trim_r>
   24b24:	003fba06 	br	24a10 <_free_r+0xf0>
   24b28:	28c9883a 	add	r4,r5,r3
   24b2c:	21000117 	ldw	r4,4(r4)
   24b30:	2100004c 	andi	r4,r4,1
   24b34:	2000391e 	bne	r4,zero,24c1c <_free_r+0x2fc>
   24b38:	29c00217 	ldw	r7,8(r5)
   24b3c:	29000317 	ldw	r4,12(r5)
   24b40:	1885883a 	add	r2,r3,r2
   24b44:	10c00054 	ori	r3,r2,1
   24b48:	39000315 	stw	r4,12(r7)
   24b4c:	21c00215 	stw	r7,8(r4)
   24b50:	30c00115 	stw	r3,4(r6)
   24b54:	308d883a 	add	r6,r6,r2
   24b58:	30800015 	stw	r2,0(r6)
   24b5c:	003fac06 	br	24a10 <_free_r+0xf0>
   24b60:	00c00504 	movi	r3,20
   24b64:	19401536 	bltu	r3,r5,24bbc <_free_r+0x29c>
   24b68:	28c01704 	addi	r3,r5,92
   24b6c:	18c7883a 	add	r3,r3,r3
   24b70:	294016c4 	addi	r5,r5,91
   24b74:	003fb406 	br	24a48 <_free_r+0x128>
   24b78:	280bd0ba 	srai	r5,r5,2
   24b7c:	00c00044 	movi	r3,1
   24b80:	38800117 	ldw	r2,4(r7)
   24b84:	194a983a 	sll	r5,r3,r5
   24b88:	2007883a 	mov	r3,r4
   24b8c:	2884b03a 	or	r2,r5,r2
   24b90:	38800115 	stw	r2,4(r7)
   24b94:	003fbb06 	br	24a84 <_free_r+0x164>
   24b98:	21800515 	stw	r6,20(r4)
   24b9c:	21800415 	stw	r6,16(r4)
   24ba0:	10c00054 	ori	r3,r2,1
   24ba4:	31c00315 	stw	r7,12(r6)
   24ba8:	31c00215 	stw	r7,8(r6)
   24bac:	30c00115 	stw	r3,4(r6)
   24bb0:	308d883a 	add	r6,r6,r2
   24bb4:	30800015 	stw	r2,0(r6)
   24bb8:	003f9506 	br	24a10 <_free_r+0xf0>
   24bbc:	00c01504 	movi	r3,84
   24bc0:	19400536 	bltu	r3,r5,24bd8 <_free_r+0x2b8>
   24bc4:	100ad33a 	srli	r5,r2,12
   24bc8:	28c01bc4 	addi	r3,r5,111
   24bcc:	18c7883a 	add	r3,r3,r3
   24bd0:	29401b84 	addi	r5,r5,110
   24bd4:	003f9c06 	br	24a48 <_free_r+0x128>
   24bd8:	00c05504 	movi	r3,340
   24bdc:	19400536 	bltu	r3,r5,24bf4 <_free_r+0x2d4>
   24be0:	100ad3fa 	srli	r5,r2,15
   24be4:	28c01e04 	addi	r3,r5,120
   24be8:	18c7883a 	add	r3,r3,r3
   24bec:	29401dc4 	addi	r5,r5,119
   24bf0:	003f9506 	br	24a48 <_free_r+0x128>
   24bf4:	00c15504 	movi	r3,1364
   24bf8:	19400536 	bltu	r3,r5,24c10 <_free_r+0x2f0>
   24bfc:	100ad4ba 	srli	r5,r2,18
   24c00:	28c01f44 	addi	r3,r5,125
   24c04:	18c7883a 	add	r3,r3,r3
   24c08:	29401f04 	addi	r5,r5,124
   24c0c:	003f8e06 	br	24a48 <_free_r+0x128>
   24c10:	00c03f84 	movi	r3,254
   24c14:	01401f84 	movi	r5,126
   24c18:	003f8b06 	br	24a48 <_free_r+0x128>
   24c1c:	10c00054 	ori	r3,r2,1
   24c20:	30c00115 	stw	r3,4(r6)
   24c24:	308d883a 	add	r6,r6,r2
   24c28:	30800015 	stw	r2,0(r6)
   24c2c:	003f7806 	br	24a10 <_free_r+0xf0>

00024c30 <_fwalk>:
   24c30:	defff704 	addi	sp,sp,-36
   24c34:	dd000415 	stw	r20,16(sp)
   24c38:	dfc00815 	stw	ra,32(sp)
   24c3c:	ddc00715 	stw	r23,28(sp)
   24c40:	dd800615 	stw	r22,24(sp)
   24c44:	dd400515 	stw	r21,20(sp)
   24c48:	dcc00315 	stw	r19,12(sp)
   24c4c:	dc800215 	stw	r18,8(sp)
   24c50:	dc400115 	stw	r17,4(sp)
   24c54:	dc000015 	stw	r16,0(sp)
   24c58:	2500b804 	addi	r20,r4,736
   24c5c:	a0002326 	beq	r20,zero,24cec <_fwalk+0xbc>
   24c60:	282b883a 	mov	r21,r5
   24c64:	002f883a 	mov	r23,zero
   24c68:	05800044 	movi	r22,1
   24c6c:	04ffffc4 	movi	r19,-1
   24c70:	a4400117 	ldw	r17,4(r20)
   24c74:	a4800217 	ldw	r18,8(r20)
   24c78:	8c7fffc4 	addi	r17,r17,-1
   24c7c:	88000d16 	blt	r17,zero,24cb4 <_fwalk+0x84>
   24c80:	94000304 	addi	r16,r18,12
   24c84:	94800384 	addi	r18,r18,14
   24c88:	8080000b 	ldhu	r2,0(r16)
   24c8c:	8c7fffc4 	addi	r17,r17,-1
   24c90:	813ffd04 	addi	r4,r16,-12
   24c94:	b080042e 	bgeu	r22,r2,24ca8 <_fwalk+0x78>
   24c98:	9080000f 	ldh	r2,0(r18)
   24c9c:	14c00226 	beq	r2,r19,24ca8 <_fwalk+0x78>
   24ca0:	a83ee83a 	callr	r21
   24ca4:	b8aeb03a 	or	r23,r23,r2
   24ca8:	84001a04 	addi	r16,r16,104
   24cac:	94801a04 	addi	r18,r18,104
   24cb0:	8cfff51e 	bne	r17,r19,24c88 <_fwalk+0x58>
   24cb4:	a5000017 	ldw	r20,0(r20)
   24cb8:	a03fed1e 	bne	r20,zero,24c70 <_fwalk+0x40>
   24cbc:	b805883a 	mov	r2,r23
   24cc0:	dfc00817 	ldw	ra,32(sp)
   24cc4:	ddc00717 	ldw	r23,28(sp)
   24cc8:	dd800617 	ldw	r22,24(sp)
   24ccc:	dd400517 	ldw	r21,20(sp)
   24cd0:	dd000417 	ldw	r20,16(sp)
   24cd4:	dcc00317 	ldw	r19,12(sp)
   24cd8:	dc800217 	ldw	r18,8(sp)
   24cdc:	dc400117 	ldw	r17,4(sp)
   24ce0:	dc000017 	ldw	r16,0(sp)
   24ce4:	dec00904 	addi	sp,sp,36
   24ce8:	f800283a 	ret
   24cec:	002f883a 	mov	r23,zero
   24cf0:	003ff206 	br	24cbc <_fwalk+0x8c>

00024cf4 <_fwalk_reent>:
   24cf4:	defff704 	addi	sp,sp,-36
   24cf8:	dd000415 	stw	r20,16(sp)
   24cfc:	dfc00815 	stw	ra,32(sp)
   24d00:	ddc00715 	stw	r23,28(sp)
   24d04:	dd800615 	stw	r22,24(sp)
   24d08:	dd400515 	stw	r21,20(sp)
   24d0c:	dcc00315 	stw	r19,12(sp)
   24d10:	dc800215 	stw	r18,8(sp)
   24d14:	dc400115 	stw	r17,4(sp)
   24d18:	dc000015 	stw	r16,0(sp)
   24d1c:	2500b804 	addi	r20,r4,736
   24d20:	a0002326 	beq	r20,zero,24db0 <_fwalk_reent+0xbc>
   24d24:	282b883a 	mov	r21,r5
   24d28:	2027883a 	mov	r19,r4
   24d2c:	002f883a 	mov	r23,zero
   24d30:	05800044 	movi	r22,1
   24d34:	04bfffc4 	movi	r18,-1
   24d38:	a4400117 	ldw	r17,4(r20)
   24d3c:	a4000217 	ldw	r16,8(r20)
   24d40:	8c7fffc4 	addi	r17,r17,-1
   24d44:	88000c16 	blt	r17,zero,24d78 <_fwalk_reent+0x84>
   24d48:	84000304 	addi	r16,r16,12
   24d4c:	8080000b 	ldhu	r2,0(r16)
   24d50:	8c7fffc4 	addi	r17,r17,-1
   24d54:	817ffd04 	addi	r5,r16,-12
   24d58:	b080052e 	bgeu	r22,r2,24d70 <_fwalk_reent+0x7c>
   24d5c:	8080008f 	ldh	r2,2(r16)
   24d60:	9809883a 	mov	r4,r19
   24d64:	14800226 	beq	r2,r18,24d70 <_fwalk_reent+0x7c>
   24d68:	a83ee83a 	callr	r21
   24d6c:	b8aeb03a 	or	r23,r23,r2
   24d70:	84001a04 	addi	r16,r16,104
   24d74:	8cbff51e 	bne	r17,r18,24d4c <_fwalk_reent+0x58>
   24d78:	a5000017 	ldw	r20,0(r20)
   24d7c:	a03fee1e 	bne	r20,zero,24d38 <_fwalk_reent+0x44>
   24d80:	b805883a 	mov	r2,r23
   24d84:	dfc00817 	ldw	ra,32(sp)
   24d88:	ddc00717 	ldw	r23,28(sp)
   24d8c:	dd800617 	ldw	r22,24(sp)
   24d90:	dd400517 	ldw	r21,20(sp)
   24d94:	dd000417 	ldw	r20,16(sp)
   24d98:	dcc00317 	ldw	r19,12(sp)
   24d9c:	dc800217 	ldw	r18,8(sp)
   24da0:	dc400117 	ldw	r17,4(sp)
   24da4:	dc000017 	ldw	r16,0(sp)
   24da8:	dec00904 	addi	sp,sp,36
   24dac:	f800283a 	ret
   24db0:	002f883a 	mov	r23,zero
   24db4:	003ff206 	br	24d80 <_fwalk_reent+0x8c>

00024db8 <_setlocale_r>:
   24db8:	30001b26 	beq	r6,zero,24e28 <_setlocale_r+0x70>
   24dbc:	01400034 	movhi	r5,0
   24dc0:	defffe04 	addi	sp,sp,-8
   24dc4:	29401e04 	addi	r5,r5,120
   24dc8:	3009883a 	mov	r4,r6
   24dcc:	dc000015 	stw	r16,0(sp)
   24dd0:	dfc00115 	stw	ra,4(sp)
   24dd4:	3021883a 	mov	r16,r6
   24dd8:	0026db00 	call	26db0 <strcmp>
   24ddc:	1000061e 	bne	r2,zero,24df8 <_setlocale_r+0x40>
   24de0:	00800034 	movhi	r2,0
   24de4:	10801d04 	addi	r2,r2,116
   24de8:	dfc00117 	ldw	ra,4(sp)
   24dec:	dc000017 	ldw	r16,0(sp)
   24df0:	dec00204 	addi	sp,sp,8
   24df4:	f800283a 	ret
   24df8:	01400034 	movhi	r5,0
   24dfc:	29401d04 	addi	r5,r5,116
   24e00:	8009883a 	mov	r4,r16
   24e04:	0026db00 	call	26db0 <strcmp>
   24e08:	103ff526 	beq	r2,zero,24de0 <_setlocale_r+0x28>
   24e0c:	01400034 	movhi	r5,0
   24e10:	29400804 	addi	r5,r5,32
   24e14:	8009883a 	mov	r4,r16
   24e18:	0026db00 	call	26db0 <strcmp>
   24e1c:	103ff026 	beq	r2,zero,24de0 <_setlocale_r+0x28>
   24e20:	0005883a 	mov	r2,zero
   24e24:	003ff006 	br	24de8 <_setlocale_r+0x30>
   24e28:	00800034 	movhi	r2,0
   24e2c:	10801d04 	addi	r2,r2,116
   24e30:	f800283a 	ret

00024e34 <__locale_charset>:
   24e34:	00800034 	movhi	r2,0
   24e38:	1081d004 	addi	r2,r2,1856
   24e3c:	f800283a 	ret

00024e40 <__locale_mb_cur_max>:
   24e40:	00800034 	movhi	r2,0
   24e44:	10876c04 	addi	r2,r2,7600
   24e48:	10800017 	ldw	r2,0(r2)
   24e4c:	f800283a 	ret

00024e50 <__locale_msgcharset>:
   24e50:	00800034 	movhi	r2,0
   24e54:	1081c804 	addi	r2,r2,1824
   24e58:	f800283a 	ret

00024e5c <__locale_cjk_lang>:
   24e5c:	0005883a 	mov	r2,zero
   24e60:	f800283a 	ret

00024e64 <_localeconv_r>:
   24e64:	00800034 	movhi	r2,0
   24e68:	1081d804 	addi	r2,r2,1888
   24e6c:	f800283a 	ret

00024e70 <setlocale>:
   24e70:	00800034 	movhi	r2,0
   24e74:	10876b04 	addi	r2,r2,7596
   24e78:	280d883a 	mov	r6,r5
   24e7c:	200b883a 	mov	r5,r4
   24e80:	11000017 	ldw	r4,0(r2)
   24e84:	0024db81 	jmpi	24db8 <_setlocale_r>

00024e88 <localeconv>:
   24e88:	00800034 	movhi	r2,0
   24e8c:	1081d804 	addi	r2,r2,1888
   24e90:	f800283a 	ret

00024e94 <__smakebuf_r>:
   24e94:	2880030b 	ldhu	r2,12(r5)
   24e98:	10c0008c 	andi	r3,r2,2
   24e9c:	1800411e 	bne	r3,zero,24fa4 <__smakebuf_r+0x110>
   24ea0:	deffec04 	addi	sp,sp,-80
   24ea4:	dc000f15 	stw	r16,60(sp)
   24ea8:	2821883a 	mov	r16,r5
   24eac:	2940038f 	ldh	r5,14(r5)
   24eb0:	dc401015 	stw	r17,64(sp)
   24eb4:	dfc01315 	stw	ra,76(sp)
   24eb8:	dcc01215 	stw	r19,72(sp)
   24ebc:	dc801115 	stw	r18,68(sp)
   24ec0:	2023883a 	mov	r17,r4
   24ec4:	28001c16 	blt	r5,zero,24f38 <__smakebuf_r+0xa4>
   24ec8:	d80d883a 	mov	r6,sp
   24ecc:	00289f00 	call	289f0 <_fstat_r>
   24ed0:	10001816 	blt	r2,zero,24f34 <__smakebuf_r+0xa0>
   24ed4:	d8800117 	ldw	r2,4(sp)
   24ed8:	00e00014 	movui	r3,32768
   24edc:	10bc000c 	andi	r2,r2,61440
   24ee0:	14c80020 	cmpeqi	r19,r2,8192
   24ee4:	10c03726 	beq	r2,r3,24fc4 <__smakebuf_r+0x130>
   24ee8:	80c0030b 	ldhu	r3,12(r16)
   24eec:	18c20014 	ori	r3,r3,2048
   24ef0:	80c0030d 	sth	r3,12(r16)
   24ef4:	00c80004 	movi	r3,8192
   24ef8:	10c0521e 	bne	r2,r3,25044 <__smakebuf_r+0x1b0>
   24efc:	8140038f 	ldh	r5,14(r16)
   24f00:	8809883a 	mov	r4,r17
   24f04:	0028f080 	call	28f08 <_isatty_r>
   24f08:	10004c26 	beq	r2,zero,2503c <__smakebuf_r+0x1a8>
   24f0c:	8080030b 	ldhu	r2,12(r16)
   24f10:	80c010c4 	addi	r3,r16,67
   24f14:	80c00015 	stw	r3,0(r16)
   24f18:	10800054 	ori	r2,r2,1
   24f1c:	8080030d 	sth	r2,12(r16)
   24f20:	00800044 	movi	r2,1
   24f24:	80c00415 	stw	r3,16(r16)
   24f28:	80800515 	stw	r2,20(r16)
   24f2c:	04810004 	movi	r18,1024
   24f30:	00000706 	br	24f50 <__smakebuf_r+0xbc>
   24f34:	8080030b 	ldhu	r2,12(r16)
   24f38:	10c0200c 	andi	r3,r2,128
   24f3c:	18001f1e 	bne	r3,zero,24fbc <__smakebuf_r+0x128>
   24f40:	04810004 	movi	r18,1024
   24f44:	10820014 	ori	r2,r2,2048
   24f48:	8080030d 	sth	r2,12(r16)
   24f4c:	0027883a 	mov	r19,zero
   24f50:	900b883a 	mov	r5,r18
   24f54:	8809883a 	mov	r4,r17
   24f58:	00250500 	call	25050 <_malloc_r>
   24f5c:	10002c26 	beq	r2,zero,25010 <__smakebuf_r+0x17c>
   24f60:	80c0030b 	ldhu	r3,12(r16)
   24f64:	010000b4 	movhi	r4,2
   24f68:	21111904 	addi	r4,r4,17508
   24f6c:	89000f15 	stw	r4,60(r17)
   24f70:	18c02014 	ori	r3,r3,128
   24f74:	80c0030d 	sth	r3,12(r16)
   24f78:	80800015 	stw	r2,0(r16)
   24f7c:	80800415 	stw	r2,16(r16)
   24f80:	84800515 	stw	r18,20(r16)
   24f84:	98001a1e 	bne	r19,zero,24ff0 <__smakebuf_r+0x15c>
   24f88:	dfc01317 	ldw	ra,76(sp)
   24f8c:	dcc01217 	ldw	r19,72(sp)
   24f90:	dc801117 	ldw	r18,68(sp)
   24f94:	dc401017 	ldw	r17,64(sp)
   24f98:	dc000f17 	ldw	r16,60(sp)
   24f9c:	dec01404 	addi	sp,sp,80
   24fa0:	f800283a 	ret
   24fa4:	288010c4 	addi	r2,r5,67
   24fa8:	28800015 	stw	r2,0(r5)
   24fac:	28800415 	stw	r2,16(r5)
   24fb0:	00800044 	movi	r2,1
   24fb4:	28800515 	stw	r2,20(r5)
   24fb8:	f800283a 	ret
   24fbc:	04801004 	movi	r18,64
   24fc0:	003fe006 	br	24f44 <__smakebuf_r+0xb0>
   24fc4:	81000a17 	ldw	r4,40(r16)
   24fc8:	00c000b4 	movhi	r3,2
   24fcc:	18db5304 	addi	r3,r3,27980
   24fd0:	20ffc51e 	bne	r4,r3,24ee8 <__smakebuf_r+0x54>
   24fd4:	8080030b 	ldhu	r2,12(r16)
   24fd8:	04810004 	movi	r18,1024
   24fdc:	84801315 	stw	r18,76(r16)
   24fe0:	1484b03a 	or	r2,r2,r18
   24fe4:	8080030d 	sth	r2,12(r16)
   24fe8:	0027883a 	mov	r19,zero
   24fec:	003fd806 	br	24f50 <__smakebuf_r+0xbc>
   24ff0:	8140038f 	ldh	r5,14(r16)
   24ff4:	8809883a 	mov	r4,r17
   24ff8:	0028f080 	call	28f08 <_isatty_r>
   24ffc:	103fe226 	beq	r2,zero,24f88 <__smakebuf_r+0xf4>
   25000:	8080030b 	ldhu	r2,12(r16)
   25004:	10800054 	ori	r2,r2,1
   25008:	8080030d 	sth	r2,12(r16)
   2500c:	003fde06 	br	24f88 <__smakebuf_r+0xf4>
   25010:	8080030b 	ldhu	r2,12(r16)
   25014:	10c0800c 	andi	r3,r2,512
   25018:	183fdb1e 	bne	r3,zero,24f88 <__smakebuf_r+0xf4>
   2501c:	10800094 	ori	r2,r2,2
   25020:	80c010c4 	addi	r3,r16,67
   25024:	8080030d 	sth	r2,12(r16)
   25028:	00800044 	movi	r2,1
   2502c:	80c00015 	stw	r3,0(r16)
   25030:	80c00415 	stw	r3,16(r16)
   25034:	80800515 	stw	r2,20(r16)
   25038:	003fd306 	br	24f88 <__smakebuf_r+0xf4>
   2503c:	04810004 	movi	r18,1024
   25040:	003fc306 	br	24f50 <__smakebuf_r+0xbc>
   25044:	0027883a 	mov	r19,zero
   25048:	04810004 	movi	r18,1024
   2504c:	003fc006 	br	24f50 <__smakebuf_r+0xbc>

00025050 <_malloc_r>:
   25050:	defff504 	addi	sp,sp,-44
   25054:	dc800315 	stw	r18,12(sp)
   25058:	dfc00a15 	stw	ra,40(sp)
   2505c:	df000915 	stw	fp,36(sp)
   25060:	ddc00815 	stw	r23,32(sp)
   25064:	dd800715 	stw	r22,28(sp)
   25068:	dd400615 	stw	r21,24(sp)
   2506c:	dd000515 	stw	r20,20(sp)
   25070:	dcc00415 	stw	r19,16(sp)
   25074:	dc400215 	stw	r17,8(sp)
   25078:	dc000115 	stw	r16,4(sp)
   2507c:	288002c4 	addi	r2,r5,11
   25080:	00c00584 	movi	r3,22
   25084:	2025883a 	mov	r18,r4
   25088:	18807f2e 	bgeu	r3,r2,25288 <_malloc_r+0x238>
   2508c:	047ffe04 	movi	r17,-8
   25090:	1462703a 	and	r17,r2,r17
   25094:	8800a316 	blt	r17,zero,25324 <_malloc_r+0x2d4>
   25098:	8940a236 	bltu	r17,r5,25324 <_malloc_r+0x2d4>
   2509c:	002d3e40 	call	2d3e4 <__malloc_lock>
   250a0:	00807dc4 	movi	r2,503
   250a4:	1441e92e 	bgeu	r2,r17,2584c <_malloc_r+0x7fc>
   250a8:	8804d27a 	srli	r2,r17,9
   250ac:	1000a126 	beq	r2,zero,25334 <_malloc_r+0x2e4>
   250b0:	00c00104 	movi	r3,4
   250b4:	18811e36 	bltu	r3,r2,25530 <_malloc_r+0x4e0>
   250b8:	8804d1ba 	srli	r2,r17,6
   250bc:	12000e44 	addi	r8,r2,57
   250c0:	11c00e04 	addi	r7,r2,56
   250c4:	4209883a 	add	r4,r8,r8
   250c8:	04c00034 	movhi	r19,0
   250cc:	2109883a 	add	r4,r4,r4
   250d0:	9cc1e604 	addi	r19,r19,1944
   250d4:	2109883a 	add	r4,r4,r4
   250d8:	9909883a 	add	r4,r19,r4
   250dc:	24000117 	ldw	r16,4(r4)
   250e0:	213ffe04 	addi	r4,r4,-8
   250e4:	24009726 	beq	r4,r16,25344 <_malloc_r+0x2f4>
   250e8:	80800117 	ldw	r2,4(r16)
   250ec:	01bfff04 	movi	r6,-4
   250f0:	014003c4 	movi	r5,15
   250f4:	1184703a 	and	r2,r2,r6
   250f8:	1447c83a 	sub	r3,r2,r17
   250fc:	28c00716 	blt	r5,r3,2511c <_malloc_r+0xcc>
   25100:	1800920e 	bge	r3,zero,2534c <_malloc_r+0x2fc>
   25104:	84000317 	ldw	r16,12(r16)
   25108:	24008e26 	beq	r4,r16,25344 <_malloc_r+0x2f4>
   2510c:	80800117 	ldw	r2,4(r16)
   25110:	1184703a 	and	r2,r2,r6
   25114:	1447c83a 	sub	r3,r2,r17
   25118:	28fff90e 	bge	r5,r3,25100 <_malloc_r+0xb0>
   2511c:	3809883a 	mov	r4,r7
   25120:	01800034 	movhi	r6,0
   25124:	9c000417 	ldw	r16,16(r19)
   25128:	3181e604 	addi	r6,r6,1944
   2512c:	32000204 	addi	r8,r6,8
   25130:	82013426 	beq	r16,r8,25604 <_malloc_r+0x5b4>
   25134:	80c00117 	ldw	r3,4(r16)
   25138:	00bfff04 	movi	r2,-4
   2513c:	188e703a 	and	r7,r3,r2
   25140:	3c45c83a 	sub	r2,r7,r17
   25144:	00c003c4 	movi	r3,15
   25148:	18811f16 	blt	r3,r2,255c8 <_malloc_r+0x578>
   2514c:	32000515 	stw	r8,20(r6)
   25150:	32000415 	stw	r8,16(r6)
   25154:	10007f0e 	bge	r2,zero,25354 <_malloc_r+0x304>
   25158:	00807fc4 	movi	r2,511
   2515c:	11c0fd36 	bltu	r2,r7,25554 <_malloc_r+0x504>
   25160:	3806d0fa 	srli	r3,r7,3
   25164:	01c00044 	movi	r7,1
   25168:	30800117 	ldw	r2,4(r6)
   2516c:	19400044 	addi	r5,r3,1
   25170:	294b883a 	add	r5,r5,r5
   25174:	1807d0ba 	srai	r3,r3,2
   25178:	294b883a 	add	r5,r5,r5
   2517c:	294b883a 	add	r5,r5,r5
   25180:	298b883a 	add	r5,r5,r6
   25184:	38c6983a 	sll	r3,r7,r3
   25188:	29c00017 	ldw	r7,0(r5)
   2518c:	2a7ffe04 	addi	r9,r5,-8
   25190:	1886b03a 	or	r3,r3,r2
   25194:	82400315 	stw	r9,12(r16)
   25198:	81c00215 	stw	r7,8(r16)
   2519c:	30c00115 	stw	r3,4(r6)
   251a0:	2c000015 	stw	r16,0(r5)
   251a4:	3c000315 	stw	r16,12(r7)
   251a8:	2005d0ba 	srai	r2,r4,2
   251ac:	01400044 	movi	r5,1
   251b0:	288a983a 	sll	r5,r5,r2
   251b4:	19406f36 	bltu	r3,r5,25374 <_malloc_r+0x324>
   251b8:	28c4703a 	and	r2,r5,r3
   251bc:	10000a1e 	bne	r2,zero,251e8 <_malloc_r+0x198>
   251c0:	00bfff04 	movi	r2,-4
   251c4:	294b883a 	add	r5,r5,r5
   251c8:	2088703a 	and	r4,r4,r2
   251cc:	28c4703a 	and	r2,r5,r3
   251d0:	21000104 	addi	r4,r4,4
   251d4:	1000041e 	bne	r2,zero,251e8 <_malloc_r+0x198>
   251d8:	294b883a 	add	r5,r5,r5
   251dc:	28c4703a 	and	r2,r5,r3
   251e0:	21000104 	addi	r4,r4,4
   251e4:	103ffc26 	beq	r2,zero,251d8 <_malloc_r+0x188>
   251e8:	02bfff04 	movi	r10,-4
   251ec:	024003c4 	movi	r9,15
   251f0:	21800044 	addi	r6,r4,1
   251f4:	318d883a 	add	r6,r6,r6
   251f8:	318d883a 	add	r6,r6,r6
   251fc:	318d883a 	add	r6,r6,r6
   25200:	998d883a 	add	r6,r19,r6
   25204:	333ffe04 	addi	r12,r6,-8
   25208:	2017883a 	mov	r11,r4
   2520c:	31800104 	addi	r6,r6,4
   25210:	34000017 	ldw	r16,0(r6)
   25214:	31fffd04 	addi	r7,r6,-12
   25218:	81c0041e 	bne	r16,r7,2522c <_malloc_r+0x1dc>
   2521c:	0000fb06 	br	2560c <_malloc_r+0x5bc>
   25220:	1801030e 	bge	r3,zero,25630 <_malloc_r+0x5e0>
   25224:	84000317 	ldw	r16,12(r16)
   25228:	81c0f826 	beq	r16,r7,2560c <_malloc_r+0x5bc>
   2522c:	80800117 	ldw	r2,4(r16)
   25230:	1284703a 	and	r2,r2,r10
   25234:	1447c83a 	sub	r3,r2,r17
   25238:	48fff90e 	bge	r9,r3,25220 <_malloc_r+0x1d0>
   2523c:	80800317 	ldw	r2,12(r16)
   25240:	81000217 	ldw	r4,8(r16)
   25244:	89400054 	ori	r5,r17,1
   25248:	81400115 	stw	r5,4(r16)
   2524c:	20800315 	stw	r2,12(r4)
   25250:	11000215 	stw	r4,8(r2)
   25254:	8463883a 	add	r17,r16,r17
   25258:	9c400515 	stw	r17,20(r19)
   2525c:	9c400415 	stw	r17,16(r19)
   25260:	18800054 	ori	r2,r3,1
   25264:	88800115 	stw	r2,4(r17)
   25268:	8a000315 	stw	r8,12(r17)
   2526c:	8a000215 	stw	r8,8(r17)
   25270:	88e3883a 	add	r17,r17,r3
   25274:	88c00015 	stw	r3,0(r17)
   25278:	9009883a 	mov	r4,r18
   2527c:	002d4080 	call	2d408 <__malloc_unlock>
   25280:	80800204 	addi	r2,r16,8
   25284:	00001b06 	br	252f4 <_malloc_r+0x2a4>
   25288:	04400404 	movi	r17,16
   2528c:	89402536 	bltu	r17,r5,25324 <_malloc_r+0x2d4>
   25290:	002d3e40 	call	2d3e4 <__malloc_lock>
   25294:	00800184 	movi	r2,6
   25298:	01000084 	movi	r4,2
   2529c:	04c00034 	movhi	r19,0
   252a0:	1085883a 	add	r2,r2,r2
   252a4:	9cc1e604 	addi	r19,r19,1944
   252a8:	1085883a 	add	r2,r2,r2
   252ac:	9885883a 	add	r2,r19,r2
   252b0:	14000117 	ldw	r16,4(r2)
   252b4:	10fffe04 	addi	r3,r2,-8
   252b8:	80c0d926 	beq	r16,r3,25620 <_malloc_r+0x5d0>
   252bc:	80c00117 	ldw	r3,4(r16)
   252c0:	81000317 	ldw	r4,12(r16)
   252c4:	00bfff04 	movi	r2,-4
   252c8:	1884703a 	and	r2,r3,r2
   252cc:	81400217 	ldw	r5,8(r16)
   252d0:	8085883a 	add	r2,r16,r2
   252d4:	10c00117 	ldw	r3,4(r2)
   252d8:	29000315 	stw	r4,12(r5)
   252dc:	21400215 	stw	r5,8(r4)
   252e0:	18c00054 	ori	r3,r3,1
   252e4:	10c00115 	stw	r3,4(r2)
   252e8:	9009883a 	mov	r4,r18
   252ec:	002d4080 	call	2d408 <__malloc_unlock>
   252f0:	80800204 	addi	r2,r16,8
   252f4:	dfc00a17 	ldw	ra,40(sp)
   252f8:	df000917 	ldw	fp,36(sp)
   252fc:	ddc00817 	ldw	r23,32(sp)
   25300:	dd800717 	ldw	r22,28(sp)
   25304:	dd400617 	ldw	r21,24(sp)
   25308:	dd000517 	ldw	r20,20(sp)
   2530c:	dcc00417 	ldw	r19,16(sp)
   25310:	dc800317 	ldw	r18,12(sp)
   25314:	dc400217 	ldw	r17,8(sp)
   25318:	dc000117 	ldw	r16,4(sp)
   2531c:	dec00b04 	addi	sp,sp,44
   25320:	f800283a 	ret
   25324:	00800304 	movi	r2,12
   25328:	90800015 	stw	r2,0(r18)
   2532c:	0005883a 	mov	r2,zero
   25330:	003ff006 	br	252f4 <_malloc_r+0x2a4>
   25334:	01002004 	movi	r4,128
   25338:	02001004 	movi	r8,64
   2533c:	01c00fc4 	movi	r7,63
   25340:	003f6106 	br	250c8 <_malloc_r+0x78>
   25344:	4009883a 	mov	r4,r8
   25348:	003f7506 	br	25120 <_malloc_r+0xd0>
   2534c:	81000317 	ldw	r4,12(r16)
   25350:	003fde06 	br	252cc <_malloc_r+0x27c>
   25354:	81c5883a 	add	r2,r16,r7
   25358:	11400117 	ldw	r5,4(r2)
   2535c:	9009883a 	mov	r4,r18
   25360:	29400054 	ori	r5,r5,1
   25364:	11400115 	stw	r5,4(r2)
   25368:	002d4080 	call	2d408 <__malloc_unlock>
   2536c:	80800204 	addi	r2,r16,8
   25370:	003fe006 	br	252f4 <_malloc_r+0x2a4>
   25374:	9c000217 	ldw	r16,8(r19)
   25378:	00bfff04 	movi	r2,-4
   2537c:	85800117 	ldw	r22,4(r16)
   25380:	b0ac703a 	and	r22,r22,r2
   25384:	b4400336 	bltu	r22,r17,25394 <_malloc_r+0x344>
   25388:	b445c83a 	sub	r2,r22,r17
   2538c:	00c003c4 	movi	r3,15
   25390:	18805d16 	blt	r3,r2,25508 <_malloc_r+0x4b8>
   25394:	05c00034 	movhi	r23,0
   25398:	00800034 	movhi	r2,0
   2539c:	10878104 	addi	r2,r2,7684
   253a0:	bdc76d04 	addi	r23,r23,7604
   253a4:	15400017 	ldw	r21,0(r2)
   253a8:	b8c00017 	ldw	r3,0(r23)
   253ac:	00bfffc4 	movi	r2,-1
   253b0:	858d883a 	add	r6,r16,r22
   253b4:	8d6b883a 	add	r21,r17,r21
   253b8:	1880ea26 	beq	r3,r2,25764 <_malloc_r+0x714>
   253bc:	ad4403c4 	addi	r21,r21,4111
   253c0:	00bc0004 	movi	r2,-4096
   253c4:	a8aa703a 	and	r21,r21,r2
   253c8:	a80b883a 	mov	r5,r21
   253cc:	9009883a 	mov	r4,r18
   253d0:	d9800015 	stw	r6,0(sp)
   253d4:	0026c200 	call	26c20 <_sbrk_r>
   253d8:	1029883a 	mov	r20,r2
   253dc:	00bfffc4 	movi	r2,-1
   253e0:	d9800017 	ldw	r6,0(sp)
   253e4:	a080e826 	beq	r20,r2,25788 <_malloc_r+0x738>
   253e8:	a180a636 	bltu	r20,r6,25684 <_malloc_r+0x634>
   253ec:	07000034 	movhi	fp,0
   253f0:	e7078a04 	addi	fp,fp,7720
   253f4:	e0800017 	ldw	r2,0(fp)
   253f8:	a887883a 	add	r3,r21,r2
   253fc:	e0c00015 	stw	r3,0(fp)
   25400:	3500e626 	beq	r6,r20,2579c <_malloc_r+0x74c>
   25404:	b9000017 	ldw	r4,0(r23)
   25408:	00bfffc4 	movi	r2,-1
   2540c:	2080ee26 	beq	r4,r2,257c8 <_malloc_r+0x778>
   25410:	a185c83a 	sub	r2,r20,r6
   25414:	10c5883a 	add	r2,r2,r3
   25418:	e0800015 	stw	r2,0(fp)
   2541c:	a0c001cc 	andi	r3,r20,7
   25420:	1800bc26 	beq	r3,zero,25714 <_malloc_r+0x6c4>
   25424:	a0e9c83a 	sub	r20,r20,r3
   25428:	00840204 	movi	r2,4104
   2542c:	a5000204 	addi	r20,r20,8
   25430:	10c7c83a 	sub	r3,r2,r3
   25434:	a545883a 	add	r2,r20,r21
   25438:	1083ffcc 	andi	r2,r2,4095
   2543c:	18abc83a 	sub	r21,r3,r2
   25440:	a80b883a 	mov	r5,r21
   25444:	9009883a 	mov	r4,r18
   25448:	0026c200 	call	26c20 <_sbrk_r>
   2544c:	00ffffc4 	movi	r3,-1
   25450:	10c0e126 	beq	r2,r3,257d8 <_malloc_r+0x788>
   25454:	1505c83a 	sub	r2,r2,r20
   25458:	1545883a 	add	r2,r2,r21
   2545c:	10800054 	ori	r2,r2,1
   25460:	e0c00017 	ldw	r3,0(fp)
   25464:	9d000215 	stw	r20,8(r19)
   25468:	a0800115 	stw	r2,4(r20)
   2546c:	a8c7883a 	add	r3,r21,r3
   25470:	e0c00015 	stw	r3,0(fp)
   25474:	84c00e26 	beq	r16,r19,254b0 <_malloc_r+0x460>
   25478:	018003c4 	movi	r6,15
   2547c:	3580a72e 	bgeu	r6,r22,2571c <_malloc_r+0x6cc>
   25480:	81400117 	ldw	r5,4(r16)
   25484:	013ffe04 	movi	r4,-8
   25488:	b0bffd04 	addi	r2,r22,-12
   2548c:	1104703a 	and	r2,r2,r4
   25490:	2900004c 	andi	r4,r5,1
   25494:	2088b03a 	or	r4,r4,r2
   25498:	81000115 	stw	r4,4(r16)
   2549c:	01400144 	movi	r5,5
   254a0:	8089883a 	add	r4,r16,r2
   254a4:	21400115 	stw	r5,4(r4)
   254a8:	21400215 	stw	r5,8(r4)
   254ac:	3080cd36 	bltu	r6,r2,257e4 <_malloc_r+0x794>
   254b0:	00800034 	movhi	r2,0
   254b4:	10878004 	addi	r2,r2,7680
   254b8:	11000017 	ldw	r4,0(r2)
   254bc:	20c0012e 	bgeu	r4,r3,254c4 <_malloc_r+0x474>
   254c0:	10c00015 	stw	r3,0(r2)
   254c4:	00800034 	movhi	r2,0
   254c8:	10877f04 	addi	r2,r2,7676
   254cc:	11000017 	ldw	r4,0(r2)
   254d0:	9c000217 	ldw	r16,8(r19)
   254d4:	20c0012e 	bgeu	r4,r3,254dc <_malloc_r+0x48c>
   254d8:	10c00015 	stw	r3,0(r2)
   254dc:	80c00117 	ldw	r3,4(r16)
   254e0:	00bfff04 	movi	r2,-4
   254e4:	1886703a 	and	r3,r3,r2
   254e8:	1c45c83a 	sub	r2,r3,r17
   254ec:	1c400236 	bltu	r3,r17,254f8 <_malloc_r+0x4a8>
   254f0:	00c003c4 	movi	r3,15
   254f4:	18800416 	blt	r3,r2,25508 <_malloc_r+0x4b8>
   254f8:	9009883a 	mov	r4,r18
   254fc:	002d4080 	call	2d408 <__malloc_unlock>
   25500:	0005883a 	mov	r2,zero
   25504:	003f7b06 	br	252f4 <_malloc_r+0x2a4>
   25508:	88c00054 	ori	r3,r17,1
   2550c:	80c00115 	stw	r3,4(r16)
   25510:	8463883a 	add	r17,r16,r17
   25514:	10800054 	ori	r2,r2,1
   25518:	9c400215 	stw	r17,8(r19)
   2551c:	88800115 	stw	r2,4(r17)
   25520:	9009883a 	mov	r4,r18
   25524:	002d4080 	call	2d408 <__malloc_unlock>
   25528:	80800204 	addi	r2,r16,8
   2552c:	003f7106 	br	252f4 <_malloc_r+0x2a4>
   25530:	00c00504 	movi	r3,20
   25534:	18804a2e 	bgeu	r3,r2,25660 <_malloc_r+0x610>
   25538:	00c01504 	movi	r3,84
   2553c:	18806e36 	bltu	r3,r2,256f8 <_malloc_r+0x6a8>
   25540:	8804d33a 	srli	r2,r17,12
   25544:	12001bc4 	addi	r8,r2,111
   25548:	11c01b84 	addi	r7,r2,110
   2554c:	4209883a 	add	r4,r8,r8
   25550:	003edd06 	br	250c8 <_malloc_r+0x78>
   25554:	3804d27a 	srli	r2,r7,9
   25558:	00c00104 	movi	r3,4
   2555c:	1880442e 	bgeu	r3,r2,25670 <_malloc_r+0x620>
   25560:	00c00504 	movi	r3,20
   25564:	18808136 	bltu	r3,r2,2576c <_malloc_r+0x71c>
   25568:	11401704 	addi	r5,r2,92
   2556c:	10c016c4 	addi	r3,r2,91
   25570:	294b883a 	add	r5,r5,r5
   25574:	294b883a 	add	r5,r5,r5
   25578:	294b883a 	add	r5,r5,r5
   2557c:	994b883a 	add	r5,r19,r5
   25580:	28800017 	ldw	r2,0(r5)
   25584:	01800034 	movhi	r6,0
   25588:	297ffe04 	addi	r5,r5,-8
   2558c:	3181e604 	addi	r6,r6,1944
   25590:	28806526 	beq	r5,r2,25728 <_malloc_r+0x6d8>
   25594:	01bfff04 	movi	r6,-4
   25598:	10c00117 	ldw	r3,4(r2)
   2559c:	1986703a 	and	r3,r3,r6
   255a0:	38c0022e 	bgeu	r7,r3,255ac <_malloc_r+0x55c>
   255a4:	10800217 	ldw	r2,8(r2)
   255a8:	28bffb1e 	bne	r5,r2,25598 <_malloc_r+0x548>
   255ac:	11400317 	ldw	r5,12(r2)
   255b0:	98c00117 	ldw	r3,4(r19)
   255b4:	81400315 	stw	r5,12(r16)
   255b8:	80800215 	stw	r2,8(r16)
   255bc:	2c000215 	stw	r16,8(r5)
   255c0:	14000315 	stw	r16,12(r2)
   255c4:	003ef806 	br	251a8 <_malloc_r+0x158>
   255c8:	88c00054 	ori	r3,r17,1
   255cc:	80c00115 	stw	r3,4(r16)
   255d0:	8463883a 	add	r17,r16,r17
   255d4:	34400515 	stw	r17,20(r6)
   255d8:	34400415 	stw	r17,16(r6)
   255dc:	10c00054 	ori	r3,r2,1
   255e0:	8a000315 	stw	r8,12(r17)
   255e4:	8a000215 	stw	r8,8(r17)
   255e8:	88c00115 	stw	r3,4(r17)
   255ec:	88a3883a 	add	r17,r17,r2
   255f0:	88800015 	stw	r2,0(r17)
   255f4:	9009883a 	mov	r4,r18
   255f8:	002d4080 	call	2d408 <__malloc_unlock>
   255fc:	80800204 	addi	r2,r16,8
   25600:	003f3c06 	br	252f4 <_malloc_r+0x2a4>
   25604:	30c00117 	ldw	r3,4(r6)
   25608:	003ee706 	br	251a8 <_malloc_r+0x158>
   2560c:	5ac00044 	addi	r11,r11,1
   25610:	588000cc 	andi	r2,r11,3
   25614:	31800204 	addi	r6,r6,8
   25618:	103efd1e 	bne	r2,zero,25210 <_malloc_r+0x1c0>
   2561c:	00002406 	br	256b0 <_malloc_r+0x660>
   25620:	14000317 	ldw	r16,12(r2)
   25624:	143f251e 	bne	r2,r16,252bc <_malloc_r+0x26c>
   25628:	21000084 	addi	r4,r4,2
   2562c:	003ebc06 	br	25120 <_malloc_r+0xd0>
   25630:	8085883a 	add	r2,r16,r2
   25634:	10c00117 	ldw	r3,4(r2)
   25638:	81000317 	ldw	r4,12(r16)
   2563c:	81400217 	ldw	r5,8(r16)
   25640:	18c00054 	ori	r3,r3,1
   25644:	10c00115 	stw	r3,4(r2)
   25648:	29000315 	stw	r4,12(r5)
   2564c:	21400215 	stw	r5,8(r4)
   25650:	9009883a 	mov	r4,r18
   25654:	002d4080 	call	2d408 <__malloc_unlock>
   25658:	80800204 	addi	r2,r16,8
   2565c:	003f2506 	br	252f4 <_malloc_r+0x2a4>
   25660:	12001704 	addi	r8,r2,92
   25664:	11c016c4 	addi	r7,r2,91
   25668:	4209883a 	add	r4,r8,r8
   2566c:	003e9606 	br	250c8 <_malloc_r+0x78>
   25670:	3804d1ba 	srli	r2,r7,6
   25674:	11400e44 	addi	r5,r2,57
   25678:	10c00e04 	addi	r3,r2,56
   2567c:	294b883a 	add	r5,r5,r5
   25680:	003fbc06 	br	25574 <_malloc_r+0x524>
   25684:	84ff5926 	beq	r16,r19,253ec <_malloc_r+0x39c>
   25688:	00800034 	movhi	r2,0
   2568c:	1081e604 	addi	r2,r2,1944
   25690:	14000217 	ldw	r16,8(r2)
   25694:	00bfff04 	movi	r2,-4
   25698:	80c00117 	ldw	r3,4(r16)
   2569c:	1886703a 	and	r3,r3,r2
   256a0:	003f9106 	br	254e8 <_malloc_r+0x498>
   256a4:	60800217 	ldw	r2,8(r12)
   256a8:	213fffc4 	addi	r4,r4,-1
   256ac:	1300651e 	bne	r2,r12,25844 <_malloc_r+0x7f4>
   256b0:	208000cc 	andi	r2,r4,3
   256b4:	633ffe04 	addi	r12,r12,-8
   256b8:	103ffa1e 	bne	r2,zero,256a4 <_malloc_r+0x654>
   256bc:	98800117 	ldw	r2,4(r19)
   256c0:	0146303a 	nor	r3,zero,r5
   256c4:	1884703a 	and	r2,r3,r2
   256c8:	98800115 	stw	r2,4(r19)
   256cc:	294b883a 	add	r5,r5,r5
   256d0:	117f2836 	bltu	r2,r5,25374 <_malloc_r+0x324>
   256d4:	283f2726 	beq	r5,zero,25374 <_malloc_r+0x324>
   256d8:	2886703a 	and	r3,r5,r2
   256dc:	5809883a 	mov	r4,r11
   256e0:	183ec31e 	bne	r3,zero,251f0 <_malloc_r+0x1a0>
   256e4:	294b883a 	add	r5,r5,r5
   256e8:	2886703a 	and	r3,r5,r2
   256ec:	21000104 	addi	r4,r4,4
   256f0:	183ffc26 	beq	r3,zero,256e4 <_malloc_r+0x694>
   256f4:	003ebe06 	br	251f0 <_malloc_r+0x1a0>
   256f8:	00c05504 	movi	r3,340
   256fc:	18801236 	bltu	r3,r2,25748 <_malloc_r+0x6f8>
   25700:	8804d3fa 	srli	r2,r17,15
   25704:	12001e04 	addi	r8,r2,120
   25708:	11c01dc4 	addi	r7,r2,119
   2570c:	4209883a 	add	r4,r8,r8
   25710:	003e6d06 	br	250c8 <_malloc_r+0x78>
   25714:	00c40004 	movi	r3,4096
   25718:	003f4606 	br	25434 <_malloc_r+0x3e4>
   2571c:	00800044 	movi	r2,1
   25720:	a0800115 	stw	r2,4(r20)
   25724:	003f7406 	br	254f8 <_malloc_r+0x4a8>
   25728:	1805d0ba 	srai	r2,r3,2
   2572c:	01c00044 	movi	r7,1
   25730:	30c00117 	ldw	r3,4(r6)
   25734:	388e983a 	sll	r7,r7,r2
   25738:	2805883a 	mov	r2,r5
   2573c:	38c6b03a 	or	r3,r7,r3
   25740:	30c00115 	stw	r3,4(r6)
   25744:	003f9b06 	br	255b4 <_malloc_r+0x564>
   25748:	00c15504 	movi	r3,1364
   2574c:	18801a36 	bltu	r3,r2,257b8 <_malloc_r+0x768>
   25750:	8804d4ba 	srli	r2,r17,18
   25754:	12001f44 	addi	r8,r2,125
   25758:	11c01f04 	addi	r7,r2,124
   2575c:	4209883a 	add	r4,r8,r8
   25760:	003e5906 	br	250c8 <_malloc_r+0x78>
   25764:	ad400404 	addi	r21,r21,16
   25768:	003f1706 	br	253c8 <_malloc_r+0x378>
   2576c:	00c01504 	movi	r3,84
   25770:	18802336 	bltu	r3,r2,25800 <_malloc_r+0x7b0>
   25774:	3804d33a 	srli	r2,r7,12
   25778:	11401bc4 	addi	r5,r2,111
   2577c:	10c01b84 	addi	r3,r2,110
   25780:	294b883a 	add	r5,r5,r5
   25784:	003f7b06 	br	25574 <_malloc_r+0x524>
   25788:	9c000217 	ldw	r16,8(r19)
   2578c:	00bfff04 	movi	r2,-4
   25790:	80c00117 	ldw	r3,4(r16)
   25794:	1886703a 	and	r3,r3,r2
   25798:	003f5306 	br	254e8 <_malloc_r+0x498>
   2579c:	3083ffcc 	andi	r2,r6,4095
   257a0:	103f181e 	bne	r2,zero,25404 <_malloc_r+0x3b4>
   257a4:	99000217 	ldw	r4,8(r19)
   257a8:	b545883a 	add	r2,r22,r21
   257ac:	10800054 	ori	r2,r2,1
   257b0:	20800115 	stw	r2,4(r4)
   257b4:	003f3e06 	br	254b0 <_malloc_r+0x460>
   257b8:	01003f84 	movi	r4,254
   257bc:	02001fc4 	movi	r8,127
   257c0:	01c01f84 	movi	r7,126
   257c4:	003e4006 	br	250c8 <_malloc_r+0x78>
   257c8:	00800034 	movhi	r2,0
   257cc:	10876d04 	addi	r2,r2,7604
   257d0:	15000015 	stw	r20,0(r2)
   257d4:	003f1106 	br	2541c <_malloc_r+0x3cc>
   257d8:	00800044 	movi	r2,1
   257dc:	002b883a 	mov	r21,zero
   257e0:	003f1f06 	br	25460 <_malloc_r+0x410>
   257e4:	81400204 	addi	r5,r16,8
   257e8:	9009883a 	mov	r4,r18
   257ec:	00249200 	call	24920 <_free_r>
   257f0:	00800034 	movhi	r2,0
   257f4:	10878a04 	addi	r2,r2,7720
   257f8:	10c00017 	ldw	r3,0(r2)
   257fc:	003f2c06 	br	254b0 <_malloc_r+0x460>
   25800:	00c05504 	movi	r3,340
   25804:	18800536 	bltu	r3,r2,2581c <_malloc_r+0x7cc>
   25808:	3804d3fa 	srli	r2,r7,15
   2580c:	11401e04 	addi	r5,r2,120
   25810:	10c01dc4 	addi	r3,r2,119
   25814:	294b883a 	add	r5,r5,r5
   25818:	003f5606 	br	25574 <_malloc_r+0x524>
   2581c:	00c15504 	movi	r3,1364
   25820:	18800536 	bltu	r3,r2,25838 <_malloc_r+0x7e8>
   25824:	3804d4ba 	srli	r2,r7,18
   25828:	11401f44 	addi	r5,r2,125
   2582c:	10c01f04 	addi	r3,r2,124
   25830:	294b883a 	add	r5,r5,r5
   25834:	003f4f06 	br	25574 <_malloc_r+0x524>
   25838:	01403f84 	movi	r5,254
   2583c:	00c01f84 	movi	r3,126
   25840:	003f4c06 	br	25574 <_malloc_r+0x524>
   25844:	98800117 	ldw	r2,4(r19)
   25848:	003fa006 	br	256cc <_malloc_r+0x67c>
   2584c:	8808d0fa 	srli	r4,r17,3
   25850:	20800044 	addi	r2,r4,1
   25854:	1085883a 	add	r2,r2,r2
   25858:	003e9006 	br	2529c <_malloc_r+0x24c>

0002585c <memchr>:
   2585c:	208000cc 	andi	r2,r4,3
   25860:	280f883a 	mov	r7,r5
   25864:	10003426 	beq	r2,zero,25938 <memchr+0xdc>
   25868:	30bfffc4 	addi	r2,r6,-1
   2586c:	30001a26 	beq	r6,zero,258d8 <memchr+0x7c>
   25870:	20c00003 	ldbu	r3,0(r4)
   25874:	29803fcc 	andi	r6,r5,255
   25878:	30c0051e 	bne	r6,r3,25890 <memchr+0x34>
   2587c:	00001806 	br	258e0 <memchr+0x84>
   25880:	10001526 	beq	r2,zero,258d8 <memchr+0x7c>
   25884:	20c00003 	ldbu	r3,0(r4)
   25888:	10bfffc4 	addi	r2,r2,-1
   2588c:	30c01426 	beq	r6,r3,258e0 <memchr+0x84>
   25890:	21000044 	addi	r4,r4,1
   25894:	20c000cc 	andi	r3,r4,3
   25898:	183ff91e 	bne	r3,zero,25880 <memchr+0x24>
   2589c:	020000c4 	movi	r8,3
   258a0:	40801136 	bltu	r8,r2,258e8 <memchr+0x8c>
   258a4:	10000c26 	beq	r2,zero,258d8 <memchr+0x7c>
   258a8:	20c00003 	ldbu	r3,0(r4)
   258ac:	29403fcc 	andi	r5,r5,255
   258b0:	28c00b26 	beq	r5,r3,258e0 <memchr+0x84>
   258b4:	20c00044 	addi	r3,r4,1
   258b8:	39803fcc 	andi	r6,r7,255
   258bc:	2089883a 	add	r4,r4,r2
   258c0:	00000306 	br	258d0 <memchr+0x74>
   258c4:	18c00044 	addi	r3,r3,1
   258c8:	197fffc3 	ldbu	r5,-1(r3)
   258cc:	31400526 	beq	r6,r5,258e4 <memchr+0x88>
   258d0:	1805883a 	mov	r2,r3
   258d4:	20fffb1e 	bne	r4,r3,258c4 <memchr+0x68>
   258d8:	0005883a 	mov	r2,zero
   258dc:	f800283a 	ret
   258e0:	2005883a 	mov	r2,r4
   258e4:	f800283a 	ret
   258e8:	28c03fcc 	andi	r3,r5,255
   258ec:	1812923a 	slli	r9,r3,8
   258f0:	02ffbff4 	movhi	r11,65279
   258f4:	02a02074 	movhi	r10,32897
   258f8:	48d2b03a 	or	r9,r9,r3
   258fc:	4806943a 	slli	r3,r9,16
   25900:	5affbfc4 	addi	r11,r11,-257
   25904:	52a02004 	addi	r10,r10,-32640
   25908:	48d2b03a 	or	r9,r9,r3
   2590c:	20c00017 	ldw	r3,0(r4)
   25910:	48c6f03a 	xor	r3,r9,r3
   25914:	1acd883a 	add	r6,r3,r11
   25918:	00c6303a 	nor	r3,zero,r3
   2591c:	30c6703a 	and	r3,r6,r3
   25920:	1a86703a 	and	r3,r3,r10
   25924:	183fe01e 	bne	r3,zero,258a8 <memchr+0x4c>
   25928:	10bfff04 	addi	r2,r2,-4
   2592c:	21000104 	addi	r4,r4,4
   25930:	40bff636 	bltu	r8,r2,2590c <memchr+0xb0>
   25934:	003fdb06 	br	258a4 <memchr+0x48>
   25938:	3005883a 	mov	r2,r6
   2593c:	003fd706 	br	2589c <memchr+0x40>

00025940 <memcpy>:
   25940:	defffd04 	addi	sp,sp,-12
   25944:	dfc00215 	stw	ra,8(sp)
   25948:	dc400115 	stw	r17,4(sp)
   2594c:	dc000015 	stw	r16,0(sp)
   25950:	00c003c4 	movi	r3,15
   25954:	2005883a 	mov	r2,r4
   25958:	1980452e 	bgeu	r3,r6,25a70 <memcpy+0x130>
   2595c:	2906b03a 	or	r3,r5,r4
   25960:	18c000cc 	andi	r3,r3,3
   25964:	1800441e 	bne	r3,zero,25a78 <memcpy+0x138>
   25968:	347ffc04 	addi	r17,r6,-16
   2596c:	8822d13a 	srli	r17,r17,4
   25970:	28c00104 	addi	r3,r5,4
   25974:	23400104 	addi	r13,r4,4
   25978:	8820913a 	slli	r16,r17,4
   2597c:	2b000204 	addi	r12,r5,8
   25980:	22c00204 	addi	r11,r4,8
   25984:	84000504 	addi	r16,r16,20
   25988:	2a800304 	addi	r10,r5,12
   2598c:	22400304 	addi	r9,r4,12
   25990:	2c21883a 	add	r16,r5,r16
   25994:	2811883a 	mov	r8,r5
   25998:	200f883a 	mov	r7,r4
   2599c:	41000017 	ldw	r4,0(r8)
   259a0:	1fc00017 	ldw	ra,0(r3)
   259a4:	63c00017 	ldw	r15,0(r12)
   259a8:	39000015 	stw	r4,0(r7)
   259ac:	53800017 	ldw	r14,0(r10)
   259b0:	6fc00015 	stw	ra,0(r13)
   259b4:	5bc00015 	stw	r15,0(r11)
   259b8:	4b800015 	stw	r14,0(r9)
   259bc:	18c00404 	addi	r3,r3,16
   259c0:	39c00404 	addi	r7,r7,16
   259c4:	42000404 	addi	r8,r8,16
   259c8:	6b400404 	addi	r13,r13,16
   259cc:	63000404 	addi	r12,r12,16
   259d0:	5ac00404 	addi	r11,r11,16
   259d4:	52800404 	addi	r10,r10,16
   259d8:	4a400404 	addi	r9,r9,16
   259dc:	1c3fef1e 	bne	r3,r16,2599c <memcpy+0x5c>
   259e0:	89c00044 	addi	r7,r17,1
   259e4:	380e913a 	slli	r7,r7,4
   259e8:	310003cc 	andi	r4,r6,15
   259ec:	02c000c4 	movi	r11,3
   259f0:	11c7883a 	add	r3,r2,r7
   259f4:	29cb883a 	add	r5,r5,r7
   259f8:	5900212e 	bgeu	r11,r4,25a80 <memcpy+0x140>
   259fc:	1813883a 	mov	r9,r3
   25a00:	2811883a 	mov	r8,r5
   25a04:	200f883a 	mov	r7,r4
   25a08:	42800017 	ldw	r10,0(r8)
   25a0c:	4a400104 	addi	r9,r9,4
   25a10:	39ffff04 	addi	r7,r7,-4
   25a14:	4abfff15 	stw	r10,-4(r9)
   25a18:	42000104 	addi	r8,r8,4
   25a1c:	59fffa36 	bltu	r11,r7,25a08 <memcpy+0xc8>
   25a20:	213fff04 	addi	r4,r4,-4
   25a24:	2008d0ba 	srli	r4,r4,2
   25a28:	318000cc 	andi	r6,r6,3
   25a2c:	21000044 	addi	r4,r4,1
   25a30:	2109883a 	add	r4,r4,r4
   25a34:	2109883a 	add	r4,r4,r4
   25a38:	1907883a 	add	r3,r3,r4
   25a3c:	290b883a 	add	r5,r5,r4
   25a40:	30000626 	beq	r6,zero,25a5c <memcpy+0x11c>
   25a44:	198d883a 	add	r6,r3,r6
   25a48:	29c00003 	ldbu	r7,0(r5)
   25a4c:	18c00044 	addi	r3,r3,1
   25a50:	29400044 	addi	r5,r5,1
   25a54:	19ffffc5 	stb	r7,-1(r3)
   25a58:	19bffb1e 	bne	r3,r6,25a48 <memcpy+0x108>
   25a5c:	dfc00217 	ldw	ra,8(sp)
   25a60:	dc400117 	ldw	r17,4(sp)
   25a64:	dc000017 	ldw	r16,0(sp)
   25a68:	dec00304 	addi	sp,sp,12
   25a6c:	f800283a 	ret
   25a70:	2007883a 	mov	r3,r4
   25a74:	003ff206 	br	25a40 <memcpy+0x100>
   25a78:	2007883a 	mov	r3,r4
   25a7c:	003ff106 	br	25a44 <memcpy+0x104>
   25a80:	200d883a 	mov	r6,r4
   25a84:	003fee06 	br	25a40 <memcpy+0x100>

00025a88 <memset>:
   25a88:	20c000cc 	andi	r3,r4,3
   25a8c:	2005883a 	mov	r2,r4
   25a90:	18004426 	beq	r3,zero,25ba4 <memset+0x11c>
   25a94:	31ffffc4 	addi	r7,r6,-1
   25a98:	30004026 	beq	r6,zero,25b9c <memset+0x114>
   25a9c:	2813883a 	mov	r9,r5
   25aa0:	200d883a 	mov	r6,r4
   25aa4:	2007883a 	mov	r3,r4
   25aa8:	00000406 	br	25abc <memset+0x34>
   25aac:	3a3fffc4 	addi	r8,r7,-1
   25ab0:	31800044 	addi	r6,r6,1
   25ab4:	38003926 	beq	r7,zero,25b9c <memset+0x114>
   25ab8:	400f883a 	mov	r7,r8
   25abc:	18c00044 	addi	r3,r3,1
   25ac0:	32400005 	stb	r9,0(r6)
   25ac4:	1a0000cc 	andi	r8,r3,3
   25ac8:	403ff81e 	bne	r8,zero,25aac <memset+0x24>
   25acc:	010000c4 	movi	r4,3
   25ad0:	21c02d2e 	bgeu	r4,r7,25b88 <memset+0x100>
   25ad4:	29003fcc 	andi	r4,r5,255
   25ad8:	200c923a 	slli	r6,r4,8
   25adc:	3108b03a 	or	r4,r6,r4
   25ae0:	200c943a 	slli	r6,r4,16
   25ae4:	218cb03a 	or	r6,r4,r6
   25ae8:	010003c4 	movi	r4,15
   25aec:	21c0182e 	bgeu	r4,r7,25b50 <memset+0xc8>
   25af0:	3b3ffc04 	addi	r12,r7,-16
   25af4:	6018d13a 	srli	r12,r12,4
   25af8:	1a000104 	addi	r8,r3,4
   25afc:	1ac00204 	addi	r11,r3,8
   25b00:	6008913a 	slli	r4,r12,4
   25b04:	1a800304 	addi	r10,r3,12
   25b08:	1813883a 	mov	r9,r3
   25b0c:	21000504 	addi	r4,r4,20
   25b10:	1909883a 	add	r4,r3,r4
   25b14:	49800015 	stw	r6,0(r9)
   25b18:	41800015 	stw	r6,0(r8)
   25b1c:	59800015 	stw	r6,0(r11)
   25b20:	51800015 	stw	r6,0(r10)
   25b24:	42000404 	addi	r8,r8,16
   25b28:	4a400404 	addi	r9,r9,16
   25b2c:	5ac00404 	addi	r11,r11,16
   25b30:	52800404 	addi	r10,r10,16
   25b34:	413ff71e 	bne	r8,r4,25b14 <memset+0x8c>
   25b38:	63000044 	addi	r12,r12,1
   25b3c:	6018913a 	slli	r12,r12,4
   25b40:	39c003cc 	andi	r7,r7,15
   25b44:	010000c4 	movi	r4,3
   25b48:	1b07883a 	add	r3,r3,r12
   25b4c:	21c00e2e 	bgeu	r4,r7,25b88 <memset+0x100>
   25b50:	1813883a 	mov	r9,r3
   25b54:	3811883a 	mov	r8,r7
   25b58:	010000c4 	movi	r4,3
   25b5c:	49800015 	stw	r6,0(r9)
   25b60:	423fff04 	addi	r8,r8,-4
   25b64:	4a400104 	addi	r9,r9,4
   25b68:	223ffc36 	bltu	r4,r8,25b5c <memset+0xd4>
   25b6c:	393fff04 	addi	r4,r7,-4
   25b70:	2008d0ba 	srli	r4,r4,2
   25b74:	39c000cc 	andi	r7,r7,3
   25b78:	21000044 	addi	r4,r4,1
   25b7c:	2109883a 	add	r4,r4,r4
   25b80:	2109883a 	add	r4,r4,r4
   25b84:	1907883a 	add	r3,r3,r4
   25b88:	38000526 	beq	r7,zero,25ba0 <memset+0x118>
   25b8c:	19cf883a 	add	r7,r3,r7
   25b90:	19400005 	stb	r5,0(r3)
   25b94:	18c00044 	addi	r3,r3,1
   25b98:	38fffd1e 	bne	r7,r3,25b90 <memset+0x108>
   25b9c:	f800283a 	ret
   25ba0:	f800283a 	ret
   25ba4:	2007883a 	mov	r3,r4
   25ba8:	300f883a 	mov	r7,r6
   25bac:	003fc706 	br	25acc <memset+0x44>

00025bb0 <_Balloc>:
   25bb0:	20801317 	ldw	r2,76(r4)
   25bb4:	defffc04 	addi	sp,sp,-16
   25bb8:	dc400115 	stw	r17,4(sp)
   25bbc:	dc000015 	stw	r16,0(sp)
   25bc0:	dfc00315 	stw	ra,12(sp)
   25bc4:	dc800215 	stw	r18,8(sp)
   25bc8:	2023883a 	mov	r17,r4
   25bcc:	2821883a 	mov	r16,r5
   25bd0:	10000f26 	beq	r2,zero,25c10 <_Balloc+0x60>
   25bd4:	8407883a 	add	r3,r16,r16
   25bd8:	18c7883a 	add	r3,r3,r3
   25bdc:	10c7883a 	add	r3,r2,r3
   25be0:	18800017 	ldw	r2,0(r3)
   25be4:	10001126 	beq	r2,zero,25c2c <_Balloc+0x7c>
   25be8:	11000017 	ldw	r4,0(r2)
   25bec:	19000015 	stw	r4,0(r3)
   25bf0:	10000415 	stw	zero,16(r2)
   25bf4:	10000315 	stw	zero,12(r2)
   25bf8:	dfc00317 	ldw	ra,12(sp)
   25bfc:	dc800217 	ldw	r18,8(sp)
   25c00:	dc400117 	ldw	r17,4(sp)
   25c04:	dc000017 	ldw	r16,0(sp)
   25c08:	dec00404 	addi	sp,sp,16
   25c0c:	f800283a 	ret
   25c10:	01800844 	movi	r6,33
   25c14:	01400104 	movi	r5,4
   25c18:	00286200 	call	28620 <_calloc_r>
   25c1c:	88801315 	stw	r2,76(r17)
   25c20:	103fec1e 	bne	r2,zero,25bd4 <_Balloc+0x24>
   25c24:	0005883a 	mov	r2,zero
   25c28:	003ff306 	br	25bf8 <_Balloc+0x48>
   25c2c:	01400044 	movi	r5,1
   25c30:	2c24983a 	sll	r18,r5,r16
   25c34:	8809883a 	mov	r4,r17
   25c38:	91800144 	addi	r6,r18,5
   25c3c:	318d883a 	add	r6,r6,r6
   25c40:	318d883a 	add	r6,r6,r6
   25c44:	00286200 	call	28620 <_calloc_r>
   25c48:	103ff626 	beq	r2,zero,25c24 <_Balloc+0x74>
   25c4c:	14000115 	stw	r16,4(r2)
   25c50:	14800215 	stw	r18,8(r2)
   25c54:	003fe606 	br	25bf0 <_Balloc+0x40>

00025c58 <_Bfree>:
   25c58:	28000826 	beq	r5,zero,25c7c <_Bfree+0x24>
   25c5c:	28c00117 	ldw	r3,4(r5)
   25c60:	20801317 	ldw	r2,76(r4)
   25c64:	18c7883a 	add	r3,r3,r3
   25c68:	18c7883a 	add	r3,r3,r3
   25c6c:	10c5883a 	add	r2,r2,r3
   25c70:	10c00017 	ldw	r3,0(r2)
   25c74:	28c00015 	stw	r3,0(r5)
   25c78:	11400015 	stw	r5,0(r2)
   25c7c:	f800283a 	ret

00025c80 <__multadd>:
   25c80:	defffa04 	addi	sp,sp,-24
   25c84:	dc800315 	stw	r18,12(sp)
   25c88:	dc400215 	stw	r17,8(sp)
   25c8c:	dc000115 	stw	r16,4(sp)
   25c90:	2823883a 	mov	r17,r5
   25c94:	2c000417 	ldw	r16,16(r5)
   25c98:	dfc00515 	stw	ra,20(sp)
   25c9c:	dcc00415 	stw	r19,16(sp)
   25ca0:	2025883a 	mov	r18,r4
   25ca4:	29400504 	addi	r5,r5,20
   25ca8:	0011883a 	mov	r8,zero
   25cac:	28c00017 	ldw	r3,0(r5)
   25cb0:	29400104 	addi	r5,r5,4
   25cb4:	42000044 	addi	r8,r8,1
   25cb8:	18bfffcc 	andi	r2,r3,65535
   25cbc:	1185383a 	mul	r2,r2,r6
   25cc0:	1806d43a 	srli	r3,r3,16
   25cc4:	11cf883a 	add	r7,r2,r7
   25cc8:	3808d43a 	srli	r4,r7,16
   25ccc:	1987383a 	mul	r3,r3,r6
   25cd0:	38bfffcc 	andi	r2,r7,65535
   25cd4:	1907883a 	add	r3,r3,r4
   25cd8:	1808943a 	slli	r4,r3,16
   25cdc:	180ed43a 	srli	r7,r3,16
   25ce0:	2085883a 	add	r2,r4,r2
   25ce4:	28bfff15 	stw	r2,-4(r5)
   25ce8:	443ff016 	blt	r8,r16,25cac <__multadd+0x2c>
   25cec:	38000926 	beq	r7,zero,25d14 <__multadd+0x94>
   25cf0:	88800217 	ldw	r2,8(r17)
   25cf4:	80800f0e 	bge	r16,r2,25d34 <__multadd+0xb4>
   25cf8:	80800144 	addi	r2,r16,5
   25cfc:	1085883a 	add	r2,r2,r2
   25d00:	1085883a 	add	r2,r2,r2
   25d04:	8885883a 	add	r2,r17,r2
   25d08:	11c00015 	stw	r7,0(r2)
   25d0c:	84000044 	addi	r16,r16,1
   25d10:	8c000415 	stw	r16,16(r17)
   25d14:	8805883a 	mov	r2,r17
   25d18:	dfc00517 	ldw	ra,20(sp)
   25d1c:	dcc00417 	ldw	r19,16(sp)
   25d20:	dc800317 	ldw	r18,12(sp)
   25d24:	dc400217 	ldw	r17,8(sp)
   25d28:	dc000117 	ldw	r16,4(sp)
   25d2c:	dec00604 	addi	sp,sp,24
   25d30:	f800283a 	ret
   25d34:	89400117 	ldw	r5,4(r17)
   25d38:	9009883a 	mov	r4,r18
   25d3c:	d9c00015 	stw	r7,0(sp)
   25d40:	29400044 	addi	r5,r5,1
   25d44:	0025bb00 	call	25bb0 <_Balloc>
   25d48:	89800417 	ldw	r6,16(r17)
   25d4c:	89400304 	addi	r5,r17,12
   25d50:	11000304 	addi	r4,r2,12
   25d54:	31800084 	addi	r6,r6,2
   25d58:	318d883a 	add	r6,r6,r6
   25d5c:	318d883a 	add	r6,r6,r6
   25d60:	1027883a 	mov	r19,r2
   25d64:	00259400 	call	25940 <memcpy>
   25d68:	d9c00017 	ldw	r7,0(sp)
   25d6c:	88000a26 	beq	r17,zero,25d98 <__multadd+0x118>
   25d70:	88c00117 	ldw	r3,4(r17)
   25d74:	90801317 	ldw	r2,76(r18)
   25d78:	18c7883a 	add	r3,r3,r3
   25d7c:	18c7883a 	add	r3,r3,r3
   25d80:	10c5883a 	add	r2,r2,r3
   25d84:	10c00017 	ldw	r3,0(r2)
   25d88:	88c00015 	stw	r3,0(r17)
   25d8c:	14400015 	stw	r17,0(r2)
   25d90:	9823883a 	mov	r17,r19
   25d94:	003fd806 	br	25cf8 <__multadd+0x78>
   25d98:	9823883a 	mov	r17,r19
   25d9c:	003fd606 	br	25cf8 <__multadd+0x78>

00025da0 <__s2b>:
   25da0:	defff904 	addi	sp,sp,-28
   25da4:	dc400115 	stw	r17,4(sp)
   25da8:	dc000015 	stw	r16,0(sp)
   25dac:	2023883a 	mov	r17,r4
   25db0:	2821883a 	mov	r16,r5
   25db4:	39000204 	addi	r4,r7,8
   25db8:	01400244 	movi	r5,9
   25dbc:	dcc00315 	stw	r19,12(sp)
   25dc0:	dc800215 	stw	r18,8(sp)
   25dc4:	dfc00615 	stw	ra,24(sp)
   25dc8:	dd400515 	stw	r21,20(sp)
   25dcc:	dd000415 	stw	r20,16(sp)
   25dd0:	3825883a 	mov	r18,r7
   25dd4:	3027883a 	mov	r19,r6
   25dd8:	002a4cc0 	call	2a4cc <__divsi3>
   25ddc:	00c00044 	movi	r3,1
   25de0:	000b883a 	mov	r5,zero
   25de4:	1880030e 	bge	r3,r2,25df4 <__s2b+0x54>
   25de8:	18c7883a 	add	r3,r3,r3
   25dec:	29400044 	addi	r5,r5,1
   25df0:	18bffd16 	blt	r3,r2,25de8 <__s2b+0x48>
   25df4:	8809883a 	mov	r4,r17
   25df8:	0025bb00 	call	25bb0 <_Balloc>
   25dfc:	d8c00717 	ldw	r3,28(sp)
   25e00:	10c00515 	stw	r3,20(r2)
   25e04:	00c00044 	movi	r3,1
   25e08:	10c00415 	stw	r3,16(r2)
   25e0c:	00c00244 	movi	r3,9
   25e10:	1cc0210e 	bge	r3,r19,25e98 <__s2b+0xf8>
   25e14:	80eb883a 	add	r21,r16,r3
   25e18:	a829883a 	mov	r20,r21
   25e1c:	84e1883a 	add	r16,r16,r19
   25e20:	a1c00007 	ldb	r7,0(r20)
   25e24:	01800284 	movi	r6,10
   25e28:	a5000044 	addi	r20,r20,1
   25e2c:	100b883a 	mov	r5,r2
   25e30:	39fff404 	addi	r7,r7,-48
   25e34:	8809883a 	mov	r4,r17
   25e38:	0025c800 	call	25c80 <__multadd>
   25e3c:	a43ff81e 	bne	r20,r16,25e20 <__s2b+0x80>
   25e40:	ace1883a 	add	r16,r21,r19
   25e44:	843ffe04 	addi	r16,r16,-8
   25e48:	9c800a0e 	bge	r19,r18,25e74 <__s2b+0xd4>
   25e4c:	94e5c83a 	sub	r18,r18,r19
   25e50:	84a5883a 	add	r18,r16,r18
   25e54:	81c00007 	ldb	r7,0(r16)
   25e58:	01800284 	movi	r6,10
   25e5c:	84000044 	addi	r16,r16,1
   25e60:	100b883a 	mov	r5,r2
   25e64:	39fff404 	addi	r7,r7,-48
   25e68:	8809883a 	mov	r4,r17
   25e6c:	0025c800 	call	25c80 <__multadd>
   25e70:	84bff81e 	bne	r16,r18,25e54 <__s2b+0xb4>
   25e74:	dfc00617 	ldw	ra,24(sp)
   25e78:	dd400517 	ldw	r21,20(sp)
   25e7c:	dd000417 	ldw	r20,16(sp)
   25e80:	dcc00317 	ldw	r19,12(sp)
   25e84:	dc800217 	ldw	r18,8(sp)
   25e88:	dc400117 	ldw	r17,4(sp)
   25e8c:	dc000017 	ldw	r16,0(sp)
   25e90:	dec00704 	addi	sp,sp,28
   25e94:	f800283a 	ret
   25e98:	84000284 	addi	r16,r16,10
   25e9c:	1827883a 	mov	r19,r3
   25ea0:	003fe906 	br	25e48 <__s2b+0xa8>

00025ea4 <__hi0bits>:
   25ea4:	20bfffec 	andhi	r2,r4,65535
   25ea8:	1000141e 	bne	r2,zero,25efc <__hi0bits+0x58>
   25eac:	2008943a 	slli	r4,r4,16
   25eb0:	00800404 	movi	r2,16
   25eb4:	20ffc02c 	andhi	r3,r4,65280
   25eb8:	1800021e 	bne	r3,zero,25ec4 <__hi0bits+0x20>
   25ebc:	2008923a 	slli	r4,r4,8
   25ec0:	10800204 	addi	r2,r2,8
   25ec4:	20fc002c 	andhi	r3,r4,61440
   25ec8:	1800021e 	bne	r3,zero,25ed4 <__hi0bits+0x30>
   25ecc:	2008913a 	slli	r4,r4,4
   25ed0:	10800104 	addi	r2,r2,4
   25ed4:	20f0002c 	andhi	r3,r4,49152
   25ed8:	1800031e 	bne	r3,zero,25ee8 <__hi0bits+0x44>
   25edc:	2109883a 	add	r4,r4,r4
   25ee0:	10800084 	addi	r2,r2,2
   25ee4:	2109883a 	add	r4,r4,r4
   25ee8:	20000316 	blt	r4,zero,25ef8 <__hi0bits+0x54>
   25eec:	2110002c 	andhi	r4,r4,16384
   25ef0:	2000041e 	bne	r4,zero,25f04 <__hi0bits+0x60>
   25ef4:	00800804 	movi	r2,32
   25ef8:	f800283a 	ret
   25efc:	0005883a 	mov	r2,zero
   25f00:	003fec06 	br	25eb4 <__hi0bits+0x10>
   25f04:	10800044 	addi	r2,r2,1
   25f08:	f800283a 	ret

00025f0c <__lo0bits>:
   25f0c:	20c00017 	ldw	r3,0(r4)
   25f10:	188001cc 	andi	r2,r3,7
   25f14:	10000826 	beq	r2,zero,25f38 <__lo0bits+0x2c>
   25f18:	1880004c 	andi	r2,r3,1
   25f1c:	1000211e 	bne	r2,zero,25fa4 <__lo0bits+0x98>
   25f20:	1880008c 	andi	r2,r3,2
   25f24:	1000211e 	bne	r2,zero,25fac <__lo0bits+0xa0>
   25f28:	1806d0ba 	srli	r3,r3,2
   25f2c:	00800084 	movi	r2,2
   25f30:	20c00015 	stw	r3,0(r4)
   25f34:	f800283a 	ret
   25f38:	18bfffcc 	andi	r2,r3,65535
   25f3c:	10001326 	beq	r2,zero,25f8c <__lo0bits+0x80>
   25f40:	0005883a 	mov	r2,zero
   25f44:	19403fcc 	andi	r5,r3,255
   25f48:	2800021e 	bne	r5,zero,25f54 <__lo0bits+0x48>
   25f4c:	1806d23a 	srli	r3,r3,8
   25f50:	10800204 	addi	r2,r2,8
   25f54:	194003cc 	andi	r5,r3,15
   25f58:	2800021e 	bne	r5,zero,25f64 <__lo0bits+0x58>
   25f5c:	1806d13a 	srli	r3,r3,4
   25f60:	10800104 	addi	r2,r2,4
   25f64:	194000cc 	andi	r5,r3,3
   25f68:	2800021e 	bne	r5,zero,25f74 <__lo0bits+0x68>
   25f6c:	1806d0ba 	srli	r3,r3,2
   25f70:	10800084 	addi	r2,r2,2
   25f74:	1940004c 	andi	r5,r3,1
   25f78:	2800081e 	bne	r5,zero,25f9c <__lo0bits+0x90>
   25f7c:	1806d07a 	srli	r3,r3,1
   25f80:	1800051e 	bne	r3,zero,25f98 <__lo0bits+0x8c>
   25f84:	00800804 	movi	r2,32
   25f88:	f800283a 	ret
   25f8c:	1806d43a 	srli	r3,r3,16
   25f90:	00800404 	movi	r2,16
   25f94:	003feb06 	br	25f44 <__lo0bits+0x38>
   25f98:	10800044 	addi	r2,r2,1
   25f9c:	20c00015 	stw	r3,0(r4)
   25fa0:	f800283a 	ret
   25fa4:	0005883a 	mov	r2,zero
   25fa8:	f800283a 	ret
   25fac:	1806d07a 	srli	r3,r3,1
   25fb0:	00800044 	movi	r2,1
   25fb4:	20c00015 	stw	r3,0(r4)
   25fb8:	f800283a 	ret

00025fbc <__i2b>:
   25fbc:	defffd04 	addi	sp,sp,-12
   25fc0:	dc000015 	stw	r16,0(sp)
   25fc4:	04000044 	movi	r16,1
   25fc8:	dc400115 	stw	r17,4(sp)
   25fcc:	2823883a 	mov	r17,r5
   25fd0:	800b883a 	mov	r5,r16
   25fd4:	dfc00215 	stw	ra,8(sp)
   25fd8:	0025bb00 	call	25bb0 <_Balloc>
   25fdc:	14400515 	stw	r17,20(r2)
   25fe0:	14000415 	stw	r16,16(r2)
   25fe4:	dfc00217 	ldw	ra,8(sp)
   25fe8:	dc400117 	ldw	r17,4(sp)
   25fec:	dc000017 	ldw	r16,0(sp)
   25ff0:	dec00304 	addi	sp,sp,12
   25ff4:	f800283a 	ret

00025ff8 <__multiply>:
   25ff8:	defffa04 	addi	sp,sp,-24
   25ffc:	dcc00315 	stw	r19,12(sp)
   26000:	dc800215 	stw	r18,8(sp)
   26004:	34c00417 	ldw	r19,16(r6)
   26008:	2c800417 	ldw	r18,16(r5)
   2600c:	dd000415 	stw	r20,16(sp)
   26010:	dc400115 	stw	r17,4(sp)
   26014:	dfc00515 	stw	ra,20(sp)
   26018:	dc000015 	stw	r16,0(sp)
   2601c:	2829883a 	mov	r20,r5
   26020:	3023883a 	mov	r17,r6
   26024:	94c0050e 	bge	r18,r19,2603c <__multiply+0x44>
   26028:	9007883a 	mov	r3,r18
   2602c:	3029883a 	mov	r20,r6
   26030:	9825883a 	mov	r18,r19
   26034:	2823883a 	mov	r17,r5
   26038:	1827883a 	mov	r19,r3
   2603c:	a0800217 	ldw	r2,8(r20)
   26040:	94e1883a 	add	r16,r18,r19
   26044:	a1400117 	ldw	r5,4(r20)
   26048:	1400010e 	bge	r2,r16,26050 <__multiply+0x58>
   2604c:	29400044 	addi	r5,r5,1
   26050:	0025bb00 	call	25bb0 <_Balloc>
   26054:	8415883a 	add	r10,r16,r16
   26058:	12c00504 	addi	r11,r2,20
   2605c:	5295883a 	add	r10,r10,r10
   26060:	5a95883a 	add	r10,r11,r10
   26064:	5807883a 	mov	r3,r11
   26068:	5a80032e 	bgeu	r11,r10,26078 <__multiply+0x80>
   2606c:	18000015 	stw	zero,0(r3)
   26070:	18c00104 	addi	r3,r3,4
   26074:	1abffd36 	bltu	r3,r10,2606c <__multiply+0x74>
   26078:	9ce7883a 	add	r19,r19,r19
   2607c:	94a5883a 	add	r18,r18,r18
   26080:	89800504 	addi	r6,r17,20
   26084:	9ce7883a 	add	r19,r19,r19
   26088:	a3400504 	addi	r13,r20,20
   2608c:	94a5883a 	add	r18,r18,r18
   26090:	34d9883a 	add	r12,r6,r19
   26094:	6c93883a 	add	r9,r13,r18
   26098:	3300422e 	bgeu	r6,r12,261a4 <__multiply+0x1ac>
   2609c:	37c00017 	ldw	ra,0(r6)
   260a0:	fbffffcc 	andi	r15,ra,65535
   260a4:	78001b26 	beq	r15,zero,26114 <__multiply+0x11c>
   260a8:	5811883a 	mov	r8,r11
   260ac:	681d883a 	mov	r14,r13
   260b0:	000f883a 	mov	r7,zero
   260b4:	71000017 	ldw	r4,0(r14)
   260b8:	40c00017 	ldw	r3,0(r8)
   260bc:	73800104 	addi	r14,r14,4
   260c0:	217fffcc 	andi	r5,r4,65535
   260c4:	2bcb383a 	mul	r5,r5,r15
   260c8:	2008d43a 	srli	r4,r4,16
   260cc:	1c7fffcc 	andi	r17,r3,65535
   260d0:	2c4b883a 	add	r5,r5,r17
   260d4:	29cb883a 	add	r5,r5,r7
   260d8:	23c9383a 	mul	r4,r4,r15
   260dc:	1806d43a 	srli	r3,r3,16
   260e0:	280ed43a 	srli	r7,r5,16
   260e4:	297fffcc 	andi	r5,r5,65535
   260e8:	20c7883a 	add	r3,r4,r3
   260ec:	19c7883a 	add	r3,r3,r7
   260f0:	1808943a 	slli	r4,r3,16
   260f4:	4023883a 	mov	r17,r8
   260f8:	180ed43a 	srli	r7,r3,16
   260fc:	214ab03a 	or	r5,r4,r5
   26100:	41400015 	stw	r5,0(r8)
   26104:	42000104 	addi	r8,r8,4
   26108:	727fea36 	bltu	r14,r9,260b4 <__multiply+0xbc>
   2610c:	89c00115 	stw	r7,4(r17)
   26110:	37c00017 	ldw	ra,0(r6)
   26114:	f83ed43a 	srli	ra,ra,16
   26118:	f8001f26 	beq	ra,zero,26198 <__multiply+0x1a0>
   2611c:	58c00017 	ldw	r3,0(r11)
   26120:	681d883a 	mov	r14,r13
   26124:	581f883a 	mov	r15,r11
   26128:	1811883a 	mov	r8,r3
   2612c:	5825883a 	mov	r18,r11
   26130:	000f883a 	mov	r7,zero
   26134:	00000106 	br	2613c <__multiply+0x144>
   26138:	8825883a 	mov	r18,r17
   2613c:	7140000b 	ldhu	r5,0(r14)
   26140:	4010d43a 	srli	r8,r8,16
   26144:	193fffcc 	andi	r4,r3,65535
   26148:	2fcb383a 	mul	r5,r5,ra
   2614c:	7bc00104 	addi	r15,r15,4
   26150:	73800104 	addi	r14,r14,4
   26154:	2a0b883a 	add	r5,r5,r8
   26158:	29cb883a 	add	r5,r5,r7
   2615c:	2806943a 	slli	r3,r5,16
   26160:	94400104 	addi	r17,r18,4
   26164:	280ad43a 	srli	r5,r5,16
   26168:	1908b03a 	or	r4,r3,r4
   2616c:	793fff15 	stw	r4,-4(r15)
   26170:	70ffff17 	ldw	r3,-4(r14)
   26174:	8a000017 	ldw	r8,0(r17)
   26178:	1806d43a 	srli	r3,r3,16
   2617c:	413fffcc 	andi	r4,r8,65535
   26180:	1fc7383a 	mul	r3,r3,ra
   26184:	1907883a 	add	r3,r3,r4
   26188:	1947883a 	add	r3,r3,r5
   2618c:	180ed43a 	srli	r7,r3,16
   26190:	727fe936 	bltu	r14,r9,26138 <__multiply+0x140>
   26194:	90c00115 	stw	r3,4(r18)
   26198:	31800104 	addi	r6,r6,4
   2619c:	5ac00104 	addi	r11,r11,4
   261a0:	333fbe36 	bltu	r6,r12,2609c <__multiply+0xa4>
   261a4:	0400090e 	bge	zero,r16,261cc <__multiply+0x1d4>
   261a8:	50ffff17 	ldw	r3,-4(r10)
   261ac:	52bfff04 	addi	r10,r10,-4
   261b0:	18000326 	beq	r3,zero,261c0 <__multiply+0x1c8>
   261b4:	00000506 	br	261cc <__multiply+0x1d4>
   261b8:	50c00017 	ldw	r3,0(r10)
   261bc:	1800031e 	bne	r3,zero,261cc <__multiply+0x1d4>
   261c0:	843fffc4 	addi	r16,r16,-1
   261c4:	52bfff04 	addi	r10,r10,-4
   261c8:	803ffb1e 	bne	r16,zero,261b8 <__multiply+0x1c0>
   261cc:	14000415 	stw	r16,16(r2)
   261d0:	dfc00517 	ldw	ra,20(sp)
   261d4:	dd000417 	ldw	r20,16(sp)
   261d8:	dcc00317 	ldw	r19,12(sp)
   261dc:	dc800217 	ldw	r18,8(sp)
   261e0:	dc400117 	ldw	r17,4(sp)
   261e4:	dc000017 	ldw	r16,0(sp)
   261e8:	dec00604 	addi	sp,sp,24
   261ec:	f800283a 	ret

000261f0 <__pow5mult>:
   261f0:	defffa04 	addi	sp,sp,-24
   261f4:	dcc00315 	stw	r19,12(sp)
   261f8:	dc000015 	stw	r16,0(sp)
   261fc:	dfc00515 	stw	ra,20(sp)
   26200:	dd000415 	stw	r20,16(sp)
   26204:	dc800215 	stw	r18,8(sp)
   26208:	dc400115 	stw	r17,4(sp)
   2620c:	308000cc 	andi	r2,r6,3
   26210:	3021883a 	mov	r16,r6
   26214:	2027883a 	mov	r19,r4
   26218:	10002f1e 	bne	r2,zero,262d8 <__pow5mult+0xe8>
   2621c:	2825883a 	mov	r18,r5
   26220:	8021d0ba 	srai	r16,r16,2
   26224:	80001a26 	beq	r16,zero,26290 <__pow5mult+0xa0>
   26228:	9c401217 	ldw	r17,72(r19)
   2622c:	8800061e 	bne	r17,zero,26248 <__pow5mult+0x58>
   26230:	00003406 	br	26304 <__pow5mult+0x114>
   26234:	8021d07a 	srai	r16,r16,1
   26238:	80001526 	beq	r16,zero,26290 <__pow5mult+0xa0>
   2623c:	88800017 	ldw	r2,0(r17)
   26240:	10001c26 	beq	r2,zero,262b4 <__pow5mult+0xc4>
   26244:	1023883a 	mov	r17,r2
   26248:	8080004c 	andi	r2,r16,1
   2624c:	103ff926 	beq	r2,zero,26234 <__pow5mult+0x44>
   26250:	880d883a 	mov	r6,r17
   26254:	900b883a 	mov	r5,r18
   26258:	9809883a 	mov	r4,r19
   2625c:	0025ff80 	call	25ff8 <__multiply>
   26260:	90001b26 	beq	r18,zero,262d0 <__pow5mult+0xe0>
   26264:	91000117 	ldw	r4,4(r18)
   26268:	98c01317 	ldw	r3,76(r19)
   2626c:	8021d07a 	srai	r16,r16,1
   26270:	2109883a 	add	r4,r4,r4
   26274:	2109883a 	add	r4,r4,r4
   26278:	1907883a 	add	r3,r3,r4
   2627c:	19000017 	ldw	r4,0(r3)
   26280:	91000015 	stw	r4,0(r18)
   26284:	1c800015 	stw	r18,0(r3)
   26288:	1025883a 	mov	r18,r2
   2628c:	803feb1e 	bne	r16,zero,2623c <__pow5mult+0x4c>
   26290:	9005883a 	mov	r2,r18
   26294:	dfc00517 	ldw	ra,20(sp)
   26298:	dd000417 	ldw	r20,16(sp)
   2629c:	dcc00317 	ldw	r19,12(sp)
   262a0:	dc800217 	ldw	r18,8(sp)
   262a4:	dc400117 	ldw	r17,4(sp)
   262a8:	dc000017 	ldw	r16,0(sp)
   262ac:	dec00604 	addi	sp,sp,24
   262b0:	f800283a 	ret
   262b4:	880d883a 	mov	r6,r17
   262b8:	880b883a 	mov	r5,r17
   262bc:	9809883a 	mov	r4,r19
   262c0:	0025ff80 	call	25ff8 <__multiply>
   262c4:	88800015 	stw	r2,0(r17)
   262c8:	10000015 	stw	zero,0(r2)
   262cc:	003fdd06 	br	26244 <__pow5mult+0x54>
   262d0:	1025883a 	mov	r18,r2
   262d4:	003fd706 	br	26234 <__pow5mult+0x44>
   262d8:	10bfffc4 	addi	r2,r2,-1
   262dc:	1085883a 	add	r2,r2,r2
   262e0:	00c00034 	movhi	r3,0
   262e4:	18c02104 	addi	r3,r3,132
   262e8:	1085883a 	add	r2,r2,r2
   262ec:	1885883a 	add	r2,r3,r2
   262f0:	11800017 	ldw	r6,0(r2)
   262f4:	000f883a 	mov	r7,zero
   262f8:	0025c800 	call	25c80 <__multadd>
   262fc:	1025883a 	mov	r18,r2
   26300:	003fc706 	br	26220 <__pow5mult+0x30>
   26304:	05000044 	movi	r20,1
   26308:	a00b883a 	mov	r5,r20
   2630c:	9809883a 	mov	r4,r19
   26310:	0025bb00 	call	25bb0 <_Balloc>
   26314:	1023883a 	mov	r17,r2
   26318:	00809c44 	movi	r2,625
   2631c:	88800515 	stw	r2,20(r17)
   26320:	8d000415 	stw	r20,16(r17)
   26324:	9c401215 	stw	r17,72(r19)
   26328:	88000015 	stw	zero,0(r17)
   2632c:	003fc606 	br	26248 <__pow5mult+0x58>

00026330 <__lshift>:
   26330:	defff904 	addi	sp,sp,-28
   26334:	dd400515 	stw	r21,20(sp)
   26338:	dcc00315 	stw	r19,12(sp)
   2633c:	302bd17a 	srai	r21,r6,5
   26340:	2cc00417 	ldw	r19,16(r5)
   26344:	28800217 	ldw	r2,8(r5)
   26348:	dd000415 	stw	r20,16(sp)
   2634c:	ace7883a 	add	r19,r21,r19
   26350:	dc800215 	stw	r18,8(sp)
   26354:	dc400115 	stw	r17,4(sp)
   26358:	dc000015 	stw	r16,0(sp)
   2635c:	dfc00615 	stw	ra,24(sp)
   26360:	9c000044 	addi	r16,r19,1
   26364:	2823883a 	mov	r17,r5
   26368:	3029883a 	mov	r20,r6
   2636c:	2025883a 	mov	r18,r4
   26370:	29400117 	ldw	r5,4(r5)
   26374:	1400030e 	bge	r2,r16,26384 <__lshift+0x54>
   26378:	1085883a 	add	r2,r2,r2
   2637c:	29400044 	addi	r5,r5,1
   26380:	143ffd16 	blt	r2,r16,26378 <__lshift+0x48>
   26384:	9009883a 	mov	r4,r18
   26388:	0025bb00 	call	25bb0 <_Balloc>
   2638c:	10c00504 	addi	r3,r2,20
   26390:	0540070e 	bge	zero,r21,263b0 <__lshift+0x80>
   26394:	ad6b883a 	add	r21,r21,r21
   26398:	ad6b883a 	add	r21,r21,r21
   2639c:	1809883a 	mov	r4,r3
   263a0:	1d47883a 	add	r3,r3,r21
   263a4:	20000015 	stw	zero,0(r4)
   263a8:	21000104 	addi	r4,r4,4
   263ac:	193ffd1e 	bne	r3,r4,263a4 <__lshift+0x74>
   263b0:	8a000417 	ldw	r8,16(r17)
   263b4:	89000504 	addi	r4,r17,20
   263b8:	a18007cc 	andi	r6,r20,31
   263bc:	4211883a 	add	r8,r8,r8
   263c0:	4211883a 	add	r8,r8,r8
   263c4:	2211883a 	add	r8,r4,r8
   263c8:	30002326 	beq	r6,zero,26458 <__lshift+0x128>
   263cc:	02400804 	movi	r9,32
   263d0:	4993c83a 	sub	r9,r9,r6
   263d4:	000b883a 	mov	r5,zero
   263d8:	21c00017 	ldw	r7,0(r4)
   263dc:	1815883a 	mov	r10,r3
   263e0:	18c00104 	addi	r3,r3,4
   263e4:	398e983a 	sll	r7,r7,r6
   263e8:	21000104 	addi	r4,r4,4
   263ec:	394ab03a 	or	r5,r7,r5
   263f0:	197fff15 	stw	r5,-4(r3)
   263f4:	217fff17 	ldw	r5,-4(r4)
   263f8:	2a4ad83a 	srl	r5,r5,r9
   263fc:	223ff636 	bltu	r4,r8,263d8 <__lshift+0xa8>
   26400:	51400115 	stw	r5,4(r10)
   26404:	28001a1e 	bne	r5,zero,26470 <__lshift+0x140>
   26408:	843fffc4 	addi	r16,r16,-1
   2640c:	14000415 	stw	r16,16(r2)
   26410:	88000826 	beq	r17,zero,26434 <__lshift+0x104>
   26414:	89000117 	ldw	r4,4(r17)
   26418:	90c01317 	ldw	r3,76(r18)
   2641c:	2109883a 	add	r4,r4,r4
   26420:	2109883a 	add	r4,r4,r4
   26424:	1907883a 	add	r3,r3,r4
   26428:	19000017 	ldw	r4,0(r3)
   2642c:	89000015 	stw	r4,0(r17)
   26430:	1c400015 	stw	r17,0(r3)
   26434:	dfc00617 	ldw	ra,24(sp)
   26438:	dd400517 	ldw	r21,20(sp)
   2643c:	dd000417 	ldw	r20,16(sp)
   26440:	dcc00317 	ldw	r19,12(sp)
   26444:	dc800217 	ldw	r18,8(sp)
   26448:	dc400117 	ldw	r17,4(sp)
   2644c:	dc000017 	ldw	r16,0(sp)
   26450:	dec00704 	addi	sp,sp,28
   26454:	f800283a 	ret
   26458:	21400017 	ldw	r5,0(r4)
   2645c:	18c00104 	addi	r3,r3,4
   26460:	21000104 	addi	r4,r4,4
   26464:	197fff15 	stw	r5,-4(r3)
   26468:	223ffb36 	bltu	r4,r8,26458 <__lshift+0x128>
   2646c:	003fe606 	br	26408 <__lshift+0xd8>
   26470:	9c000084 	addi	r16,r19,2
   26474:	003fe406 	br	26408 <__lshift+0xd8>

00026478 <__mcmp>:
   26478:	20800417 	ldw	r2,16(r4)
   2647c:	28c00417 	ldw	r3,16(r5)
   26480:	10c5c83a 	sub	r2,r2,r3
   26484:	1000111e 	bne	r2,zero,264cc <__mcmp+0x54>
   26488:	18c7883a 	add	r3,r3,r3
   2648c:	18c7883a 	add	r3,r3,r3
   26490:	21000504 	addi	r4,r4,20
   26494:	29400504 	addi	r5,r5,20
   26498:	20c5883a 	add	r2,r4,r3
   2649c:	28cb883a 	add	r5,r5,r3
   264a0:	00000106 	br	264a8 <__mcmp+0x30>
   264a4:	20800a2e 	bgeu	r4,r2,264d0 <__mcmp+0x58>
   264a8:	10bfff04 	addi	r2,r2,-4
   264ac:	297fff04 	addi	r5,r5,-4
   264b0:	11800017 	ldw	r6,0(r2)
   264b4:	28c00017 	ldw	r3,0(r5)
   264b8:	30fffa26 	beq	r6,r3,264a4 <__mcmp+0x2c>
   264bc:	30c00236 	bltu	r6,r3,264c8 <__mcmp+0x50>
   264c0:	00800044 	movi	r2,1
   264c4:	f800283a 	ret
   264c8:	00bfffc4 	movi	r2,-1
   264cc:	f800283a 	ret
   264d0:	0005883a 	mov	r2,zero
   264d4:	f800283a 	ret

000264d8 <__mdiff>:
   264d8:	28c00417 	ldw	r3,16(r5)
   264dc:	30800417 	ldw	r2,16(r6)
   264e0:	defffa04 	addi	sp,sp,-24
   264e4:	dcc00315 	stw	r19,12(sp)
   264e8:	dc800215 	stw	r18,8(sp)
   264ec:	dfc00515 	stw	ra,20(sp)
   264f0:	dd000415 	stw	r20,16(sp)
   264f4:	dc400115 	stw	r17,4(sp)
   264f8:	dc000015 	stw	r16,0(sp)
   264fc:	1887c83a 	sub	r3,r3,r2
   26500:	2825883a 	mov	r18,r5
   26504:	3027883a 	mov	r19,r6
   26508:	1800141e 	bne	r3,zero,2655c <__mdiff+0x84>
   2650c:	1085883a 	add	r2,r2,r2
   26510:	1085883a 	add	r2,r2,r2
   26514:	2a000504 	addi	r8,r5,20
   26518:	34000504 	addi	r16,r6,20
   2651c:	4087883a 	add	r3,r8,r2
   26520:	8085883a 	add	r2,r16,r2
   26524:	00000106 	br	2652c <__mdiff+0x54>
   26528:	40c0592e 	bgeu	r8,r3,26690 <__mdiff+0x1b8>
   2652c:	18ffff04 	addi	r3,r3,-4
   26530:	10bfff04 	addi	r2,r2,-4
   26534:	19c00017 	ldw	r7,0(r3)
   26538:	11400017 	ldw	r5,0(r2)
   2653c:	397ffa26 	beq	r7,r5,26528 <__mdiff+0x50>
   26540:	3940592e 	bgeu	r7,r5,266a8 <__mdiff+0x1d0>
   26544:	9005883a 	mov	r2,r18
   26548:	4023883a 	mov	r17,r8
   2654c:	9825883a 	mov	r18,r19
   26550:	05000044 	movi	r20,1
   26554:	1027883a 	mov	r19,r2
   26558:	00000406 	br	2656c <__mdiff+0x94>
   2655c:	18005616 	blt	r3,zero,266b8 <__mdiff+0x1e0>
   26560:	34400504 	addi	r17,r6,20
   26564:	2c000504 	addi	r16,r5,20
   26568:	0029883a 	mov	r20,zero
   2656c:	91400117 	ldw	r5,4(r18)
   26570:	0025bb00 	call	25bb0 <_Balloc>
   26574:	92400417 	ldw	r9,16(r18)
   26578:	9b000417 	ldw	r12,16(r19)
   2657c:	12c00504 	addi	r11,r2,20
   26580:	4a51883a 	add	r8,r9,r9
   26584:	6319883a 	add	r12,r12,r12
   26588:	4211883a 	add	r8,r8,r8
   2658c:	6319883a 	add	r12,r12,r12
   26590:	15000315 	stw	r20,12(r2)
   26594:	8211883a 	add	r8,r16,r8
   26598:	8b19883a 	add	r12,r17,r12
   2659c:	0007883a 	mov	r3,zero
   265a0:	81400017 	ldw	r5,0(r16)
   265a4:	89c00017 	ldw	r7,0(r17)
   265a8:	59800104 	addi	r6,r11,4
   265ac:	293fffcc 	andi	r4,r5,65535
   265b0:	20c7883a 	add	r3,r4,r3
   265b4:	393fffcc 	andi	r4,r7,65535
   265b8:	1909c83a 	sub	r4,r3,r4
   265bc:	280ad43a 	srli	r5,r5,16
   265c0:	380ed43a 	srli	r7,r7,16
   265c4:	2007d43a 	srai	r3,r4,16
   265c8:	213fffcc 	andi	r4,r4,65535
   265cc:	29cbc83a 	sub	r5,r5,r7
   265d0:	28c7883a 	add	r3,r5,r3
   265d4:	180a943a 	slli	r5,r3,16
   265d8:	8c400104 	addi	r17,r17,4
   265dc:	84000104 	addi	r16,r16,4
   265e0:	2908b03a 	or	r4,r5,r4
   265e4:	59000015 	stw	r4,0(r11)
   265e8:	1807d43a 	srai	r3,r3,16
   265ec:	3015883a 	mov	r10,r6
   265f0:	3017883a 	mov	r11,r6
   265f4:	8b3fea36 	bltu	r17,r12,265a0 <__mdiff+0xc8>
   265f8:	8200162e 	bgeu	r16,r8,26654 <__mdiff+0x17c>
   265fc:	8017883a 	mov	r11,r16
   26600:	59400017 	ldw	r5,0(r11)
   26604:	31800104 	addi	r6,r6,4
   26608:	5ac00104 	addi	r11,r11,4
   2660c:	293fffcc 	andi	r4,r5,65535
   26610:	20c7883a 	add	r3,r4,r3
   26614:	280ed43a 	srli	r7,r5,16
   26618:	180bd43a 	srai	r5,r3,16
   2661c:	193fffcc 	andi	r4,r3,65535
   26620:	3947883a 	add	r3,r7,r5
   26624:	180a943a 	slli	r5,r3,16
   26628:	1807d43a 	srai	r3,r3,16
   2662c:	2908b03a 	or	r4,r5,r4
   26630:	313fff15 	stw	r4,-4(r6)
   26634:	5a3ff236 	bltu	r11,r8,26600 <__mdiff+0x128>
   26638:	0406303a 	nor	r3,zero,r16
   2663c:	1a07883a 	add	r3,r3,r8
   26640:	1806d0ba 	srli	r3,r3,2
   26644:	18c00044 	addi	r3,r3,1
   26648:	18c7883a 	add	r3,r3,r3
   2664c:	18c7883a 	add	r3,r3,r3
   26650:	50d5883a 	add	r10,r10,r3
   26654:	50ffff04 	addi	r3,r10,-4
   26658:	2000041e 	bne	r4,zero,2666c <__mdiff+0x194>
   2665c:	18ffff04 	addi	r3,r3,-4
   26660:	19000017 	ldw	r4,0(r3)
   26664:	4a7fffc4 	addi	r9,r9,-1
   26668:	203ffc26 	beq	r4,zero,2665c <__mdiff+0x184>
   2666c:	12400415 	stw	r9,16(r2)
   26670:	dfc00517 	ldw	ra,20(sp)
   26674:	dd000417 	ldw	r20,16(sp)
   26678:	dcc00317 	ldw	r19,12(sp)
   2667c:	dc800217 	ldw	r18,8(sp)
   26680:	dc400117 	ldw	r17,4(sp)
   26684:	dc000017 	ldw	r16,0(sp)
   26688:	dec00604 	addi	sp,sp,24
   2668c:	f800283a 	ret
   26690:	000b883a 	mov	r5,zero
   26694:	0025bb00 	call	25bb0 <_Balloc>
   26698:	00c00044 	movi	r3,1
   2669c:	10c00415 	stw	r3,16(r2)
   266a0:	10000515 	stw	zero,20(r2)
   266a4:	003ff206 	br	26670 <__mdiff+0x198>
   266a8:	8023883a 	mov	r17,r16
   266ac:	0029883a 	mov	r20,zero
   266b0:	4021883a 	mov	r16,r8
   266b4:	003fad06 	br	2656c <__mdiff+0x94>
   266b8:	9005883a 	mov	r2,r18
   266bc:	94400504 	addi	r17,r18,20
   266c0:	9c000504 	addi	r16,r19,20
   266c4:	9825883a 	mov	r18,r19
   266c8:	05000044 	movi	r20,1
   266cc:	1027883a 	mov	r19,r2
   266d0:	003fa606 	br	2656c <__mdiff+0x94>

000266d4 <__ulp>:
   266d4:	295ffc2c 	andhi	r5,r5,32752
   266d8:	00bf3034 	movhi	r2,64704
   266dc:	2887883a 	add	r3,r5,r2
   266e0:	00c0020e 	bge	zero,r3,266ec <__ulp+0x18>
   266e4:	0005883a 	mov	r2,zero
   266e8:	f800283a 	ret
   266ec:	00c7c83a 	sub	r3,zero,r3
   266f0:	1807d53a 	srai	r3,r3,20
   266f4:	008004c4 	movi	r2,19
   266f8:	10c00b0e 	bge	r2,r3,26728 <__ulp+0x54>
   266fc:	18bffb04 	addi	r2,r3,-20
   26700:	01000784 	movi	r4,30
   26704:	0007883a 	mov	r3,zero
   26708:	20800516 	blt	r4,r2,26720 <__ulp+0x4c>
   2670c:	010007c4 	movi	r4,31
   26710:	2089c83a 	sub	r4,r4,r2
   26714:	00800044 	movi	r2,1
   26718:	1104983a 	sll	r2,r2,r4
   2671c:	f800283a 	ret
   26720:	00800044 	movi	r2,1
   26724:	f800283a 	ret
   26728:	01400234 	movhi	r5,8
   2672c:	28c7d83a 	sra	r3,r5,r3
   26730:	0005883a 	mov	r2,zero
   26734:	f800283a 	ret

00026738 <__b2d>:
   26738:	defffa04 	addi	sp,sp,-24
   2673c:	dc000015 	stw	r16,0(sp)
   26740:	24000417 	ldw	r16,16(r4)
   26744:	dc400115 	stw	r17,4(sp)
   26748:	24400504 	addi	r17,r4,20
   2674c:	8421883a 	add	r16,r16,r16
   26750:	8421883a 	add	r16,r16,r16
   26754:	8c21883a 	add	r16,r17,r16
   26758:	dc800215 	stw	r18,8(sp)
   2675c:	84bfff17 	ldw	r18,-4(r16)
   26760:	dd000415 	stw	r20,16(sp)
   26764:	dcc00315 	stw	r19,12(sp)
   26768:	9009883a 	mov	r4,r18
   2676c:	2829883a 	mov	r20,r5
   26770:	dfc00515 	stw	ra,20(sp)
   26774:	0025ea40 	call	25ea4 <__hi0bits>
   26778:	00c00804 	movi	r3,32
   2677c:	1889c83a 	sub	r4,r3,r2
   26780:	a1000015 	stw	r4,0(r20)
   26784:	01000284 	movi	r4,10
   26788:	84ffff04 	addi	r19,r16,-4
   2678c:	20801216 	blt	r4,r2,267d8 <__b2d+0xa0>
   26790:	018002c4 	movi	r6,11
   26794:	308dc83a 	sub	r6,r6,r2
   26798:	9186d83a 	srl	r3,r18,r6
   2679c:	18cffc34 	orhi	r3,r3,16368
   267a0:	8cc0212e 	bgeu	r17,r19,26828 <__b2d+0xf0>
   267a4:	813ffe17 	ldw	r4,-8(r16)
   267a8:	218cd83a 	srl	r6,r4,r6
   267ac:	10800544 	addi	r2,r2,21
   267b0:	9084983a 	sll	r2,r18,r2
   267b4:	1184b03a 	or	r2,r2,r6
   267b8:	dfc00517 	ldw	ra,20(sp)
   267bc:	dd000417 	ldw	r20,16(sp)
   267c0:	dcc00317 	ldw	r19,12(sp)
   267c4:	dc800217 	ldw	r18,8(sp)
   267c8:	dc400117 	ldw	r17,4(sp)
   267cc:	dc000017 	ldw	r16,0(sp)
   267d0:	dec00604 	addi	sp,sp,24
   267d4:	f800283a 	ret
   267d8:	8cc00f2e 	bgeu	r17,r19,26818 <__b2d+0xe0>
   267dc:	117ffd44 	addi	r5,r2,-11
   267e0:	80bffe17 	ldw	r2,-8(r16)
   267e4:	28000e26 	beq	r5,zero,26820 <__b2d+0xe8>
   267e8:	1949c83a 	sub	r4,r3,r5
   267ec:	9164983a 	sll	r18,r18,r5
   267f0:	1106d83a 	srl	r3,r2,r4
   267f4:	81bffe04 	addi	r6,r16,-8
   267f8:	948ffc34 	orhi	r18,r18,16368
   267fc:	90c6b03a 	or	r3,r18,r3
   26800:	89800e2e 	bgeu	r17,r6,2683c <__b2d+0x104>
   26804:	81bffd17 	ldw	r6,-12(r16)
   26808:	1144983a 	sll	r2,r2,r5
   2680c:	310ad83a 	srl	r5,r6,r4
   26810:	2884b03a 	or	r2,r5,r2
   26814:	003fe806 	br	267b8 <__b2d+0x80>
   26818:	10bffd44 	addi	r2,r2,-11
   2681c:	1000041e 	bne	r2,zero,26830 <__b2d+0xf8>
   26820:	90cffc34 	orhi	r3,r18,16368
   26824:	003fe406 	br	267b8 <__b2d+0x80>
   26828:	000d883a 	mov	r6,zero
   2682c:	003fdf06 	br	267ac <__b2d+0x74>
   26830:	90a4983a 	sll	r18,r18,r2
   26834:	0005883a 	mov	r2,zero
   26838:	003ff906 	br	26820 <__b2d+0xe8>
   2683c:	1144983a 	sll	r2,r2,r5
   26840:	003fdd06 	br	267b8 <__b2d+0x80>

00026844 <__d2b>:
   26844:	defff804 	addi	sp,sp,-32
   26848:	dc000215 	stw	r16,8(sp)
   2684c:	3021883a 	mov	r16,r6
   26850:	dc400315 	stw	r17,12(sp)
   26854:	8022907a 	slli	r17,r16,1
   26858:	dd000615 	stw	r20,24(sp)
   2685c:	2829883a 	mov	r20,r5
   26860:	01400044 	movi	r5,1
   26864:	dcc00515 	stw	r19,20(sp)
   26868:	dc800415 	stw	r18,16(sp)
   2686c:	dfc00715 	stw	ra,28(sp)
   26870:	3825883a 	mov	r18,r7
   26874:	8822d57a 	srli	r17,r17,21
   26878:	0025bb00 	call	25bb0 <_Balloc>
   2687c:	1027883a 	mov	r19,r2
   26880:	00800434 	movhi	r2,16
   26884:	10bfffc4 	addi	r2,r2,-1
   26888:	808c703a 	and	r6,r16,r2
   2688c:	88000126 	beq	r17,zero,26894 <__d2b+0x50>
   26890:	31800434 	orhi	r6,r6,16
   26894:	d9800015 	stw	r6,0(sp)
   26898:	a0002426 	beq	r20,zero,2692c <__d2b+0xe8>
   2689c:	d9000104 	addi	r4,sp,4
   268a0:	dd000115 	stw	r20,4(sp)
   268a4:	0025f0c0 	call	25f0c <__lo0bits>
   268a8:	d8c00017 	ldw	r3,0(sp)
   268ac:	10002f1e 	bne	r2,zero,2696c <__d2b+0x128>
   268b0:	d9000117 	ldw	r4,4(sp)
   268b4:	99000515 	stw	r4,20(r19)
   268b8:	1821003a 	cmpeq	r16,r3,zero
   268bc:	01000084 	movi	r4,2
   268c0:	2421c83a 	sub	r16,r4,r16
   268c4:	98c00615 	stw	r3,24(r19)
   268c8:	9c000415 	stw	r16,16(r19)
   268cc:	88001f1e 	bne	r17,zero,2694c <__d2b+0x108>
   268d0:	10bef384 	addi	r2,r2,-1074
   268d4:	90800015 	stw	r2,0(r18)
   268d8:	00900034 	movhi	r2,16384
   268dc:	10bfffc4 	addi	r2,r2,-1
   268e0:	8085883a 	add	r2,r16,r2
   268e4:	1085883a 	add	r2,r2,r2
   268e8:	1085883a 	add	r2,r2,r2
   268ec:	9885883a 	add	r2,r19,r2
   268f0:	11000517 	ldw	r4,20(r2)
   268f4:	8020917a 	slli	r16,r16,5
   268f8:	0025ea40 	call	25ea4 <__hi0bits>
   268fc:	d8c00817 	ldw	r3,32(sp)
   26900:	8085c83a 	sub	r2,r16,r2
   26904:	18800015 	stw	r2,0(r3)
   26908:	9805883a 	mov	r2,r19
   2690c:	dfc00717 	ldw	ra,28(sp)
   26910:	dd000617 	ldw	r20,24(sp)
   26914:	dcc00517 	ldw	r19,20(sp)
   26918:	dc800417 	ldw	r18,16(sp)
   2691c:	dc400317 	ldw	r17,12(sp)
   26920:	dc000217 	ldw	r16,8(sp)
   26924:	dec00804 	addi	sp,sp,32
   26928:	f800283a 	ret
   2692c:	d809883a 	mov	r4,sp
   26930:	0025f0c0 	call	25f0c <__lo0bits>
   26934:	d8c00017 	ldw	r3,0(sp)
   26938:	04000044 	movi	r16,1
   2693c:	9c000415 	stw	r16,16(r19)
   26940:	98c00515 	stw	r3,20(r19)
   26944:	10800804 	addi	r2,r2,32
   26948:	883fe126 	beq	r17,zero,268d0 <__d2b+0x8c>
   2694c:	00c00d44 	movi	r3,53
   26950:	8c7ef344 	addi	r17,r17,-1075
   26954:	88a3883a 	add	r17,r17,r2
   26958:	1885c83a 	sub	r2,r3,r2
   2695c:	d8c00817 	ldw	r3,32(sp)
   26960:	94400015 	stw	r17,0(r18)
   26964:	18800015 	stw	r2,0(r3)
   26968:	003fe706 	br	26908 <__d2b+0xc4>
   2696c:	01000804 	movi	r4,32
   26970:	2089c83a 	sub	r4,r4,r2
   26974:	1908983a 	sll	r4,r3,r4
   26978:	d9400117 	ldw	r5,4(sp)
   2697c:	1886d83a 	srl	r3,r3,r2
   26980:	2148b03a 	or	r4,r4,r5
   26984:	99000515 	stw	r4,20(r19)
   26988:	d8c00015 	stw	r3,0(sp)
   2698c:	003fca06 	br	268b8 <__d2b+0x74>

00026990 <__ratio>:
   26990:	defff904 	addi	sp,sp,-28
   26994:	dc400315 	stw	r17,12(sp)
   26998:	2823883a 	mov	r17,r5
   2699c:	d9400104 	addi	r5,sp,4
   269a0:	dfc00615 	stw	ra,24(sp)
   269a4:	dcc00515 	stw	r19,20(sp)
   269a8:	dc800415 	stw	r18,16(sp)
   269ac:	2027883a 	mov	r19,r4
   269b0:	dc000215 	stw	r16,8(sp)
   269b4:	00267380 	call	26738 <__b2d>
   269b8:	d80b883a 	mov	r5,sp
   269bc:	8809883a 	mov	r4,r17
   269c0:	1025883a 	mov	r18,r2
   269c4:	1821883a 	mov	r16,r3
   269c8:	00267380 	call	26738 <__b2d>
   269cc:	8a000417 	ldw	r8,16(r17)
   269d0:	99000417 	ldw	r4,16(r19)
   269d4:	d9400117 	ldw	r5,4(sp)
   269d8:	2209c83a 	sub	r4,r4,r8
   269dc:	2010917a 	slli	r8,r4,5
   269e0:	d9000017 	ldw	r4,0(sp)
   269e4:	2909c83a 	sub	r4,r5,r4
   269e8:	4109883a 	add	r4,r8,r4
   269ec:	01000e0e 	bge	zero,r4,26a28 <__ratio+0x98>
   269f0:	2008953a 	slli	r4,r4,20
   269f4:	2421883a 	add	r16,r4,r16
   269f8:	100d883a 	mov	r6,r2
   269fc:	180f883a 	mov	r7,r3
   26a00:	9009883a 	mov	r4,r18
   26a04:	800b883a 	mov	r5,r16
   26a08:	002af2c0 	call	2af2c <__divdf3>
   26a0c:	dfc00617 	ldw	ra,24(sp)
   26a10:	dcc00517 	ldw	r19,20(sp)
   26a14:	dc800417 	ldw	r18,16(sp)
   26a18:	dc400317 	ldw	r17,12(sp)
   26a1c:	dc000217 	ldw	r16,8(sp)
   26a20:	dec00704 	addi	sp,sp,28
   26a24:	f800283a 	ret
   26a28:	2008953a 	slli	r4,r4,20
   26a2c:	1907c83a 	sub	r3,r3,r4
   26a30:	003ff106 	br	269f8 <__ratio+0x68>

00026a34 <_mprec_log10>:
   26a34:	defffe04 	addi	sp,sp,-8
   26a38:	dc000015 	stw	r16,0(sp)
   26a3c:	dfc00115 	stw	ra,4(sp)
   26a40:	008005c4 	movi	r2,23
   26a44:	2021883a 	mov	r16,r4
   26a48:	11000d0e 	bge	r2,r4,26a80 <_mprec_log10+0x4c>
   26a4c:	0005883a 	mov	r2,zero
   26a50:	00cffc34 	movhi	r3,16368
   26a54:	843fffc4 	addi	r16,r16,-1
   26a58:	000d883a 	mov	r6,zero
   26a5c:	01d00934 	movhi	r7,16420
   26a60:	1009883a 	mov	r4,r2
   26a64:	180b883a 	mov	r5,r3
   26a68:	002ba6c0 	call	2ba6c <__muldf3>
   26a6c:	803ff91e 	bne	r16,zero,26a54 <_mprec_log10+0x20>
   26a70:	dfc00117 	ldw	ra,4(sp)
   26a74:	dc000017 	ldw	r16,0(sp)
   26a78:	dec00204 	addi	sp,sp,8
   26a7c:	f800283a 	ret
   26a80:	202090fa 	slli	r16,r4,3
   26a84:	00800034 	movhi	r2,0
   26a88:	10803804 	addi	r2,r2,224
   26a8c:	1421883a 	add	r16,r2,r16
   26a90:	80800017 	ldw	r2,0(r16)
   26a94:	80c00117 	ldw	r3,4(r16)
   26a98:	dfc00117 	ldw	ra,4(sp)
   26a9c:	dc000017 	ldw	r16,0(sp)
   26aa0:	dec00204 	addi	sp,sp,8
   26aa4:	f800283a 	ret

00026aa8 <__copybits>:
   26aa8:	297fffc4 	addi	r5,r5,-1
   26aac:	280fd17a 	srai	r7,r5,5
   26ab0:	30c00417 	ldw	r3,16(r6)
   26ab4:	30800504 	addi	r2,r6,20
   26ab8:	39c00044 	addi	r7,r7,1
   26abc:	18c7883a 	add	r3,r3,r3
   26ac0:	39cf883a 	add	r7,r7,r7
   26ac4:	18c7883a 	add	r3,r3,r3
   26ac8:	39cf883a 	add	r7,r7,r7
   26acc:	10c7883a 	add	r3,r2,r3
   26ad0:	21cf883a 	add	r7,r4,r7
   26ad4:	10c00d2e 	bgeu	r2,r3,26b0c <__copybits+0x64>
   26ad8:	200b883a 	mov	r5,r4
   26adc:	12000017 	ldw	r8,0(r2)
   26ae0:	29400104 	addi	r5,r5,4
   26ae4:	10800104 	addi	r2,r2,4
   26ae8:	2a3fff15 	stw	r8,-4(r5)
   26aec:	10fffb36 	bltu	r2,r3,26adc <__copybits+0x34>
   26af0:	1985c83a 	sub	r2,r3,r6
   26af4:	10bffac4 	addi	r2,r2,-21
   26af8:	1004d0ba 	srli	r2,r2,2
   26afc:	10800044 	addi	r2,r2,1
   26b00:	1085883a 	add	r2,r2,r2
   26b04:	1085883a 	add	r2,r2,r2
   26b08:	2089883a 	add	r4,r4,r2
   26b0c:	21c0032e 	bgeu	r4,r7,26b1c <__copybits+0x74>
   26b10:	20000015 	stw	zero,0(r4)
   26b14:	21000104 	addi	r4,r4,4
   26b18:	21fffd36 	bltu	r4,r7,26b10 <__copybits+0x68>
   26b1c:	f800283a 	ret

00026b20 <__any_on>:
   26b20:	20c00417 	ldw	r3,16(r4)
   26b24:	2805d17a 	srai	r2,r5,5
   26b28:	21000504 	addi	r4,r4,20
   26b2c:	18800d0e 	bge	r3,r2,26b64 <__any_on+0x44>
   26b30:	18c7883a 	add	r3,r3,r3
   26b34:	18c7883a 	add	r3,r3,r3
   26b38:	20c7883a 	add	r3,r4,r3
   26b3c:	20c0192e 	bgeu	r4,r3,26ba4 <__any_on+0x84>
   26b40:	18bfff17 	ldw	r2,-4(r3)
   26b44:	18ffff04 	addi	r3,r3,-4
   26b48:	1000041e 	bne	r2,zero,26b5c <__any_on+0x3c>
   26b4c:	20c0142e 	bgeu	r4,r3,26ba0 <__any_on+0x80>
   26b50:	18ffff04 	addi	r3,r3,-4
   26b54:	19400017 	ldw	r5,0(r3)
   26b58:	283ffc26 	beq	r5,zero,26b4c <__any_on+0x2c>
   26b5c:	00800044 	movi	r2,1
   26b60:	f800283a 	ret
   26b64:	10c00a0e 	bge	r2,r3,26b90 <__any_on+0x70>
   26b68:	1085883a 	add	r2,r2,r2
   26b6c:	1085883a 	add	r2,r2,r2
   26b70:	294007cc 	andi	r5,r5,31
   26b74:	2087883a 	add	r3,r4,r2
   26b78:	283ff026 	beq	r5,zero,26b3c <__any_on+0x1c>
   26b7c:	19800017 	ldw	r6,0(r3)
   26b80:	3144d83a 	srl	r2,r6,r5
   26b84:	114a983a 	sll	r5,r2,r5
   26b88:	317ff41e 	bne	r6,r5,26b5c <__any_on+0x3c>
   26b8c:	003feb06 	br	26b3c <__any_on+0x1c>
   26b90:	1085883a 	add	r2,r2,r2
   26b94:	1085883a 	add	r2,r2,r2
   26b98:	2087883a 	add	r3,r4,r2
   26b9c:	003fe706 	br	26b3c <__any_on+0x1c>
   26ba0:	f800283a 	ret
   26ba4:	0005883a 	mov	r2,zero
   26ba8:	f800283a 	ret

00026bac <__fpclassifyd>:
   26bac:	00a00034 	movhi	r2,32768
   26bb0:	10bfffc4 	addi	r2,r2,-1
   26bb4:	2884703a 	and	r2,r5,r2
   26bb8:	10000726 	beq	r2,zero,26bd8 <__fpclassifyd+0x2c>
   26bbc:	00fffc34 	movhi	r3,65520
   26bc0:	019ff834 	movhi	r6,32736
   26bc4:	28c7883a 	add	r3,r5,r3
   26bc8:	31bfffc4 	addi	r6,r6,-1
   26bcc:	30c00536 	bltu	r6,r3,26be4 <__fpclassifyd+0x38>
   26bd0:	00800104 	movi	r2,4
   26bd4:	f800283a 	ret
   26bd8:	2000021e 	bne	r4,zero,26be4 <__fpclassifyd+0x38>
   26bdc:	00800084 	movi	r2,2
   26be0:	f800283a 	ret
   26be4:	00dffc34 	movhi	r3,32752
   26be8:	019ff834 	movhi	r6,32736
   26bec:	28cb883a 	add	r5,r5,r3
   26bf0:	31bfffc4 	addi	r6,r6,-1
   26bf4:	317ff62e 	bgeu	r6,r5,26bd0 <__fpclassifyd+0x24>
   26bf8:	01400434 	movhi	r5,16
   26bfc:	297fffc4 	addi	r5,r5,-1
   26c00:	28800236 	bltu	r5,r2,26c0c <__fpclassifyd+0x60>
   26c04:	008000c4 	movi	r2,3
   26c08:	f800283a 	ret
   26c0c:	10c00226 	beq	r2,r3,26c18 <__fpclassifyd+0x6c>
   26c10:	0005883a 	mov	r2,zero
   26c14:	f800283a 	ret
   26c18:	2005003a 	cmpeq	r2,r4,zero
   26c1c:	f800283a 	ret

00026c20 <_sbrk_r>:
   26c20:	defffd04 	addi	sp,sp,-12
   26c24:	dc000015 	stw	r16,0(sp)
   26c28:	04000034 	movhi	r16,0
   26c2c:	dc400115 	stw	r17,4(sp)
   26c30:	84078204 	addi	r16,r16,7688
   26c34:	2023883a 	mov	r17,r4
   26c38:	2809883a 	mov	r4,r5
   26c3c:	dfc00215 	stw	ra,8(sp)
   26c40:	80000015 	stw	zero,0(r16)
   26c44:	002d5c80 	call	2d5c8 <sbrk>
   26c48:	00ffffc4 	movi	r3,-1
   26c4c:	10c00526 	beq	r2,r3,26c64 <_sbrk_r+0x44>
   26c50:	dfc00217 	ldw	ra,8(sp)
   26c54:	dc400117 	ldw	r17,4(sp)
   26c58:	dc000017 	ldw	r16,0(sp)
   26c5c:	dec00304 	addi	sp,sp,12
   26c60:	f800283a 	ret
   26c64:	80c00017 	ldw	r3,0(r16)
   26c68:	183ff926 	beq	r3,zero,26c50 <_sbrk_r+0x30>
   26c6c:	88c00015 	stw	r3,0(r17)
   26c70:	003ff706 	br	26c50 <_sbrk_r+0x30>

00026c74 <__sread>:
   26c74:	defffe04 	addi	sp,sp,-8
   26c78:	dc000015 	stw	r16,0(sp)
   26c7c:	2821883a 	mov	r16,r5
   26c80:	2940038f 	ldh	r5,14(r5)
   26c84:	dfc00115 	stw	ra,4(sp)
   26c88:	00291180 	call	29118 <_read_r>
   26c8c:	10000716 	blt	r2,zero,26cac <__sread+0x38>
   26c90:	80c01417 	ldw	r3,80(r16)
   26c94:	1887883a 	add	r3,r3,r2
   26c98:	80c01415 	stw	r3,80(r16)
   26c9c:	dfc00117 	ldw	ra,4(sp)
   26ca0:	dc000017 	ldw	r16,0(sp)
   26ca4:	dec00204 	addi	sp,sp,8
   26ca8:	f800283a 	ret
   26cac:	80c0030b 	ldhu	r3,12(r16)
   26cb0:	18fbffcc 	andi	r3,r3,61439
   26cb4:	80c0030d 	sth	r3,12(r16)
   26cb8:	dfc00117 	ldw	ra,4(sp)
   26cbc:	dc000017 	ldw	r16,0(sp)
   26cc0:	dec00204 	addi	sp,sp,8
   26cc4:	f800283a 	ret

00026cc8 <__seofread>:
   26cc8:	0005883a 	mov	r2,zero
   26ccc:	f800283a 	ret

00026cd0 <__swrite>:
   26cd0:	2880030b 	ldhu	r2,12(r5)
   26cd4:	defffb04 	addi	sp,sp,-20
   26cd8:	dcc00315 	stw	r19,12(sp)
   26cdc:	dc800215 	stw	r18,8(sp)
   26ce0:	dc400115 	stw	r17,4(sp)
   26ce4:	dc000015 	stw	r16,0(sp)
   26ce8:	dfc00415 	stw	ra,16(sp)
   26cec:	10c0400c 	andi	r3,r2,256
   26cf0:	2821883a 	mov	r16,r5
   26cf4:	2023883a 	mov	r17,r4
   26cf8:	3025883a 	mov	r18,r6
   26cfc:	3827883a 	mov	r19,r7
   26d00:	18000526 	beq	r3,zero,26d18 <__swrite+0x48>
   26d04:	2940038f 	ldh	r5,14(r5)
   26d08:	01c00084 	movi	r7,2
   26d0c:	000d883a 	mov	r6,zero
   26d10:	0028f5c0 	call	28f5c <_lseek_r>
   26d14:	8080030b 	ldhu	r2,12(r16)
   26d18:	8140038f 	ldh	r5,14(r16)
   26d1c:	10bbffcc 	andi	r2,r2,61439
   26d20:	980f883a 	mov	r7,r19
   26d24:	900d883a 	mov	r6,r18
   26d28:	8809883a 	mov	r4,r17
   26d2c:	8080030d 	sth	r2,12(r16)
   26d30:	dfc00417 	ldw	ra,16(sp)
   26d34:	dcc00317 	ldw	r19,12(sp)
   26d38:	dc800217 	ldw	r18,8(sp)
   26d3c:	dc400117 	ldw	r17,4(sp)
   26d40:	dc000017 	ldw	r16,0(sp)
   26d44:	dec00504 	addi	sp,sp,20
   26d48:	002856c1 	jmpi	2856c <_write_r>

00026d4c <__sseek>:
   26d4c:	defffe04 	addi	sp,sp,-8
   26d50:	dc000015 	stw	r16,0(sp)
   26d54:	2821883a 	mov	r16,r5
   26d58:	2940038f 	ldh	r5,14(r5)
   26d5c:	dfc00115 	stw	ra,4(sp)
   26d60:	0028f5c0 	call	28f5c <_lseek_r>
   26d64:	00ffffc4 	movi	r3,-1
   26d68:	10c00826 	beq	r2,r3,26d8c <__sseek+0x40>
   26d6c:	80c0030b 	ldhu	r3,12(r16)
   26d70:	80801415 	stw	r2,80(r16)
   26d74:	18c40014 	ori	r3,r3,4096
   26d78:	80c0030d 	sth	r3,12(r16)
   26d7c:	dfc00117 	ldw	ra,4(sp)
   26d80:	dc000017 	ldw	r16,0(sp)
   26d84:	dec00204 	addi	sp,sp,8
   26d88:	f800283a 	ret
   26d8c:	80c0030b 	ldhu	r3,12(r16)
   26d90:	18fbffcc 	andi	r3,r3,61439
   26d94:	80c0030d 	sth	r3,12(r16)
   26d98:	dfc00117 	ldw	ra,4(sp)
   26d9c:	dc000017 	ldw	r16,0(sp)
   26da0:	dec00204 	addi	sp,sp,8
   26da4:	f800283a 	ret

00026da8 <__sclose>:
   26da8:	2940038f 	ldh	r5,14(r5)
   26dac:	00285cc1 	jmpi	285cc <_close_r>

00026db0 <strcmp>:
   26db0:	2144b03a 	or	r2,r4,r5
   26db4:	108000cc 	andi	r2,r2,3
   26db8:	1000171e 	bne	r2,zero,26e18 <strcmp+0x68>
   26dbc:	20800017 	ldw	r2,0(r4)
   26dc0:	28c00017 	ldw	r3,0(r5)
   26dc4:	10c0141e 	bne	r2,r3,26e18 <strcmp+0x68>
   26dc8:	027fbff4 	movhi	r9,65279
   26dcc:	4a7fbfc4 	addi	r9,r9,-257
   26dd0:	0086303a 	nor	r3,zero,r2
   26dd4:	02202074 	movhi	r8,32897
   26dd8:	1245883a 	add	r2,r2,r9
   26ddc:	42202004 	addi	r8,r8,-32640
   26de0:	10c4703a 	and	r2,r2,r3
   26de4:	1204703a 	and	r2,r2,r8
   26de8:	10000226 	beq	r2,zero,26df4 <strcmp+0x44>
   26dec:	00002306 	br	26e7c <strcmp+0xcc>
   26df0:	1000221e 	bne	r2,zero,26e7c <strcmp+0xcc>
   26df4:	21000104 	addi	r4,r4,4
   26df8:	20c00017 	ldw	r3,0(r4)
   26dfc:	29400104 	addi	r5,r5,4
   26e00:	29800017 	ldw	r6,0(r5)
   26e04:	1a4f883a 	add	r7,r3,r9
   26e08:	00c4303a 	nor	r2,zero,r3
   26e0c:	3884703a 	and	r2,r7,r2
   26e10:	1204703a 	and	r2,r2,r8
   26e14:	19bff626 	beq	r3,r6,26df0 <strcmp+0x40>
   26e18:	20800003 	ldbu	r2,0(r4)
   26e1c:	10c03fcc 	andi	r3,r2,255
   26e20:	18c0201c 	xori	r3,r3,128
   26e24:	18ffe004 	addi	r3,r3,-128
   26e28:	18000c26 	beq	r3,zero,26e5c <strcmp+0xac>
   26e2c:	29800007 	ldb	r6,0(r5)
   26e30:	19800326 	beq	r3,r6,26e40 <strcmp+0x90>
   26e34:	00001306 	br	26e84 <strcmp+0xd4>
   26e38:	29800007 	ldb	r6,0(r5)
   26e3c:	11800b1e 	bne	r2,r6,26e6c <strcmp+0xbc>
   26e40:	21000044 	addi	r4,r4,1
   26e44:	20c00003 	ldbu	r3,0(r4)
   26e48:	29400044 	addi	r5,r5,1
   26e4c:	18803fcc 	andi	r2,r3,255
   26e50:	1080201c 	xori	r2,r2,128
   26e54:	10bfe004 	addi	r2,r2,-128
   26e58:	103ff71e 	bne	r2,zero,26e38 <strcmp+0x88>
   26e5c:	0007883a 	mov	r3,zero
   26e60:	28800003 	ldbu	r2,0(r5)
   26e64:	1885c83a 	sub	r2,r3,r2
   26e68:	f800283a 	ret
   26e6c:	28800003 	ldbu	r2,0(r5)
   26e70:	18c03fcc 	andi	r3,r3,255
   26e74:	1885c83a 	sub	r2,r3,r2
   26e78:	f800283a 	ret
   26e7c:	0005883a 	mov	r2,zero
   26e80:	f800283a 	ret
   26e84:	10c03fcc 	andi	r3,r2,255
   26e88:	003ff506 	br	26e60 <strcmp+0xb0>

00026e8c <strlen>:
   26e8c:	208000cc 	andi	r2,r4,3
   26e90:	10002026 	beq	r2,zero,26f14 <strlen+0x88>
   26e94:	20800007 	ldb	r2,0(r4)
   26e98:	10002026 	beq	r2,zero,26f1c <strlen+0x90>
   26e9c:	2005883a 	mov	r2,r4
   26ea0:	00000206 	br	26eac <strlen+0x20>
   26ea4:	10c00007 	ldb	r3,0(r2)
   26ea8:	18001826 	beq	r3,zero,26f0c <strlen+0x80>
   26eac:	10800044 	addi	r2,r2,1
   26eb0:	10c000cc 	andi	r3,r2,3
   26eb4:	183ffb1e 	bne	r3,zero,26ea4 <strlen+0x18>
   26eb8:	10c00017 	ldw	r3,0(r2)
   26ebc:	01ffbff4 	movhi	r7,65279
   26ec0:	39ffbfc4 	addi	r7,r7,-257
   26ec4:	00ca303a 	nor	r5,zero,r3
   26ec8:	01a02074 	movhi	r6,32897
   26ecc:	19c7883a 	add	r3,r3,r7
   26ed0:	31a02004 	addi	r6,r6,-32640
   26ed4:	1946703a 	and	r3,r3,r5
   26ed8:	1986703a 	and	r3,r3,r6
   26edc:	1800091e 	bne	r3,zero,26f04 <strlen+0x78>
   26ee0:	10800104 	addi	r2,r2,4
   26ee4:	10c00017 	ldw	r3,0(r2)
   26ee8:	19cb883a 	add	r5,r3,r7
   26eec:	00c6303a 	nor	r3,zero,r3
   26ef0:	28c6703a 	and	r3,r5,r3
   26ef4:	1986703a 	and	r3,r3,r6
   26ef8:	183ff926 	beq	r3,zero,26ee0 <strlen+0x54>
   26efc:	00000106 	br	26f04 <strlen+0x78>
   26f00:	10800044 	addi	r2,r2,1
   26f04:	10c00007 	ldb	r3,0(r2)
   26f08:	183ffd1e 	bne	r3,zero,26f00 <strlen+0x74>
   26f0c:	1105c83a 	sub	r2,r2,r4
   26f10:	f800283a 	ret
   26f14:	2005883a 	mov	r2,r4
   26f18:	003fe706 	br	26eb8 <strlen+0x2c>
   26f1c:	0005883a 	mov	r2,zero
   26f20:	f800283a 	ret

00026f24 <__sprint_r.part.0>:
   26f24:	28801917 	ldw	r2,100(r5)
   26f28:	defff604 	addi	sp,sp,-40
   26f2c:	dd400515 	stw	r21,20(sp)
   26f30:	dfc00915 	stw	ra,36(sp)
   26f34:	df000815 	stw	fp,32(sp)
   26f38:	ddc00715 	stw	r23,28(sp)
   26f3c:	dd800615 	stw	r22,24(sp)
   26f40:	dd000415 	stw	r20,16(sp)
   26f44:	dcc00315 	stw	r19,12(sp)
   26f48:	dc800215 	stw	r18,8(sp)
   26f4c:	dc400115 	stw	r17,4(sp)
   26f50:	dc000015 	stw	r16,0(sp)
   26f54:	1088000c 	andi	r2,r2,8192
   26f58:	302b883a 	mov	r21,r6
   26f5c:	10002e26 	beq	r2,zero,27018 <__sprint_r.part.0+0xf4>
   26f60:	30800217 	ldw	r2,8(r6)
   26f64:	35800017 	ldw	r22,0(r6)
   26f68:	10002926 	beq	r2,zero,27010 <__sprint_r.part.0+0xec>
   26f6c:	2827883a 	mov	r19,r5
   26f70:	2029883a 	mov	r20,r4
   26f74:	b5c00104 	addi	r23,r22,4
   26f78:	04bfffc4 	movi	r18,-1
   26f7c:	bc400017 	ldw	r17,0(r23)
   26f80:	b4000017 	ldw	r16,0(r22)
   26f84:	0039883a 	mov	fp,zero
   26f88:	8822d0ba 	srli	r17,r17,2
   26f8c:	8800031e 	bne	r17,zero,26f9c <__sprint_r.part.0+0x78>
   26f90:	00001806 	br	26ff4 <__sprint_r.part.0+0xd0>
   26f94:	84000104 	addi	r16,r16,4
   26f98:	8f001526 	beq	r17,fp,26ff0 <__sprint_r.part.0+0xcc>
   26f9c:	81400017 	ldw	r5,0(r16)
   26fa0:	980d883a 	mov	r6,r19
   26fa4:	a009883a 	mov	r4,r20
   26fa8:	002894c0 	call	2894c <_fputwc_r>
   26fac:	e7000044 	addi	fp,fp,1
   26fb0:	14bff81e 	bne	r2,r18,26f94 <__sprint_r.part.0+0x70>
   26fb4:	9005883a 	mov	r2,r18
   26fb8:	a8000215 	stw	zero,8(r21)
   26fbc:	a8000115 	stw	zero,4(r21)
   26fc0:	dfc00917 	ldw	ra,36(sp)
   26fc4:	df000817 	ldw	fp,32(sp)
   26fc8:	ddc00717 	ldw	r23,28(sp)
   26fcc:	dd800617 	ldw	r22,24(sp)
   26fd0:	dd400517 	ldw	r21,20(sp)
   26fd4:	dd000417 	ldw	r20,16(sp)
   26fd8:	dcc00317 	ldw	r19,12(sp)
   26fdc:	dc800217 	ldw	r18,8(sp)
   26fe0:	dc400117 	ldw	r17,4(sp)
   26fe4:	dc000017 	ldw	r16,0(sp)
   26fe8:	dec00a04 	addi	sp,sp,40
   26fec:	f800283a 	ret
   26ff0:	a8800217 	ldw	r2,8(r21)
   26ff4:	8c63883a 	add	r17,r17,r17
   26ff8:	8c63883a 	add	r17,r17,r17
   26ffc:	1445c83a 	sub	r2,r2,r17
   27000:	a8800215 	stw	r2,8(r21)
   27004:	b5800204 	addi	r22,r22,8
   27008:	bdc00204 	addi	r23,r23,8
   2700c:	103fdb1e 	bne	r2,zero,26f7c <__sprint_r.part.0+0x58>
   27010:	0005883a 	mov	r2,zero
   27014:	003fe806 	br	26fb8 <__sprint_r.part.0+0x94>
   27018:	0028a4c0 	call	28a4c <__sfvwrite_r>
   2701c:	003fe606 	br	26fb8 <__sprint_r.part.0+0x94>

00027020 <__sprint_r>:
   27020:	30c00217 	ldw	r3,8(r6)
   27024:	18000126 	beq	r3,zero,2702c <__sprint_r+0xc>
   27028:	0026f241 	jmpi	26f24 <__sprint_r.part.0>
   2702c:	30000115 	stw	zero,4(r6)
   27030:	0005883a 	mov	r2,zero
   27034:	f800283a 	ret

00027038 <___vfiprintf_internal_r>:
   27038:	deffc904 	addi	sp,sp,-220
   2703c:	df003515 	stw	fp,212(sp)
   27040:	dd003115 	stw	r20,196(sp)
   27044:	dfc03615 	stw	ra,216(sp)
   27048:	ddc03415 	stw	r23,208(sp)
   2704c:	dd803315 	stw	r22,204(sp)
   27050:	dd403215 	stw	r21,200(sp)
   27054:	dcc03015 	stw	r19,192(sp)
   27058:	dc802f15 	stw	r18,188(sp)
   2705c:	dc402e15 	stw	r17,184(sp)
   27060:	dc002d15 	stw	r16,180(sp)
   27064:	d9002015 	stw	r4,128(sp)
   27068:	d9c02215 	stw	r7,136(sp)
   2706c:	2829883a 	mov	r20,r5
   27070:	3039883a 	mov	fp,r6
   27074:	20000226 	beq	r4,zero,27080 <___vfiprintf_internal_r+0x48>
   27078:	20800e17 	ldw	r2,56(r4)
   2707c:	1000cf26 	beq	r2,zero,273bc <___vfiprintf_internal_r+0x384>
   27080:	a080030b 	ldhu	r2,12(r20)
   27084:	10c8000c 	andi	r3,r2,8192
   27088:	1800061e 	bne	r3,zero,270a4 <___vfiprintf_internal_r+0x6c>
   2708c:	a1001917 	ldw	r4,100(r20)
   27090:	00f7ffc4 	movi	r3,-8193
   27094:	10880014 	ori	r2,r2,8192
   27098:	20c6703a 	and	r3,r4,r3
   2709c:	a080030d 	sth	r2,12(r20)
   270a0:	a0c01915 	stw	r3,100(r20)
   270a4:	10c0020c 	andi	r3,r2,8
   270a8:	1800a926 	beq	r3,zero,27350 <___vfiprintf_internal_r+0x318>
   270ac:	a0c00417 	ldw	r3,16(r20)
   270b0:	1800a726 	beq	r3,zero,27350 <___vfiprintf_internal_r+0x318>
   270b4:	1080068c 	andi	r2,r2,26
   270b8:	00c00284 	movi	r3,10
   270bc:	10c0ac26 	beq	r2,r3,27370 <___vfiprintf_internal_r+0x338>
   270c0:	da801a04 	addi	r10,sp,104
   270c4:	da801e15 	stw	r10,120(sp)
   270c8:	d8801e17 	ldw	r2,120(sp)
   270cc:	da8019c4 	addi	r10,sp,103
   270d0:	05800034 	movhi	r22,0
   270d4:	05c00034 	movhi	r23,0
   270d8:	da801f15 	stw	r10,124(sp)
   270dc:	1295c83a 	sub	r10,r2,r10
   270e0:	b5806e04 	addi	r22,r22,440
   270e4:	bdc06a04 	addi	r23,r23,424
   270e8:	dec01a15 	stw	sp,104(sp)
   270ec:	d8001c15 	stw	zero,112(sp)
   270f0:	d8001b15 	stw	zero,108(sp)
   270f4:	d8002615 	stw	zero,152(sp)
   270f8:	d8002315 	stw	zero,140(sp)
   270fc:	da802715 	stw	r10,156(sp)
   27100:	d811883a 	mov	r8,sp
   27104:	dd002115 	stw	r20,132(sp)
   27108:	e021883a 	mov	r16,fp
   2710c:	80800007 	ldb	r2,0(r16)
   27110:	1003ea26 	beq	r2,zero,280bc <___vfiprintf_internal_r+0x1084>
   27114:	00c00944 	movi	r3,37
   27118:	8025883a 	mov	r18,r16
   2711c:	10c0021e 	bne	r2,r3,27128 <___vfiprintf_internal_r+0xf0>
   27120:	00001606 	br	2717c <___vfiprintf_internal_r+0x144>
   27124:	10c00326 	beq	r2,r3,27134 <___vfiprintf_internal_r+0xfc>
   27128:	94800044 	addi	r18,r18,1
   2712c:	90800007 	ldb	r2,0(r18)
   27130:	103ffc1e 	bne	r2,zero,27124 <___vfiprintf_internal_r+0xec>
   27134:	9423c83a 	sub	r17,r18,r16
   27138:	88001026 	beq	r17,zero,2717c <___vfiprintf_internal_r+0x144>
   2713c:	d8c01c17 	ldw	r3,112(sp)
   27140:	d8801b17 	ldw	r2,108(sp)
   27144:	44000015 	stw	r16,0(r8)
   27148:	88c7883a 	add	r3,r17,r3
   2714c:	10800044 	addi	r2,r2,1
   27150:	44400115 	stw	r17,4(r8)
   27154:	d8c01c15 	stw	r3,112(sp)
   27158:	d8801b15 	stw	r2,108(sp)
   2715c:	010001c4 	movi	r4,7
   27160:	2080760e 	bge	r4,r2,2733c <___vfiprintf_internal_r+0x304>
   27164:	1803821e 	bne	r3,zero,27f70 <___vfiprintf_internal_r+0xf38>
   27168:	da802317 	ldw	r10,140(sp)
   2716c:	d8001b15 	stw	zero,108(sp)
   27170:	d811883a 	mov	r8,sp
   27174:	5455883a 	add	r10,r10,r17
   27178:	da802315 	stw	r10,140(sp)
   2717c:	90800007 	ldb	r2,0(r18)
   27180:	10044626 	beq	r2,zero,2829c <___vfiprintf_internal_r+0x1264>
   27184:	90c00047 	ldb	r3,1(r18)
   27188:	94000044 	addi	r16,r18,1
   2718c:	d8001d85 	stb	zero,118(sp)
   27190:	0009883a 	mov	r4,zero
   27194:	000f883a 	mov	r7,zero
   27198:	027fffc4 	movi	r9,-1
   2719c:	0023883a 	mov	r17,zero
   271a0:	0029883a 	mov	r20,zero
   271a4:	01401604 	movi	r5,88
   271a8:	01800244 	movi	r6,9
   271ac:	03400a84 	movi	r13,42
   271b0:	03001b04 	movi	r12,108
   271b4:	84000044 	addi	r16,r16,1
   271b8:	18bff804 	addi	r2,r3,-32
   271bc:	28827336 	bltu	r5,r2,27b8c <___vfiprintf_internal_r+0xb54>
   271c0:	100490ba 	slli	r2,r2,2
   271c4:	028000b4 	movhi	r10,2
   271c8:	529c7604 	addi	r10,r10,29144
   271cc:	1285883a 	add	r2,r2,r10
   271d0:	10800017 	ldw	r2,0(r2)
   271d4:	1000683a 	jmp	r2
   271d8:	000278c0 	call	278c <__alt_heap_start+0x83c>
   271dc:	00027b8c 	andi	zero,zero,2542
   271e0:	00027b8c 	andi	zero,zero,2542
   271e4:	000278e0 	cmpeqi	zero,zero,2531
   271e8:	00027b8c 	andi	zero,zero,2542
   271ec:	00027b8c 	andi	zero,zero,2542
   271f0:	00027b8c 	andi	zero,zero,2542
   271f4:	00027b8c 	andi	zero,zero,2542
   271f8:	00027b8c 	andi	zero,zero,2542
   271fc:	00027b8c 	andi	zero,zero,2542
   27200:	00027ac8 	cmpgei	zero,zero,2539
   27204:	00027ae4 	muli	zero,zero,2539
   27208:	00027b8c 	andi	zero,zero,2542
   2720c:	000273cc 	andi	zero,zero,2511
   27210:	00027af4 	movhi	zero,2539
   27214:	00027b8c 	andi	zero,zero,2542
   27218:	000278ec 	andhi	zero,zero,2531
   2721c:	000278f8 	rdprs	zero,zero,2531
   27220:	000278f8 	rdprs	zero,zero,2531
   27224:	000278f8 	rdprs	zero,zero,2531
   27228:	000278f8 	rdprs	zero,zero,2531
   2722c:	000278f8 	rdprs	zero,zero,2531
   27230:	000278f8 	rdprs	zero,zero,2531
   27234:	000278f8 	rdprs	zero,zero,2531
   27238:	000278f8 	rdprs	zero,zero,2531
   2723c:	000278f8 	rdprs	zero,zero,2531
   27240:	00027b8c 	andi	zero,zero,2542
   27244:	00027b8c 	andi	zero,zero,2542
   27248:	00027b8c 	andi	zero,zero,2542
   2724c:	00027b8c 	andi	zero,zero,2542
   27250:	00027b8c 	andi	zero,zero,2542
   27254:	00027b8c 	andi	zero,zero,2542
   27258:	00027b8c 	andi	zero,zero,2542
   2725c:	00027b8c 	andi	zero,zero,2542
   27260:	00027b8c 	andi	zero,zero,2542
   27264:	00027b8c 	andi	zero,zero,2542
   27268:	00027924 	muli	zero,zero,2532
   2726c:	00027b8c 	andi	zero,zero,2542
   27270:	00027b8c 	andi	zero,zero,2542
   27274:	00027b8c 	andi	zero,zero,2542
   27278:	00027b8c 	andi	zero,zero,2542
   2727c:	00027b8c 	andi	zero,zero,2542
   27280:	00027b8c 	andi	zero,zero,2542
   27284:	00027b8c 	andi	zero,zero,2542
   27288:	00027b8c 	andi	zero,zero,2542
   2728c:	00027b8c 	andi	zero,zero,2542
   27290:	00027b8c 	andi	zero,zero,2542
   27294:	0002795c 	xori	zero,zero,2533
   27298:	00027b8c 	andi	zero,zero,2542
   2729c:	00027b8c 	andi	zero,zero,2542
   272a0:	00027b8c 	andi	zero,zero,2542
   272a4:	00027b8c 	andi	zero,zero,2542
   272a8:	00027b8c 	andi	zero,zero,2542
   272ac:	000279b4 	movhi	zero,2534
   272b0:	00027b8c 	andi	zero,zero,2542
   272b4:	00027b8c 	andi	zero,zero,2542
   272b8:	00027a24 	muli	zero,zero,2536
   272bc:	00027b8c 	andi	zero,zero,2542
   272c0:	00027b8c 	andi	zero,zero,2542
   272c4:	00027b8c 	andi	zero,zero,2542
   272c8:	00027b8c 	andi	zero,zero,2542
   272cc:	00027b8c 	andi	zero,zero,2542
   272d0:	00027b8c 	andi	zero,zero,2542
   272d4:	00027b8c 	andi	zero,zero,2542
   272d8:	00027b8c 	andi	zero,zero,2542
   272dc:	00027b8c 	andi	zero,zero,2542
   272e0:	00027b8c 	andi	zero,zero,2542
   272e4:	000277d0 	cmplti	zero,zero,2527
   272e8:	000277fc 	xorhi	zero,zero,2527
   272ec:	00027b8c 	andi	zero,zero,2542
   272f0:	00027b8c 	andi	zero,zero,2542
   272f4:	00027b8c 	andi	zero,zero,2542
   272f8:	00027b34 	movhi	zero,2540
   272fc:	000277fc 	xorhi	zero,zero,2527
   27300:	00027b8c 	andi	zero,zero,2542
   27304:	00027b8c 	andi	zero,zero,2542
   27308:	00027690 	cmplti	zero,zero,2522
   2730c:	00027b8c 	andi	zero,zero,2542
   27310:	000276a0 	cmpeqi	zero,zero,2522
   27314:	000276dc 	xori	zero,zero,2523
   27318:	000273d8 	cmpnei	zero,zero,2511
   2731c:	00027684 	movi	zero,2522
   27320:	00027b8c 	andi	zero,zero,2542
   27324:	00027a60 	cmpeqi	zero,zero,2537
   27328:	00027b8c 	andi	zero,zero,2542
   2732c:	00027ab8 	rdprs	zero,zero,2538
   27330:	00027b8c 	andi	zero,zero,2542
   27334:	00027b8c 	andi	zero,zero,2542
   27338:	0002777c 	xorhi	zero,zero,2525
   2733c:	42000204 	addi	r8,r8,8
   27340:	da802317 	ldw	r10,140(sp)
   27344:	5455883a 	add	r10,r10,r17
   27348:	da802315 	stw	r10,140(sp)
   2734c:	003f8b06 	br	2717c <___vfiprintf_internal_r+0x144>
   27350:	d9002017 	ldw	r4,128(sp)
   27354:	a00b883a 	mov	r5,r20
   27358:	00227d80 	call	227d8 <__swsetup_r>
   2735c:	1003b11e 	bne	r2,zero,28224 <___vfiprintf_internal_r+0x11ec>
   27360:	a080030b 	ldhu	r2,12(r20)
   27364:	00c00284 	movi	r3,10
   27368:	1080068c 	andi	r2,r2,26
   2736c:	10ff541e 	bne	r2,r3,270c0 <___vfiprintf_internal_r+0x88>
   27370:	a080038f 	ldh	r2,14(r20)
   27374:	103f5216 	blt	r2,zero,270c0 <___vfiprintf_internal_r+0x88>
   27378:	d9c02217 	ldw	r7,136(sp)
   2737c:	d9002017 	ldw	r4,128(sp)
   27380:	e00d883a 	mov	r6,fp
   27384:	a00b883a 	mov	r5,r20
   27388:	00284b00 	call	284b0 <__sbprintf>
   2738c:	dfc03617 	ldw	ra,216(sp)
   27390:	df003517 	ldw	fp,212(sp)
   27394:	ddc03417 	ldw	r23,208(sp)
   27398:	dd803317 	ldw	r22,204(sp)
   2739c:	dd403217 	ldw	r21,200(sp)
   273a0:	dd003117 	ldw	r20,196(sp)
   273a4:	dcc03017 	ldw	r19,192(sp)
   273a8:	dc802f17 	ldw	r18,188(sp)
   273ac:	dc402e17 	ldw	r17,184(sp)
   273b0:	dc002d17 	ldw	r16,180(sp)
   273b4:	dec03704 	addi	sp,sp,220
   273b8:	f800283a 	ret
   273bc:	00247ac0 	call	247ac <__sinit>
   273c0:	003f2f06 	br	27080 <___vfiprintf_internal_r+0x48>
   273c4:	0463c83a 	sub	r17,zero,r17
   273c8:	d8802215 	stw	r2,136(sp)
   273cc:	a5000114 	ori	r20,r20,4
   273d0:	80c00007 	ldb	r3,0(r16)
   273d4:	003f7706 	br	271b4 <___vfiprintf_internal_r+0x17c>
   273d8:	00800c04 	movi	r2,48
   273dc:	da802217 	ldw	r10,136(sp)
   273e0:	d8801d05 	stb	r2,116(sp)
   273e4:	00801e04 	movi	r2,120
   273e8:	d8801d45 	stb	r2,117(sp)
   273ec:	d8001d85 	stb	zero,118(sp)
   273f0:	50c00104 	addi	r3,r10,4
   273f4:	54800017 	ldw	r18,0(r10)
   273f8:	0027883a 	mov	r19,zero
   273fc:	a0800094 	ori	r2,r20,2
   27400:	48030b16 	blt	r9,zero,28030 <___vfiprintf_internal_r+0xff8>
   27404:	00bfdfc4 	movi	r2,-129
   27408:	a096703a 	and	r11,r20,r2
   2740c:	d8c02215 	stw	r3,136(sp)
   27410:	5d000094 	ori	r20,r11,2
   27414:	90032b1e 	bne	r18,zero,280c4 <___vfiprintf_internal_r+0x108c>
   27418:	00800034 	movhi	r2,0
   2741c:	10800904 	addi	r2,r2,36
   27420:	d8802615 	stw	r2,152(sp)
   27424:	0039883a 	mov	fp,zero
   27428:	48017b1e 	bne	r9,zero,27a18 <___vfiprintf_internal_r+0x9e0>
   2742c:	0013883a 	mov	r9,zero
   27430:	0027883a 	mov	r19,zero
   27434:	dd401a04 	addi	r21,sp,104
   27438:	4825883a 	mov	r18,r9
   2743c:	4cc0010e 	bge	r9,r19,27444 <___vfiprintf_internal_r+0x40c>
   27440:	9825883a 	mov	r18,r19
   27444:	e7003fcc 	andi	fp,fp,255
   27448:	e700201c 	xori	fp,fp,128
   2744c:	e73fe004 	addi	fp,fp,-128
   27450:	e0000126 	beq	fp,zero,27458 <___vfiprintf_internal_r+0x420>
   27454:	94800044 	addi	r18,r18,1
   27458:	a380008c 	andi	r14,r20,2
   2745c:	70000126 	beq	r14,zero,27464 <___vfiprintf_internal_r+0x42c>
   27460:	94800084 	addi	r18,r18,2
   27464:	a700210c 	andi	fp,r20,132
   27468:	e001df1e 	bne	fp,zero,27be8 <___vfiprintf_internal_r+0xbb0>
   2746c:	8c87c83a 	sub	r3,r17,r18
   27470:	00c1dd0e 	bge	zero,r3,27be8 <___vfiprintf_internal_r+0xbb0>
   27474:	01c00404 	movi	r7,16
   27478:	d8801c17 	ldw	r2,112(sp)
   2747c:	38c3ad0e 	bge	r7,r3,28334 <___vfiprintf_internal_r+0x12fc>
   27480:	02800034 	movhi	r10,0
   27484:	52806e04 	addi	r10,r10,440
   27488:	dc002915 	stw	r16,164(sp)
   2748c:	d9801b17 	ldw	r6,108(sp)
   27490:	da802415 	stw	r10,144(sp)
   27494:	03c001c4 	movi	r15,7
   27498:	da402515 	stw	r9,148(sp)
   2749c:	db802815 	stw	r14,160(sp)
   274a0:	1821883a 	mov	r16,r3
   274a4:	00000506 	br	274bc <___vfiprintf_internal_r+0x484>
   274a8:	31400084 	addi	r5,r6,2
   274ac:	42000204 	addi	r8,r8,8
   274b0:	200d883a 	mov	r6,r4
   274b4:	843ffc04 	addi	r16,r16,-16
   274b8:	3c000d0e 	bge	r7,r16,274f0 <___vfiprintf_internal_r+0x4b8>
   274bc:	10800404 	addi	r2,r2,16
   274c0:	31000044 	addi	r4,r6,1
   274c4:	45800015 	stw	r22,0(r8)
   274c8:	41c00115 	stw	r7,4(r8)
   274cc:	d8801c15 	stw	r2,112(sp)
   274d0:	d9001b15 	stw	r4,108(sp)
   274d4:	793ff40e 	bge	r15,r4,274a8 <___vfiprintf_internal_r+0x470>
   274d8:	1001b51e 	bne	r2,zero,27bb0 <___vfiprintf_internal_r+0xb78>
   274dc:	843ffc04 	addi	r16,r16,-16
   274e0:	000d883a 	mov	r6,zero
   274e4:	01400044 	movi	r5,1
   274e8:	d811883a 	mov	r8,sp
   274ec:	3c3ff316 	blt	r7,r16,274bc <___vfiprintf_internal_r+0x484>
   274f0:	8007883a 	mov	r3,r16
   274f4:	da402517 	ldw	r9,148(sp)
   274f8:	db802817 	ldw	r14,160(sp)
   274fc:	dc002917 	ldw	r16,164(sp)
   27500:	da802417 	ldw	r10,144(sp)
   27504:	1885883a 	add	r2,r3,r2
   27508:	40c00115 	stw	r3,4(r8)
   2750c:	42800015 	stw	r10,0(r8)
   27510:	d8801c15 	stw	r2,112(sp)
   27514:	d9401b15 	stw	r5,108(sp)
   27518:	00c001c4 	movi	r3,7
   2751c:	19426016 	blt	r3,r5,27ea0 <___vfiprintf_internal_r+0xe68>
   27520:	d8c01d87 	ldb	r3,118(sp)
   27524:	42000204 	addi	r8,r8,8
   27528:	29000044 	addi	r4,r5,1
   2752c:	1801b31e 	bne	r3,zero,27bfc <___vfiprintf_internal_r+0xbc4>
   27530:	7001c026 	beq	r14,zero,27c34 <___vfiprintf_internal_r+0xbfc>
   27534:	d8c01d04 	addi	r3,sp,116
   27538:	10800084 	addi	r2,r2,2
   2753c:	40c00015 	stw	r3,0(r8)
   27540:	00c00084 	movi	r3,2
   27544:	40c00115 	stw	r3,4(r8)
   27548:	d8801c15 	stw	r2,112(sp)
   2754c:	d9001b15 	stw	r4,108(sp)
   27550:	00c001c4 	movi	r3,7
   27554:	1902650e 	bge	r3,r4,27eec <___vfiprintf_internal_r+0xeb4>
   27558:	10029a1e 	bne	r2,zero,27fc4 <___vfiprintf_internal_r+0xf8c>
   2755c:	00c02004 	movi	r3,128
   27560:	01000044 	movi	r4,1
   27564:	000b883a 	mov	r5,zero
   27568:	d811883a 	mov	r8,sp
   2756c:	e0c1b31e 	bne	fp,r3,27c3c <___vfiprintf_internal_r+0xc04>
   27570:	8cb9c83a 	sub	fp,r17,r18
   27574:	0701b10e 	bge	zero,fp,27c3c <___vfiprintf_internal_r+0xc04>
   27578:	01c00404 	movi	r7,16
   2757c:	3f03890e 	bge	r7,fp,283a4 <___vfiprintf_internal_r+0x136c>
   27580:	00c00034 	movhi	r3,0
   27584:	18c06a04 	addi	r3,r3,424
   27588:	d8c02415 	stw	r3,144(sp)
   2758c:	8007883a 	mov	r3,r16
   27590:	034001c4 	movi	r13,7
   27594:	e021883a 	mov	r16,fp
   27598:	da402515 	stw	r9,148(sp)
   2759c:	1839883a 	mov	fp,r3
   275a0:	00000506 	br	275b8 <___vfiprintf_internal_r+0x580>
   275a4:	29800084 	addi	r6,r5,2
   275a8:	42000204 	addi	r8,r8,8
   275ac:	180b883a 	mov	r5,r3
   275b0:	843ffc04 	addi	r16,r16,-16
   275b4:	3c000d0e 	bge	r7,r16,275ec <___vfiprintf_internal_r+0x5b4>
   275b8:	10800404 	addi	r2,r2,16
   275bc:	28c00044 	addi	r3,r5,1
   275c0:	45c00015 	stw	r23,0(r8)
   275c4:	41c00115 	stw	r7,4(r8)
   275c8:	d8801c15 	stw	r2,112(sp)
   275cc:	d8c01b15 	stw	r3,108(sp)
   275d0:	68fff40e 	bge	r13,r3,275a4 <___vfiprintf_internal_r+0x56c>
   275d4:	1002241e 	bne	r2,zero,27e68 <___vfiprintf_internal_r+0xe30>
   275d8:	843ffc04 	addi	r16,r16,-16
   275dc:	01800044 	movi	r6,1
   275e0:	000b883a 	mov	r5,zero
   275e4:	d811883a 	mov	r8,sp
   275e8:	3c3ff316 	blt	r7,r16,275b8 <___vfiprintf_internal_r+0x580>
   275ec:	da402517 	ldw	r9,148(sp)
   275f0:	e007883a 	mov	r3,fp
   275f4:	8039883a 	mov	fp,r16
   275f8:	1821883a 	mov	r16,r3
   275fc:	d8c02417 	ldw	r3,144(sp)
   27600:	1705883a 	add	r2,r2,fp
   27604:	47000115 	stw	fp,4(r8)
   27608:	40c00015 	stw	r3,0(r8)
   2760c:	d8801c15 	stw	r2,112(sp)
   27610:	d9801b15 	stw	r6,108(sp)
   27614:	00c001c4 	movi	r3,7
   27618:	19827616 	blt	r3,r6,27ff4 <___vfiprintf_internal_r+0xfbc>
   2761c:	4cf9c83a 	sub	fp,r9,r19
   27620:	42000204 	addi	r8,r8,8
   27624:	31000044 	addi	r4,r6,1
   27628:	300b883a 	mov	r5,r6
   2762c:	07018516 	blt	zero,fp,27c44 <___vfiprintf_internal_r+0xc0c>
   27630:	9885883a 	add	r2,r19,r2
   27634:	45400015 	stw	r21,0(r8)
   27638:	44c00115 	stw	r19,4(r8)
   2763c:	d8801c15 	stw	r2,112(sp)
   27640:	d9001b15 	stw	r4,108(sp)
   27644:	00c001c4 	movi	r3,7
   27648:	1901dd0e 	bge	r3,r4,27dc0 <___vfiprintf_internal_r+0xd88>
   2764c:	1002401e 	bne	r2,zero,27f50 <___vfiprintf_internal_r+0xf18>
   27650:	d8001b15 	stw	zero,108(sp)
   27654:	a2c0010c 	andi	r11,r20,4
   27658:	58000226 	beq	r11,zero,27664 <___vfiprintf_internal_r+0x62c>
   2765c:	8ca7c83a 	sub	r19,r17,r18
   27660:	04c2f216 	blt	zero,r19,2822c <___vfiprintf_internal_r+0x11f4>
   27664:	8c80010e 	bge	r17,r18,2766c <___vfiprintf_internal_r+0x634>
   27668:	9023883a 	mov	r17,r18
   2766c:	da802317 	ldw	r10,140(sp)
   27670:	5455883a 	add	r10,r10,r17
   27674:	da802315 	stw	r10,140(sp)
   27678:	d8001b15 	stw	zero,108(sp)
   2767c:	d811883a 	mov	r8,sp
   27680:	003ea206 	br	2710c <___vfiprintf_internal_r+0xd4>
   27684:	a5000814 	ori	r20,r20,32
   27688:	80c00007 	ldb	r3,0(r16)
   2768c:	003ec906 	br	271b4 <___vfiprintf_internal_r+0x17c>
   27690:	80c00007 	ldb	r3,0(r16)
   27694:	1b030926 	beq	r3,r12,282bc <___vfiprintf_internal_r+0x1284>
   27698:	a5000414 	ori	r20,r20,16
   2769c:	003ec506 	br	271b4 <___vfiprintf_internal_r+0x17c>
   276a0:	21003fcc 	andi	r4,r4,255
   276a4:	20035e1e 	bne	r4,zero,28420 <___vfiprintf_internal_r+0x13e8>
   276a8:	a080080c 	andi	r2,r20,32
   276ac:	1002a526 	beq	r2,zero,28144 <___vfiprintf_internal_r+0x110c>
   276b0:	da802217 	ldw	r10,136(sp)
   276b4:	50800017 	ldw	r2,0(r10)
   276b8:	da802317 	ldw	r10,140(sp)
   276bc:	5007d7fa 	srai	r3,r10,31
   276c0:	da802217 	ldw	r10,136(sp)
   276c4:	10c00115 	stw	r3,4(r2)
   276c8:	52800104 	addi	r10,r10,4
   276cc:	da802215 	stw	r10,136(sp)
   276d0:	da802317 	ldw	r10,140(sp)
   276d4:	12800015 	stw	r10,0(r2)
   276d8:	003e8c06 	br	2710c <___vfiprintf_internal_r+0xd4>
   276dc:	21003fcc 	andi	r4,r4,255
   276e0:	2003511e 	bne	r4,zero,28428 <___vfiprintf_internal_r+0x13f0>
   276e4:	a080080c 	andi	r2,r20,32
   276e8:	1000a126 	beq	r2,zero,27970 <___vfiprintf_internal_r+0x938>
   276ec:	da802217 	ldw	r10,136(sp)
   276f0:	d8001d85 	stb	zero,118(sp)
   276f4:	50800204 	addi	r2,r10,8
   276f8:	54800017 	ldw	r18,0(r10)
   276fc:	54c00117 	ldw	r19,4(r10)
   27700:	4802b416 	blt	r9,zero,281d4 <___vfiprintf_internal_r+0x119c>
   27704:	013fdfc4 	movi	r4,-129
   27708:	94c6b03a 	or	r3,r18,r19
   2770c:	d8802215 	stw	r2,136(sp)
   27710:	a128703a 	and	r20,r20,r4
   27714:	1800a226 	beq	r3,zero,279a0 <___vfiprintf_internal_r+0x968>
   27718:	0039883a 	mov	fp,zero
   2771c:	dd401a04 	addi	r21,sp,104
   27720:	9006d0fa 	srli	r3,r18,3
   27724:	9808977a 	slli	r4,r19,29
   27728:	9826d0fa 	srli	r19,r19,3
   2772c:	948001cc 	andi	r18,r18,7
   27730:	90800c04 	addi	r2,r18,48
   27734:	ad7fffc4 	addi	r21,r21,-1
   27738:	20e4b03a 	or	r18,r4,r3
   2773c:	a8800005 	stb	r2,0(r21)
   27740:	94c6b03a 	or	r3,r18,r19
   27744:	183ff61e 	bne	r3,zero,27720 <___vfiprintf_internal_r+0x6e8>
   27748:	a0c0004c 	andi	r3,r20,1
   2774c:	18005926 	beq	r3,zero,278b4 <___vfiprintf_internal_r+0x87c>
   27750:	10803fcc 	andi	r2,r2,255
   27754:	1080201c 	xori	r2,r2,128
   27758:	10bfe004 	addi	r2,r2,-128
   2775c:	00c00c04 	movi	r3,48
   27760:	10c05426 	beq	r2,r3,278b4 <___vfiprintf_internal_r+0x87c>
   27764:	da801e17 	ldw	r10,120(sp)
   27768:	a8bfffc4 	addi	r2,r21,-1
   2776c:	a8ffffc5 	stb	r3,-1(r21)
   27770:	50a7c83a 	sub	r19,r10,r2
   27774:	102b883a 	mov	r21,r2
   27778:	003f2f06 	br	27438 <___vfiprintf_internal_r+0x400>
   2777c:	21003fcc 	andi	r4,r4,255
   27780:	2003421e 	bne	r4,zero,2848c <___vfiprintf_internal_r+0x1454>
   27784:	00800034 	movhi	r2,0
   27788:	10800904 	addi	r2,r2,36
   2778c:	d8802615 	stw	r2,152(sp)
   27790:	a080080c 	andi	r2,r20,32
   27794:	1000aa26 	beq	r2,zero,27a40 <___vfiprintf_internal_r+0xa08>
   27798:	da802217 	ldw	r10,136(sp)
   2779c:	54800017 	ldw	r18,0(r10)
   277a0:	54c00117 	ldw	r19,4(r10)
   277a4:	52800204 	addi	r10,r10,8
   277a8:	da802215 	stw	r10,136(sp)
   277ac:	a080004c 	andi	r2,r20,1
   277b0:	1001d226 	beq	r2,zero,27efc <___vfiprintf_internal_r+0xec4>
   277b4:	94c4b03a 	or	r2,r18,r19
   277b8:	1002351e 	bne	r2,zero,28090 <___vfiprintf_internal_r+0x1058>
   277bc:	d8001d85 	stb	zero,118(sp)
   277c0:	48022216 	blt	r9,zero,2804c <___vfiprintf_internal_r+0x1014>
   277c4:	00bfdfc4 	movi	r2,-129
   277c8:	a0a8703a 	and	r20,r20,r2
   277cc:	003f1506 	br	27424 <___vfiprintf_internal_r+0x3ec>
   277d0:	da802217 	ldw	r10,136(sp)
   277d4:	04800044 	movi	r18,1
   277d8:	d8001d85 	stb	zero,118(sp)
   277dc:	50800017 	ldw	r2,0(r10)
   277e0:	52800104 	addi	r10,r10,4
   277e4:	da802215 	stw	r10,136(sp)
   277e8:	d8801005 	stb	r2,64(sp)
   277ec:	9027883a 	mov	r19,r18
   277f0:	dd401004 	addi	r21,sp,64
   277f4:	0013883a 	mov	r9,zero
   277f8:	003f1706 	br	27458 <___vfiprintf_internal_r+0x420>
   277fc:	21003fcc 	andi	r4,r4,255
   27800:	2003201e 	bne	r4,zero,28484 <___vfiprintf_internal_r+0x144c>
   27804:	a080080c 	andi	r2,r20,32
   27808:	10004b26 	beq	r2,zero,27938 <___vfiprintf_internal_r+0x900>
   2780c:	da802217 	ldw	r10,136(sp)
   27810:	50800117 	ldw	r2,4(r10)
   27814:	54800017 	ldw	r18,0(r10)
   27818:	52800204 	addi	r10,r10,8
   2781c:	da802215 	stw	r10,136(sp)
   27820:	1027883a 	mov	r19,r2
   27824:	10022c16 	blt	r2,zero,280d8 <___vfiprintf_internal_r+0x10a0>
   27828:	df001d83 	ldbu	fp,118(sp)
   2782c:	48007216 	blt	r9,zero,279f8 <___vfiprintf_internal_r+0x9c0>
   27830:	00ffdfc4 	movi	r3,-129
   27834:	94c4b03a 	or	r2,r18,r19
   27838:	a0e8703a 	and	r20,r20,r3
   2783c:	1000cc26 	beq	r2,zero,27b70 <___vfiprintf_internal_r+0xb38>
   27840:	98021026 	beq	r19,zero,28084 <___vfiprintf_internal_r+0x104c>
   27844:	dc402415 	stw	r17,144(sp)
   27848:	dc002515 	stw	r16,148(sp)
   2784c:	9823883a 	mov	r17,r19
   27850:	9021883a 	mov	r16,r18
   27854:	dd401a04 	addi	r21,sp,104
   27858:	4825883a 	mov	r18,r9
   2785c:	4027883a 	mov	r19,r8
   27860:	8009883a 	mov	r4,r16
   27864:	880b883a 	mov	r5,r17
   27868:	01800284 	movi	r6,10
   2786c:	000f883a 	mov	r7,zero
   27870:	0029f940 	call	29f94 <__umoddi3>
   27874:	10800c04 	addi	r2,r2,48
   27878:	ad7fffc4 	addi	r21,r21,-1
   2787c:	8009883a 	mov	r4,r16
   27880:	880b883a 	mov	r5,r17
   27884:	a8800005 	stb	r2,0(r21)
   27888:	01800284 	movi	r6,10
   2788c:	000f883a 	mov	r7,zero
   27890:	0029a1c0 	call	29a1c <__udivdi3>
   27894:	1021883a 	mov	r16,r2
   27898:	10c4b03a 	or	r2,r2,r3
   2789c:	1823883a 	mov	r17,r3
   278a0:	103fef1e 	bne	r2,zero,27860 <___vfiprintf_internal_r+0x828>
   278a4:	dc402417 	ldw	r17,144(sp)
   278a8:	dc002517 	ldw	r16,148(sp)
   278ac:	9013883a 	mov	r9,r18
   278b0:	9811883a 	mov	r8,r19
   278b4:	da801e17 	ldw	r10,120(sp)
   278b8:	5567c83a 	sub	r19,r10,r21
   278bc:	003ede06 	br	27438 <___vfiprintf_internal_r+0x400>
   278c0:	38803fcc 	andi	r2,r7,255
   278c4:	1080201c 	xori	r2,r2,128
   278c8:	10bfe004 	addi	r2,r2,-128
   278cc:	1002371e 	bne	r2,zero,281ac <___vfiprintf_internal_r+0x1174>
   278d0:	01000044 	movi	r4,1
   278d4:	01c00804 	movi	r7,32
   278d8:	80c00007 	ldb	r3,0(r16)
   278dc:	003e3506 	br	271b4 <___vfiprintf_internal_r+0x17c>
   278e0:	a5000054 	ori	r20,r20,1
   278e4:	80c00007 	ldb	r3,0(r16)
   278e8:	003e3206 	br	271b4 <___vfiprintf_internal_r+0x17c>
   278ec:	a5002014 	ori	r20,r20,128
   278f0:	80c00007 	ldb	r3,0(r16)
   278f4:	003e2f06 	br	271b4 <___vfiprintf_internal_r+0x17c>
   278f8:	8015883a 	mov	r10,r16
   278fc:	0023883a 	mov	r17,zero
   27900:	18bff404 	addi	r2,r3,-48
   27904:	50c00007 	ldb	r3,0(r10)
   27908:	8c4002a4 	muli	r17,r17,10
   2790c:	84000044 	addi	r16,r16,1
   27910:	8015883a 	mov	r10,r16
   27914:	1463883a 	add	r17,r2,r17
   27918:	18bff404 	addi	r2,r3,-48
   2791c:	30bff92e 	bgeu	r6,r2,27904 <___vfiprintf_internal_r+0x8cc>
   27920:	003e2506 	br	271b8 <___vfiprintf_internal_r+0x180>
   27924:	21003fcc 	andi	r4,r4,255
   27928:	2002d41e 	bne	r4,zero,2847c <___vfiprintf_internal_r+0x1444>
   2792c:	a5000414 	ori	r20,r20,16
   27930:	a080080c 	andi	r2,r20,32
   27934:	103fb51e 	bne	r2,zero,2780c <___vfiprintf_internal_r+0x7d4>
   27938:	a080040c 	andi	r2,r20,16
   2793c:	1001f826 	beq	r2,zero,28120 <___vfiprintf_internal_r+0x10e8>
   27940:	da802217 	ldw	r10,136(sp)
   27944:	54800017 	ldw	r18,0(r10)
   27948:	52800104 	addi	r10,r10,4
   2794c:	da802215 	stw	r10,136(sp)
   27950:	9027d7fa 	srai	r19,r18,31
   27954:	9805883a 	mov	r2,r19
   27958:	003fb206 	br	27824 <___vfiprintf_internal_r+0x7ec>
   2795c:	21003fcc 	andi	r4,r4,255
   27960:	2002c41e 	bne	r4,zero,28474 <___vfiprintf_internal_r+0x143c>
   27964:	a5000414 	ori	r20,r20,16
   27968:	a080080c 	andi	r2,r20,32
   2796c:	103f5f1e 	bne	r2,zero,276ec <___vfiprintf_internal_r+0x6b4>
   27970:	a080040c 	andi	r2,r20,16
   27974:	10020f26 	beq	r2,zero,281b4 <___vfiprintf_internal_r+0x117c>
   27978:	da802217 	ldw	r10,136(sp)
   2797c:	d8001d85 	stb	zero,118(sp)
   27980:	0027883a 	mov	r19,zero
   27984:	50800104 	addi	r2,r10,4
   27988:	54800017 	ldw	r18,0(r10)
   2798c:	48021116 	blt	r9,zero,281d4 <___vfiprintf_internal_r+0x119c>
   27990:	00ffdfc4 	movi	r3,-129
   27994:	d8802215 	stw	r2,136(sp)
   27998:	a0e8703a 	and	r20,r20,r3
   2799c:	903f5e1e 	bne	r18,zero,27718 <___vfiprintf_internal_r+0x6e0>
   279a0:	0039883a 	mov	fp,zero
   279a4:	4802a626 	beq	r9,zero,28440 <___vfiprintf_internal_r+0x1408>
   279a8:	0025883a 	mov	r18,zero
   279ac:	0027883a 	mov	r19,zero
   279b0:	003f5a06 	br	2771c <___vfiprintf_internal_r+0x6e4>
   279b4:	21003fcc 	andi	r4,r4,255
   279b8:	20029f1e 	bne	r4,zero,28438 <___vfiprintf_internal_r+0x1400>
   279bc:	a5000414 	ori	r20,r20,16
   279c0:	a080080c 	andi	r2,r20,32
   279c4:	10005e1e 	bne	r2,zero,27b40 <___vfiprintf_internal_r+0xb08>
   279c8:	a080040c 	andi	r2,r20,16
   279cc:	1001a21e 	bne	r2,zero,28058 <___vfiprintf_internal_r+0x1020>
   279d0:	a080100c 	andi	r2,r20,64
   279d4:	d8001d85 	stb	zero,118(sp)
   279d8:	da802217 	ldw	r10,136(sp)
   279dc:	1002231e 	bne	r2,zero,2826c <___vfiprintf_internal_r+0x1234>
   279e0:	50800104 	addi	r2,r10,4
   279e4:	54800017 	ldw	r18,0(r10)
   279e8:	0027883a 	mov	r19,zero
   279ec:	4801a00e 	bge	r9,zero,28070 <___vfiprintf_internal_r+0x1038>
   279f0:	d8802215 	stw	r2,136(sp)
   279f4:	0039883a 	mov	fp,zero
   279f8:	94c4b03a 	or	r2,r18,r19
   279fc:	103f901e 	bne	r2,zero,27840 <___vfiprintf_internal_r+0x808>
   27a00:	00800044 	movi	r2,1
   27a04:	10803fcc 	andi	r2,r2,255
   27a08:	00c00044 	movi	r3,1
   27a0c:	10c05926 	beq	r2,r3,27b74 <___vfiprintf_internal_r+0xb3c>
   27a10:	00c00084 	movi	r3,2
   27a14:	10ffe41e 	bne	r2,r3,279a8 <___vfiprintf_internal_r+0x970>
   27a18:	0025883a 	mov	r18,zero
   27a1c:	0027883a 	mov	r19,zero
   27a20:	00013d06 	br	27f18 <___vfiprintf_internal_r+0xee0>
   27a24:	21003fcc 	andi	r4,r4,255
   27a28:	2002811e 	bne	r4,zero,28430 <___vfiprintf_internal_r+0x13f8>
   27a2c:	00800034 	movhi	r2,0
   27a30:	10800404 	addi	r2,r2,16
   27a34:	d8802615 	stw	r2,152(sp)
   27a38:	a080080c 	andi	r2,r20,32
   27a3c:	103f561e 	bne	r2,zero,27798 <___vfiprintf_internal_r+0x760>
   27a40:	a080040c 	andi	r2,r20,16
   27a44:	1001d126 	beq	r2,zero,2818c <___vfiprintf_internal_r+0x1154>
   27a48:	da802217 	ldw	r10,136(sp)
   27a4c:	0027883a 	mov	r19,zero
   27a50:	54800017 	ldw	r18,0(r10)
   27a54:	52800104 	addi	r10,r10,4
   27a58:	da802215 	stw	r10,136(sp)
   27a5c:	003f5306 	br	277ac <___vfiprintf_internal_r+0x774>
   27a60:	da802217 	ldw	r10,136(sp)
   27a64:	d8001d85 	stb	zero,118(sp)
   27a68:	55400017 	ldw	r21,0(r10)
   27a6c:	50c00104 	addi	r3,r10,4
   27a70:	a8024226 	beq	r21,zero,2837c <___vfiprintf_internal_r+0x1344>
   27a74:	48021816 	blt	r9,zero,282d8 <___vfiprintf_internal_r+0x12a0>
   27a78:	480d883a 	mov	r6,r9
   27a7c:	000b883a 	mov	r5,zero
   27a80:	a809883a 	mov	r4,r21
   27a84:	d8c02a15 	stw	r3,168(sp)
   27a88:	da002b15 	stw	r8,172(sp)
   27a8c:	da402c15 	stw	r9,176(sp)
   27a90:	002585c0 	call	2585c <memchr>
   27a94:	d8c02a17 	ldw	r3,168(sp)
   27a98:	da002b17 	ldw	r8,172(sp)
   27a9c:	da402c17 	ldw	r9,176(sp)
   27aa0:	10024826 	beq	r2,zero,283c4 <___vfiprintf_internal_r+0x138c>
   27aa4:	1567c83a 	sub	r19,r2,r21
   27aa8:	df001d83 	ldbu	fp,118(sp)
   27aac:	d8c02215 	stw	r3,136(sp)
   27ab0:	0013883a 	mov	r9,zero
   27ab4:	003e6006 	br	27438 <___vfiprintf_internal_r+0x400>
   27ab8:	21003fcc 	andi	r4,r4,255
   27abc:	203fc026 	beq	r4,zero,279c0 <___vfiprintf_internal_r+0x988>
   27ac0:	d9c01d85 	stb	r7,118(sp)
   27ac4:	003fbe06 	br	279c0 <___vfiprintf_internal_r+0x988>
   27ac8:	da802217 	ldw	r10,136(sp)
   27acc:	54400017 	ldw	r17,0(r10)
   27ad0:	50800104 	addi	r2,r10,4
   27ad4:	883e3b16 	blt	r17,zero,273c4 <___vfiprintf_internal_r+0x38c>
   27ad8:	d8802215 	stw	r2,136(sp)
   27adc:	80c00007 	ldb	r3,0(r16)
   27ae0:	003db406 	br	271b4 <___vfiprintf_internal_r+0x17c>
   27ae4:	01000044 	movi	r4,1
   27ae8:	01c00ac4 	movi	r7,43
   27aec:	80c00007 	ldb	r3,0(r16)
   27af0:	003db006 	br	271b4 <___vfiprintf_internal_r+0x17c>
   27af4:	80c00007 	ldb	r3,0(r16)
   27af8:	82800044 	addi	r10,r16,1
   27afc:	1b423c26 	beq	r3,r13,283f0 <___vfiprintf_internal_r+0x13b8>
   27b00:	18bff404 	addi	r2,r3,-48
   27b04:	0013883a 	mov	r9,zero
   27b08:	30822b36 	bltu	r6,r2,283b8 <___vfiprintf_internal_r+0x1380>
   27b0c:	50c00007 	ldb	r3,0(r10)
   27b10:	4a4002a4 	muli	r9,r9,10
   27b14:	54000044 	addi	r16,r10,1
   27b18:	8015883a 	mov	r10,r16
   27b1c:	4893883a 	add	r9,r9,r2
   27b20:	18bff404 	addi	r2,r3,-48
   27b24:	30bff92e 	bgeu	r6,r2,27b0c <___vfiprintf_internal_r+0xad4>
   27b28:	483da30e 	bge	r9,zero,271b8 <___vfiprintf_internal_r+0x180>
   27b2c:	027fffc4 	movi	r9,-1
   27b30:	003da106 	br	271b8 <___vfiprintf_internal_r+0x180>
   27b34:	a5001014 	ori	r20,r20,64
   27b38:	80c00007 	ldb	r3,0(r16)
   27b3c:	003d9d06 	br	271b4 <___vfiprintf_internal_r+0x17c>
   27b40:	da802217 	ldw	r10,136(sp)
   27b44:	d8001d85 	stb	zero,118(sp)
   27b48:	50c00204 	addi	r3,r10,8
   27b4c:	54800017 	ldw	r18,0(r10)
   27b50:	54c00117 	ldw	r19,4(r10)
   27b54:	4801ca16 	blt	r9,zero,28280 <___vfiprintf_internal_r+0x1248>
   27b58:	013fdfc4 	movi	r4,-129
   27b5c:	94c4b03a 	or	r2,r18,r19
   27b60:	d8c02215 	stw	r3,136(sp)
   27b64:	a128703a 	and	r20,r20,r4
   27b68:	0039883a 	mov	fp,zero
   27b6c:	103f341e 	bne	r2,zero,27840 <___vfiprintf_internal_r+0x808>
   27b70:	483e2e26 	beq	r9,zero,2742c <___vfiprintf_internal_r+0x3f4>
   27b74:	0025883a 	mov	r18,zero
   27b78:	94800c04 	addi	r18,r18,48
   27b7c:	dc8019c5 	stb	r18,103(sp)
   27b80:	dcc02717 	ldw	r19,156(sp)
   27b84:	dd4019c4 	addi	r21,sp,103
   27b88:	003e2b06 	br	27438 <___vfiprintf_internal_r+0x400>
   27b8c:	21003fcc 	andi	r4,r4,255
   27b90:	2002361e 	bne	r4,zero,2846c <___vfiprintf_internal_r+0x1434>
   27b94:	1801c126 	beq	r3,zero,2829c <___vfiprintf_internal_r+0x1264>
   27b98:	04800044 	movi	r18,1
   27b9c:	d8c01005 	stb	r3,64(sp)
   27ba0:	d8001d85 	stb	zero,118(sp)
   27ba4:	9027883a 	mov	r19,r18
   27ba8:	dd401004 	addi	r21,sp,64
   27bac:	003f1106 	br	277f4 <___vfiprintf_internal_r+0x7bc>
   27bb0:	d9402117 	ldw	r5,132(sp)
   27bb4:	d9002017 	ldw	r4,128(sp)
   27bb8:	d9801a04 	addi	r6,sp,104
   27bbc:	d9c02b15 	stw	r7,172(sp)
   27bc0:	dbc02a15 	stw	r15,168(sp)
   27bc4:	0026f240 	call	26f24 <__sprint_r.part.0>
   27bc8:	d9c02b17 	ldw	r7,172(sp)
   27bcc:	dbc02a17 	ldw	r15,168(sp)
   27bd0:	10006d1e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27bd4:	d9801b17 	ldw	r6,108(sp)
   27bd8:	d8801c17 	ldw	r2,112(sp)
   27bdc:	d811883a 	mov	r8,sp
   27be0:	31400044 	addi	r5,r6,1
   27be4:	003e3306 	br	274b4 <___vfiprintf_internal_r+0x47c>
   27be8:	d9401b17 	ldw	r5,108(sp)
   27bec:	d8801c17 	ldw	r2,112(sp)
   27bf0:	29000044 	addi	r4,r5,1
   27bf4:	d8c01d87 	ldb	r3,118(sp)
   27bf8:	183e4d26 	beq	r3,zero,27530 <___vfiprintf_internal_r+0x4f8>
   27bfc:	00c00044 	movi	r3,1
   27c00:	d9401d84 	addi	r5,sp,118
   27c04:	10c5883a 	add	r2,r2,r3
   27c08:	41400015 	stw	r5,0(r8)
   27c0c:	40c00115 	stw	r3,4(r8)
   27c10:	d8801c15 	stw	r2,112(sp)
   27c14:	d9001b15 	stw	r4,108(sp)
   27c18:	014001c4 	movi	r5,7
   27c1c:	2900a90e 	bge	r5,r4,27ec4 <___vfiprintf_internal_r+0xe8c>
   27c20:	1000da1e 	bne	r2,zero,27f8c <___vfiprintf_internal_r+0xf54>
   27c24:	7000ab1e 	bne	r14,zero,27ed4 <___vfiprintf_internal_r+0xe9c>
   27c28:	000b883a 	mov	r5,zero
   27c2c:	1809883a 	mov	r4,r3
   27c30:	d811883a 	mov	r8,sp
   27c34:	00c02004 	movi	r3,128
   27c38:	e0fe4d26 	beq	fp,r3,27570 <___vfiprintf_internal_r+0x538>
   27c3c:	4cf9c83a 	sub	fp,r9,r19
   27c40:	073e7b0e 	bge	zero,fp,27630 <___vfiprintf_internal_r+0x5f8>
   27c44:	01c00404 	movi	r7,16
   27c48:	3f01900e 	bge	r7,fp,2828c <___vfiprintf_internal_r+0x1254>
   27c4c:	00c00034 	movhi	r3,0
   27c50:	18c06a04 	addi	r3,r3,424
   27c54:	d8c02415 	stw	r3,144(sp)
   27c58:	034001c4 	movi	r13,7
   27c5c:	00000506 	br	27c74 <___vfiprintf_internal_r+0xc3c>
   27c60:	29000084 	addi	r4,r5,2
   27c64:	42000204 	addi	r8,r8,8
   27c68:	180b883a 	mov	r5,r3
   27c6c:	e73ffc04 	addi	fp,fp,-16
   27c70:	3f000d0e 	bge	r7,fp,27ca8 <___vfiprintf_internal_r+0xc70>
   27c74:	10800404 	addi	r2,r2,16
   27c78:	28c00044 	addi	r3,r5,1
   27c7c:	45c00015 	stw	r23,0(r8)
   27c80:	41c00115 	stw	r7,4(r8)
   27c84:	d8801c15 	stw	r2,112(sp)
   27c88:	d8c01b15 	stw	r3,108(sp)
   27c8c:	68fff40e 	bge	r13,r3,27c60 <___vfiprintf_internal_r+0xc28>
   27c90:	1000101e 	bne	r2,zero,27cd4 <___vfiprintf_internal_r+0xc9c>
   27c94:	e73ffc04 	addi	fp,fp,-16
   27c98:	01000044 	movi	r4,1
   27c9c:	000b883a 	mov	r5,zero
   27ca0:	d811883a 	mov	r8,sp
   27ca4:	3f3ff316 	blt	r7,fp,27c74 <___vfiprintf_internal_r+0xc3c>
   27ca8:	da802417 	ldw	r10,144(sp)
   27cac:	1705883a 	add	r2,r2,fp
   27cb0:	47000115 	stw	fp,4(r8)
   27cb4:	42800015 	stw	r10,0(r8)
   27cb8:	d8801c15 	stw	r2,112(sp)
   27cbc:	d9001b15 	stw	r4,108(sp)
   27cc0:	00c001c4 	movi	r3,7
   27cc4:	19003616 	blt	r3,r4,27da0 <___vfiprintf_internal_r+0xd68>
   27cc8:	42000204 	addi	r8,r8,8
   27ccc:	21000044 	addi	r4,r4,1
   27cd0:	003e5706 	br	27630 <___vfiprintf_internal_r+0x5f8>
   27cd4:	d9402117 	ldw	r5,132(sp)
   27cd8:	d9002017 	ldw	r4,128(sp)
   27cdc:	d9801a04 	addi	r6,sp,104
   27ce0:	d9c02b15 	stw	r7,172(sp)
   27ce4:	db402a15 	stw	r13,168(sp)
   27ce8:	0026f240 	call	26f24 <__sprint_r.part.0>
   27cec:	d9c02b17 	ldw	r7,172(sp)
   27cf0:	db402a17 	ldw	r13,168(sp)
   27cf4:	1000241e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27cf8:	d9401b17 	ldw	r5,108(sp)
   27cfc:	d8801c17 	ldw	r2,112(sp)
   27d00:	d811883a 	mov	r8,sp
   27d04:	29000044 	addi	r4,r5,1
   27d08:	003fd806 	br	27c6c <___vfiprintf_internal_r+0xc34>
   27d0c:	d9401b17 	ldw	r5,108(sp)
   27d10:	00c00034 	movhi	r3,0
   27d14:	18c06e04 	addi	r3,r3,440
   27d18:	d8c02415 	stw	r3,144(sp)
   27d1c:	29400044 	addi	r5,r5,1
   27d20:	d8c02417 	ldw	r3,144(sp)
   27d24:	14c5883a 	add	r2,r2,r19
   27d28:	44c00115 	stw	r19,4(r8)
   27d2c:	40c00015 	stw	r3,0(r8)
   27d30:	d8801c15 	stw	r2,112(sp)
   27d34:	d9401b15 	stw	r5,108(sp)
   27d38:	00c001c4 	movi	r3,7
   27d3c:	1940070e 	bge	r3,r5,27d5c <___vfiprintf_internal_r+0xd24>
   27d40:	103e4826 	beq	r2,zero,27664 <___vfiprintf_internal_r+0x62c>
   27d44:	d9402117 	ldw	r5,132(sp)
   27d48:	d9002017 	ldw	r4,128(sp)
   27d4c:	d9801a04 	addi	r6,sp,104
   27d50:	0026f240 	call	26f24 <__sprint_r.part.0>
   27d54:	10000c1e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27d58:	d8801c17 	ldw	r2,112(sp)
   27d5c:	8c80010e 	bge	r17,r18,27d64 <___vfiprintf_internal_r+0xd2c>
   27d60:	9023883a 	mov	r17,r18
   27d64:	da802317 	ldw	r10,140(sp)
   27d68:	5455883a 	add	r10,r10,r17
   27d6c:	da802315 	stw	r10,140(sp)
   27d70:	103e4126 	beq	r2,zero,27678 <___vfiprintf_internal_r+0x640>
   27d74:	d9402117 	ldw	r5,132(sp)
   27d78:	d9002017 	ldw	r4,128(sp)
   27d7c:	d9801a04 	addi	r6,sp,104
   27d80:	0026f240 	call	26f24 <__sprint_r.part.0>
   27d84:	103e3c26 	beq	r2,zero,27678 <___vfiprintf_internal_r+0x640>
   27d88:	dd002117 	ldw	r20,132(sp)
   27d8c:	a080030b 	ldhu	r2,12(r20)
   27d90:	1080100c 	andi	r2,r2,64
   27d94:	1001231e 	bne	r2,zero,28224 <___vfiprintf_internal_r+0x11ec>
   27d98:	d8802317 	ldw	r2,140(sp)
   27d9c:	003d7b06 	br	2738c <___vfiprintf_internal_r+0x354>
   27da0:	1000991e 	bne	r2,zero,28008 <___vfiprintf_internal_r+0xfd0>
   27da4:	00c00044 	movi	r3,1
   27da8:	9805883a 	mov	r2,r19
   27dac:	dd400015 	stw	r21,0(sp)
   27db0:	dcc00115 	stw	r19,4(sp)
   27db4:	dcc01c15 	stw	r19,112(sp)
   27db8:	d8c01b15 	stw	r3,108(sp)
   27dbc:	d811883a 	mov	r8,sp
   27dc0:	42000204 	addi	r8,r8,8
   27dc4:	a2c0010c 	andi	r11,r20,4
   27dc8:	583fe426 	beq	r11,zero,27d5c <___vfiprintf_internal_r+0xd24>
   27dcc:	8ca7c83a 	sub	r19,r17,r18
   27dd0:	04ffe20e 	bge	zero,r19,27d5c <___vfiprintf_internal_r+0xd24>
   27dd4:	01c00404 	movi	r7,16
   27dd8:	3cffcc0e 	bge	r7,r19,27d0c <___vfiprintf_internal_r+0xcd4>
   27ddc:	02800034 	movhi	r10,0
   27de0:	52806e04 	addi	r10,r10,440
   27de4:	d9001b17 	ldw	r4,108(sp)
   27de8:	da802415 	stw	r10,144(sp)
   27dec:	382b883a 	mov	r21,r7
   27df0:	050001c4 	movi	r20,7
   27df4:	df002017 	ldw	fp,128(sp)
   27df8:	00000506 	br	27e10 <___vfiprintf_internal_r+0xdd8>
   27dfc:	21400084 	addi	r5,r4,2
   27e00:	42000204 	addi	r8,r8,8
   27e04:	1809883a 	mov	r4,r3
   27e08:	9cfffc04 	addi	r19,r19,-16
   27e0c:	acffc40e 	bge	r21,r19,27d20 <___vfiprintf_internal_r+0xce8>
   27e10:	10800404 	addi	r2,r2,16
   27e14:	20c00044 	addi	r3,r4,1
   27e18:	45800015 	stw	r22,0(r8)
   27e1c:	45400115 	stw	r21,4(r8)
   27e20:	d8801c15 	stw	r2,112(sp)
   27e24:	d8c01b15 	stw	r3,108(sp)
   27e28:	a0fff40e 	bge	r20,r3,27dfc <___vfiprintf_internal_r+0xdc4>
   27e2c:	1000041e 	bne	r2,zero,27e40 <___vfiprintf_internal_r+0xe08>
   27e30:	01400044 	movi	r5,1
   27e34:	0009883a 	mov	r4,zero
   27e38:	d811883a 	mov	r8,sp
   27e3c:	003ff206 	br	27e08 <___vfiprintf_internal_r+0xdd0>
   27e40:	d9402117 	ldw	r5,132(sp)
   27e44:	d9801a04 	addi	r6,sp,104
   27e48:	e009883a 	mov	r4,fp
   27e4c:	0026f240 	call	26f24 <__sprint_r.part.0>
   27e50:	103fcd1e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27e54:	d9001b17 	ldw	r4,108(sp)
   27e58:	d8801c17 	ldw	r2,112(sp)
   27e5c:	d811883a 	mov	r8,sp
   27e60:	21400044 	addi	r5,r4,1
   27e64:	003fe806 	br	27e08 <___vfiprintf_internal_r+0xdd0>
   27e68:	d9402117 	ldw	r5,132(sp)
   27e6c:	d9002017 	ldw	r4,128(sp)
   27e70:	d9801a04 	addi	r6,sp,104
   27e74:	d9c02b15 	stw	r7,172(sp)
   27e78:	db402a15 	stw	r13,168(sp)
   27e7c:	0026f240 	call	26f24 <__sprint_r.part.0>
   27e80:	d9c02b17 	ldw	r7,172(sp)
   27e84:	db402a17 	ldw	r13,168(sp)
   27e88:	103fbf1e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27e8c:	d9401b17 	ldw	r5,108(sp)
   27e90:	d8801c17 	ldw	r2,112(sp)
   27e94:	d811883a 	mov	r8,sp
   27e98:	29800044 	addi	r6,r5,1
   27e9c:	003dc406 	br	275b0 <___vfiprintf_internal_r+0x578>
   27ea0:	1000d21e 	bne	r2,zero,281ec <___vfiprintf_internal_r+0x11b4>
   27ea4:	d8c01d87 	ldb	r3,118(sp)
   27ea8:	18009526 	beq	r3,zero,28100 <___vfiprintf_internal_r+0x10c8>
   27eac:	00800044 	movi	r2,1
   27eb0:	d8c01d84 	addi	r3,sp,118
   27eb4:	1009883a 	mov	r4,r2
   27eb8:	d8c00015 	stw	r3,0(sp)
   27ebc:	d8800115 	stw	r2,4(sp)
   27ec0:	d811883a 	mov	r8,sp
   27ec4:	200b883a 	mov	r5,r4
   27ec8:	42000204 	addi	r8,r8,8
   27ecc:	21000044 	addi	r4,r4,1
   27ed0:	003d9706 	br	27530 <___vfiprintf_internal_r+0x4f8>
   27ed4:	d9001d04 	addi	r4,sp,116
   27ed8:	00800084 	movi	r2,2
   27edc:	d9000015 	stw	r4,0(sp)
   27ee0:	d8800115 	stw	r2,4(sp)
   27ee4:	1809883a 	mov	r4,r3
   27ee8:	d811883a 	mov	r8,sp
   27eec:	200b883a 	mov	r5,r4
   27ef0:	42000204 	addi	r8,r8,8
   27ef4:	21000044 	addi	r4,r4,1
   27ef8:	003f4e06 	br	27c34 <___vfiprintf_internal_r+0xbfc>
   27efc:	d8001d85 	stb	zero,118(sp)
   27f00:	48005016 	blt	r9,zero,28044 <___vfiprintf_internal_r+0x100c>
   27f04:	00ffdfc4 	movi	r3,-129
   27f08:	94c4b03a 	or	r2,r18,r19
   27f0c:	a0e8703a 	and	r20,r20,r3
   27f10:	103d4426 	beq	r2,zero,27424 <___vfiprintf_internal_r+0x3ec>
   27f14:	0039883a 	mov	fp,zero
   27f18:	d9002617 	ldw	r4,152(sp)
   27f1c:	dd401a04 	addi	r21,sp,104
   27f20:	908003cc 	andi	r2,r18,15
   27f24:	9806973a 	slli	r3,r19,28
   27f28:	2085883a 	add	r2,r4,r2
   27f2c:	9024d13a 	srli	r18,r18,4
   27f30:	10800003 	ldbu	r2,0(r2)
   27f34:	9826d13a 	srli	r19,r19,4
   27f38:	ad7fffc4 	addi	r21,r21,-1
   27f3c:	1ca4b03a 	or	r18,r3,r18
   27f40:	a8800005 	stb	r2,0(r21)
   27f44:	94c4b03a 	or	r2,r18,r19
   27f48:	103ff51e 	bne	r2,zero,27f20 <___vfiprintf_internal_r+0xee8>
   27f4c:	003e5906 	br	278b4 <___vfiprintf_internal_r+0x87c>
   27f50:	d9402117 	ldw	r5,132(sp)
   27f54:	d9002017 	ldw	r4,128(sp)
   27f58:	d9801a04 	addi	r6,sp,104
   27f5c:	0026f240 	call	26f24 <__sprint_r.part.0>
   27f60:	103f891e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27f64:	d8801c17 	ldw	r2,112(sp)
   27f68:	d811883a 	mov	r8,sp
   27f6c:	003f9506 	br	27dc4 <___vfiprintf_internal_r+0xd8c>
   27f70:	d9402117 	ldw	r5,132(sp)
   27f74:	d9002017 	ldw	r4,128(sp)
   27f78:	d9801a04 	addi	r6,sp,104
   27f7c:	0026f240 	call	26f24 <__sprint_r.part.0>
   27f80:	103f811e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27f84:	d811883a 	mov	r8,sp
   27f88:	003ced06 	br	27340 <___vfiprintf_internal_r+0x308>
   27f8c:	d9402117 	ldw	r5,132(sp)
   27f90:	d9002017 	ldw	r4,128(sp)
   27f94:	d9801a04 	addi	r6,sp,104
   27f98:	da402c15 	stw	r9,176(sp)
   27f9c:	db802a15 	stw	r14,168(sp)
   27fa0:	0026f240 	call	26f24 <__sprint_r.part.0>
   27fa4:	da402c17 	ldw	r9,176(sp)
   27fa8:	db802a17 	ldw	r14,168(sp)
   27fac:	103f761e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27fb0:	d9401b17 	ldw	r5,108(sp)
   27fb4:	d8801c17 	ldw	r2,112(sp)
   27fb8:	d811883a 	mov	r8,sp
   27fbc:	29000044 	addi	r4,r5,1
   27fc0:	003d5b06 	br	27530 <___vfiprintf_internal_r+0x4f8>
   27fc4:	d9402117 	ldw	r5,132(sp)
   27fc8:	d9002017 	ldw	r4,128(sp)
   27fcc:	d9801a04 	addi	r6,sp,104
   27fd0:	da402c15 	stw	r9,176(sp)
   27fd4:	0026f240 	call	26f24 <__sprint_r.part.0>
   27fd8:	da402c17 	ldw	r9,176(sp)
   27fdc:	103f6a1e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   27fe0:	d9401b17 	ldw	r5,108(sp)
   27fe4:	d8801c17 	ldw	r2,112(sp)
   27fe8:	d811883a 	mov	r8,sp
   27fec:	29000044 	addi	r4,r5,1
   27ff0:	003f1006 	br	27c34 <___vfiprintf_internal_r+0xbfc>
   27ff4:	1000c31e 	bne	r2,zero,28304 <___vfiprintf_internal_r+0x12cc>
   27ff8:	01000044 	movi	r4,1
   27ffc:	000b883a 	mov	r5,zero
   28000:	d811883a 	mov	r8,sp
   28004:	003f0d06 	br	27c3c <___vfiprintf_internal_r+0xc04>
   28008:	d9402117 	ldw	r5,132(sp)
   2800c:	d9002017 	ldw	r4,128(sp)
   28010:	d9801a04 	addi	r6,sp,104
   28014:	0026f240 	call	26f24 <__sprint_r.part.0>
   28018:	103f5b1e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   2801c:	d9001b17 	ldw	r4,108(sp)
   28020:	d8801c17 	ldw	r2,112(sp)
   28024:	d811883a 	mov	r8,sp
   28028:	21000044 	addi	r4,r4,1
   2802c:	003d8006 	br	27630 <___vfiprintf_internal_r+0x5f8>
   28030:	01000034 	movhi	r4,0
   28034:	21000904 	addi	r4,r4,36
   28038:	d9002615 	stw	r4,152(sp)
   2803c:	d8c02215 	stw	r3,136(sp)
   28040:	1029883a 	mov	r20,r2
   28044:	94c4b03a 	or	r2,r18,r19
   28048:	103fb21e 	bne	r2,zero,27f14 <___vfiprintf_internal_r+0xedc>
   2804c:	0039883a 	mov	fp,zero
   28050:	00800084 	movi	r2,2
   28054:	003e6b06 	br	27a04 <___vfiprintf_internal_r+0x9cc>
   28058:	da802217 	ldw	r10,136(sp)
   2805c:	d8001d85 	stb	zero,118(sp)
   28060:	0027883a 	mov	r19,zero
   28064:	50800104 	addi	r2,r10,4
   28068:	54800017 	ldw	r18,0(r10)
   2806c:	483e6016 	blt	r9,zero,279f0 <___vfiprintf_internal_r+0x9b8>
   28070:	00ffdfc4 	movi	r3,-129
   28074:	d8802215 	stw	r2,136(sp)
   28078:	a0e8703a 	and	r20,r20,r3
   2807c:	0039883a 	mov	fp,zero
   28080:	903ebb26 	beq	r18,zero,27b70 <___vfiprintf_internal_r+0xb38>
   28084:	00800244 	movi	r2,9
   28088:	14bdee36 	bltu	r2,r18,27844 <___vfiprintf_internal_r+0x80c>
   2808c:	003eba06 	br	27b78 <___vfiprintf_internal_r+0xb40>
   28090:	00800c04 	movi	r2,48
   28094:	d8c01d45 	stb	r3,117(sp)
   28098:	d8801d05 	stb	r2,116(sp)
   2809c:	d8001d85 	stb	zero,118(sp)
   280a0:	a0c00094 	ori	r3,r20,2
   280a4:	4800a916 	blt	r9,zero,2834c <___vfiprintf_internal_r+0x1314>
   280a8:	00bfdfc4 	movi	r2,-129
   280ac:	a096703a 	and	r11,r20,r2
   280b0:	5d000094 	ori	r20,r11,2
   280b4:	0039883a 	mov	fp,zero
   280b8:	003f9706 	br	27f18 <___vfiprintf_internal_r+0xee0>
   280bc:	8025883a 	mov	r18,r16
   280c0:	003c2e06 	br	2717c <___vfiprintf_internal_r+0x144>
   280c4:	00800034 	movhi	r2,0
   280c8:	10800904 	addi	r2,r2,36
   280cc:	0039883a 	mov	fp,zero
   280d0:	d8802615 	stw	r2,152(sp)
   280d4:	003f9006 	br	27f18 <___vfiprintf_internal_r+0xee0>
   280d8:	04a5c83a 	sub	r18,zero,r18
   280dc:	07000b44 	movi	fp,45
   280e0:	9004c03a 	cmpne	r2,r18,zero
   280e4:	04e7c83a 	sub	r19,zero,r19
   280e8:	df001d85 	stb	fp,118(sp)
   280ec:	98a7c83a 	sub	r19,r19,r2
   280f0:	48009f16 	blt	r9,zero,28370 <___vfiprintf_internal_r+0x1338>
   280f4:	00bfdfc4 	movi	r2,-129
   280f8:	a0a8703a 	and	r20,r20,r2
   280fc:	003dd006 	br	27840 <___vfiprintf_internal_r+0x808>
   28100:	70004c26 	beq	r14,zero,28234 <___vfiprintf_internal_r+0x11fc>
   28104:	00800084 	movi	r2,2
   28108:	d8c01d04 	addi	r3,sp,116
   2810c:	d8c00015 	stw	r3,0(sp)
   28110:	d8800115 	stw	r2,4(sp)
   28114:	01000044 	movi	r4,1
   28118:	d811883a 	mov	r8,sp
   2811c:	003f7306 	br	27eec <___vfiprintf_internal_r+0xeb4>
   28120:	a080100c 	andi	r2,r20,64
   28124:	da802217 	ldw	r10,136(sp)
   28128:	103e0626 	beq	r2,zero,27944 <___vfiprintf_internal_r+0x90c>
   2812c:	5480000f 	ldh	r18,0(r10)
   28130:	52800104 	addi	r10,r10,4
   28134:	da802215 	stw	r10,136(sp)
   28138:	9027d7fa 	srai	r19,r18,31
   2813c:	9805883a 	mov	r2,r19
   28140:	003db806 	br	27824 <___vfiprintf_internal_r+0x7ec>
   28144:	a080040c 	andi	r2,r20,16
   28148:	1000091e 	bne	r2,zero,28170 <___vfiprintf_internal_r+0x1138>
   2814c:	a2c0100c 	andi	r11,r20,64
   28150:	58000726 	beq	r11,zero,28170 <___vfiprintf_internal_r+0x1138>
   28154:	da802217 	ldw	r10,136(sp)
   28158:	50800017 	ldw	r2,0(r10)
   2815c:	52800104 	addi	r10,r10,4
   28160:	da802215 	stw	r10,136(sp)
   28164:	da802317 	ldw	r10,140(sp)
   28168:	1280000d 	sth	r10,0(r2)
   2816c:	003be706 	br	2710c <___vfiprintf_internal_r+0xd4>
   28170:	da802217 	ldw	r10,136(sp)
   28174:	50800017 	ldw	r2,0(r10)
   28178:	52800104 	addi	r10,r10,4
   2817c:	da802215 	stw	r10,136(sp)
   28180:	da802317 	ldw	r10,140(sp)
   28184:	12800015 	stw	r10,0(r2)
   28188:	003be006 	br	2710c <___vfiprintf_internal_r+0xd4>
   2818c:	a080100c 	andi	r2,r20,64
   28190:	da802217 	ldw	r10,136(sp)
   28194:	10003026 	beq	r2,zero,28258 <___vfiprintf_internal_r+0x1220>
   28198:	5480000b 	ldhu	r18,0(r10)
   2819c:	52800104 	addi	r10,r10,4
   281a0:	0027883a 	mov	r19,zero
   281a4:	da802215 	stw	r10,136(sp)
   281a8:	003d8006 	br	277ac <___vfiprintf_internal_r+0x774>
   281ac:	80c00007 	ldb	r3,0(r16)
   281b0:	003c0006 	br	271b4 <___vfiprintf_internal_r+0x17c>
   281b4:	a080100c 	andi	r2,r20,64
   281b8:	d8001d85 	stb	zero,118(sp)
   281bc:	da802217 	ldw	r10,136(sp)
   281c0:	1000201e 	bne	r2,zero,28244 <___vfiprintf_internal_r+0x120c>
   281c4:	50800104 	addi	r2,r10,4
   281c8:	54800017 	ldw	r18,0(r10)
   281cc:	0027883a 	mov	r19,zero
   281d0:	483def0e 	bge	r9,zero,27990 <___vfiprintf_internal_r+0x958>
   281d4:	94c6b03a 	or	r3,r18,r19
   281d8:	d8802215 	stw	r2,136(sp)
   281dc:	183d4e1e 	bne	r3,zero,27718 <___vfiprintf_internal_r+0x6e0>
   281e0:	0039883a 	mov	fp,zero
   281e4:	0005883a 	mov	r2,zero
   281e8:	003e0606 	br	27a04 <___vfiprintf_internal_r+0x9cc>
   281ec:	d9402117 	ldw	r5,132(sp)
   281f0:	d9002017 	ldw	r4,128(sp)
   281f4:	d9801a04 	addi	r6,sp,104
   281f8:	da402c15 	stw	r9,176(sp)
   281fc:	db802a15 	stw	r14,168(sp)
   28200:	0026f240 	call	26f24 <__sprint_r.part.0>
   28204:	da402c17 	ldw	r9,176(sp)
   28208:	db802a17 	ldw	r14,168(sp)
   2820c:	103ede1e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   28210:	d9401b17 	ldw	r5,108(sp)
   28214:	d8801c17 	ldw	r2,112(sp)
   28218:	d811883a 	mov	r8,sp
   2821c:	29000044 	addi	r4,r5,1
   28220:	003e7406 	br	27bf4 <___vfiprintf_internal_r+0xbbc>
   28224:	00bfffc4 	movi	r2,-1
   28228:	003c5806 	br	2738c <___vfiprintf_internal_r+0x354>
   2822c:	d811883a 	mov	r8,sp
   28230:	003ee806 	br	27dd4 <___vfiprintf_internal_r+0xd9c>
   28234:	000b883a 	mov	r5,zero
   28238:	01000044 	movi	r4,1
   2823c:	d811883a 	mov	r8,sp
   28240:	003e7c06 	br	27c34 <___vfiprintf_internal_r+0xbfc>
   28244:	50800104 	addi	r2,r10,4
   28248:	5480000b 	ldhu	r18,0(r10)
   2824c:	0027883a 	mov	r19,zero
   28250:	483dcf0e 	bge	r9,zero,27990 <___vfiprintf_internal_r+0x958>
   28254:	003fdf06 	br	281d4 <___vfiprintf_internal_r+0x119c>
   28258:	54800017 	ldw	r18,0(r10)
   2825c:	52800104 	addi	r10,r10,4
   28260:	0027883a 	mov	r19,zero
   28264:	da802215 	stw	r10,136(sp)
   28268:	003d5006 	br	277ac <___vfiprintf_internal_r+0x774>
   2826c:	50800104 	addi	r2,r10,4
   28270:	5480000b 	ldhu	r18,0(r10)
   28274:	0027883a 	mov	r19,zero
   28278:	483f7d0e 	bge	r9,zero,28070 <___vfiprintf_internal_r+0x1038>
   2827c:	003ddc06 	br	279f0 <___vfiprintf_internal_r+0x9b8>
   28280:	d8c02215 	stw	r3,136(sp)
   28284:	0039883a 	mov	fp,zero
   28288:	003ddb06 	br	279f8 <___vfiprintf_internal_r+0x9c0>
   2828c:	02800034 	movhi	r10,0
   28290:	52806a04 	addi	r10,r10,424
   28294:	da802415 	stw	r10,144(sp)
   28298:	003e8306 	br	27ca8 <___vfiprintf_internal_r+0xc70>
   2829c:	d8801c17 	ldw	r2,112(sp)
   282a0:	dd002117 	ldw	r20,132(sp)
   282a4:	103eb926 	beq	r2,zero,27d8c <___vfiprintf_internal_r+0xd54>
   282a8:	d9002017 	ldw	r4,128(sp)
   282ac:	d9801a04 	addi	r6,sp,104
   282b0:	a00b883a 	mov	r5,r20
   282b4:	0026f240 	call	26f24 <__sprint_r.part.0>
   282b8:	003eb406 	br	27d8c <___vfiprintf_internal_r+0xd54>
   282bc:	80c00043 	ldbu	r3,1(r16)
   282c0:	a5000814 	ori	r20,r20,32
   282c4:	84000044 	addi	r16,r16,1
   282c8:	18c03fcc 	andi	r3,r3,255
   282cc:	18c0201c 	xori	r3,r3,128
   282d0:	18ffe004 	addi	r3,r3,-128
   282d4:	003bb706 	br	271b4 <___vfiprintf_internal_r+0x17c>
   282d8:	a809883a 	mov	r4,r21
   282dc:	d8c02a15 	stw	r3,168(sp)
   282e0:	da002b15 	stw	r8,172(sp)
   282e4:	0026e8c0 	call	26e8c <strlen>
   282e8:	d8c02a17 	ldw	r3,168(sp)
   282ec:	1027883a 	mov	r19,r2
   282f0:	df001d83 	ldbu	fp,118(sp)
   282f4:	d8c02215 	stw	r3,136(sp)
   282f8:	0013883a 	mov	r9,zero
   282fc:	da002b17 	ldw	r8,172(sp)
   28300:	003c4d06 	br	27438 <___vfiprintf_internal_r+0x400>
   28304:	d9402117 	ldw	r5,132(sp)
   28308:	d9002017 	ldw	r4,128(sp)
   2830c:	d9801a04 	addi	r6,sp,104
   28310:	da402c15 	stw	r9,176(sp)
   28314:	0026f240 	call	26f24 <__sprint_r.part.0>
   28318:	da402c17 	ldw	r9,176(sp)
   2831c:	103e9a1e 	bne	r2,zero,27d88 <___vfiprintf_internal_r+0xd50>
   28320:	d9401b17 	ldw	r5,108(sp)
   28324:	d8801c17 	ldw	r2,112(sp)
   28328:	d811883a 	mov	r8,sp
   2832c:	29000044 	addi	r4,r5,1
   28330:	003e4206 	br	27c3c <___vfiprintf_internal_r+0xc04>
   28334:	d9401b17 	ldw	r5,108(sp)
   28338:	01000034 	movhi	r4,0
   2833c:	21006e04 	addi	r4,r4,440
   28340:	d9002415 	stw	r4,144(sp)
   28344:	29400044 	addi	r5,r5,1
   28348:	003c6d06 	br	27500 <___vfiprintf_internal_r+0x4c8>
   2834c:	0039883a 	mov	fp,zero
   28350:	00800084 	movi	r2,2
   28354:	10803fcc 	andi	r2,r2,255
   28358:	01000044 	movi	r4,1
   2835c:	11001e26 	beq	r2,r4,283d8 <___vfiprintf_internal_r+0x13a0>
   28360:	01000084 	movi	r4,2
   28364:	11001e1e 	bne	r2,r4,283e0 <___vfiprintf_internal_r+0x13a8>
   28368:	1829883a 	mov	r20,r3
   2836c:	003eea06 	br	27f18 <___vfiprintf_internal_r+0xee0>
   28370:	a007883a 	mov	r3,r20
   28374:	00800044 	movi	r2,1
   28378:	003ff606 	br	28354 <___vfiprintf_internal_r+0x131c>
   2837c:	00800184 	movi	r2,6
   28380:	1240012e 	bgeu	r2,r9,28388 <___vfiprintf_internal_r+0x1350>
   28384:	1013883a 	mov	r9,r2
   28388:	4827883a 	mov	r19,r9
   2838c:	4825883a 	mov	r18,r9
   28390:	48001516 	blt	r9,zero,283e8 <___vfiprintf_internal_r+0x13b0>
   28394:	05400034 	movhi	r21,0
   28398:	d8c02215 	stw	r3,136(sp)
   2839c:	ad400e04 	addi	r21,r21,56
   283a0:	003d1406 	br	277f4 <___vfiprintf_internal_r+0x7bc>
   283a4:	02800034 	movhi	r10,0
   283a8:	52806a04 	addi	r10,r10,424
   283ac:	da802415 	stw	r10,144(sp)
   283b0:	200d883a 	mov	r6,r4
   283b4:	003c9106 	br	275fc <___vfiprintf_internal_r+0x5c4>
   283b8:	5021883a 	mov	r16,r10
   283bc:	0013883a 	mov	r9,zero
   283c0:	003b7d06 	br	271b8 <___vfiprintf_internal_r+0x180>
   283c4:	4827883a 	mov	r19,r9
   283c8:	df001d83 	ldbu	fp,118(sp)
   283cc:	d8c02215 	stw	r3,136(sp)
   283d0:	0013883a 	mov	r9,zero
   283d4:	003c1806 	br	27438 <___vfiprintf_internal_r+0x400>
   283d8:	1829883a 	mov	r20,r3
   283dc:	003d1806 	br	27840 <___vfiprintf_internal_r+0x808>
   283e0:	1829883a 	mov	r20,r3
   283e4:	003ccd06 	br	2771c <___vfiprintf_internal_r+0x6e4>
   283e8:	0025883a 	mov	r18,zero
   283ec:	003fe906 	br	28394 <___vfiprintf_internal_r+0x135c>
   283f0:	d8802217 	ldw	r2,136(sp)
   283f4:	80c00043 	ldbu	r3,1(r16)
   283f8:	5021883a 	mov	r16,r10
   283fc:	12400017 	ldw	r9,0(r2)
   28400:	10800104 	addi	r2,r2,4
   28404:	d8802215 	stw	r2,136(sp)
   28408:	483faf0e 	bge	r9,zero,282c8 <___vfiprintf_internal_r+0x1290>
   2840c:	18c03fcc 	andi	r3,r3,255
   28410:	18c0201c 	xori	r3,r3,128
   28414:	027fffc4 	movi	r9,-1
   28418:	18ffe004 	addi	r3,r3,-128
   2841c:	003b6506 	br	271b4 <___vfiprintf_internal_r+0x17c>
   28420:	d9c01d85 	stb	r7,118(sp)
   28424:	003ca006 	br	276a8 <___vfiprintf_internal_r+0x670>
   28428:	d9c01d85 	stb	r7,118(sp)
   2842c:	003cad06 	br	276e4 <___vfiprintf_internal_r+0x6ac>
   28430:	d9c01d85 	stb	r7,118(sp)
   28434:	003d7d06 	br	27a2c <___vfiprintf_internal_r+0x9f4>
   28438:	d9c01d85 	stb	r7,118(sp)
   2843c:	003d5f06 	br	279bc <___vfiprintf_internal_r+0x984>
   28440:	a080004c 	andi	r2,r20,1
   28444:	0039883a 	mov	fp,zero
   28448:	10000526 	beq	r2,zero,28460 <___vfiprintf_internal_r+0x1428>
   2844c:	00800c04 	movi	r2,48
   28450:	d88019c5 	stb	r2,103(sp)
   28454:	dcc02717 	ldw	r19,156(sp)
   28458:	dd4019c4 	addi	r21,sp,103
   2845c:	003bf606 	br	27438 <___vfiprintf_internal_r+0x400>
   28460:	0027883a 	mov	r19,zero
   28464:	dd401a04 	addi	r21,sp,104
   28468:	003bf306 	br	27438 <___vfiprintf_internal_r+0x400>
   2846c:	d9c01d85 	stb	r7,118(sp)
   28470:	003dc806 	br	27b94 <___vfiprintf_internal_r+0xb5c>
   28474:	d9c01d85 	stb	r7,118(sp)
   28478:	003d3a06 	br	27964 <___vfiprintf_internal_r+0x92c>
   2847c:	d9c01d85 	stb	r7,118(sp)
   28480:	003d2a06 	br	2792c <___vfiprintf_internal_r+0x8f4>
   28484:	d9c01d85 	stb	r7,118(sp)
   28488:	003cde06 	br	27804 <___vfiprintf_internal_r+0x7cc>
   2848c:	d9c01d85 	stb	r7,118(sp)
   28490:	003cbc06 	br	27784 <___vfiprintf_internal_r+0x74c>

00028494 <__vfiprintf_internal>:
   28494:	00800034 	movhi	r2,0
   28498:	10876b04 	addi	r2,r2,7596
   2849c:	300f883a 	mov	r7,r6
   284a0:	280d883a 	mov	r6,r5
   284a4:	200b883a 	mov	r5,r4
   284a8:	11000017 	ldw	r4,0(r2)
   284ac:	00270381 	jmpi	27038 <___vfiprintf_internal_r>

000284b0 <__sbprintf>:
   284b0:	2880030b 	ldhu	r2,12(r5)
   284b4:	2ac01917 	ldw	r11,100(r5)
   284b8:	2a80038b 	ldhu	r10,14(r5)
   284bc:	2a400717 	ldw	r9,28(r5)
   284c0:	2a000917 	ldw	r8,36(r5)
   284c4:	defee204 	addi	sp,sp,-1144
   284c8:	00c10004 	movi	r3,1024
   284cc:	dc011a15 	stw	r16,1128(sp)
   284d0:	10bfff4c 	andi	r2,r2,65533
   284d4:	2821883a 	mov	r16,r5
   284d8:	d8cb883a 	add	r5,sp,r3
   284dc:	dc811c15 	stw	r18,1136(sp)
   284e0:	dc411b15 	stw	r17,1132(sp)
   284e4:	dfc11d15 	stw	ra,1140(sp)
   284e8:	2025883a 	mov	r18,r4
   284ec:	d881030d 	sth	r2,1036(sp)
   284f0:	dac11915 	stw	r11,1124(sp)
   284f4:	da81038d 	sth	r10,1038(sp)
   284f8:	da410715 	stw	r9,1052(sp)
   284fc:	da010915 	stw	r8,1060(sp)
   28500:	dec10015 	stw	sp,1024(sp)
   28504:	dec10415 	stw	sp,1040(sp)
   28508:	d8c10215 	stw	r3,1032(sp)
   2850c:	d8c10515 	stw	r3,1044(sp)
   28510:	d8010615 	stw	zero,1048(sp)
   28514:	00270380 	call	27038 <___vfiprintf_internal_r>
   28518:	1023883a 	mov	r17,r2
   2851c:	10000416 	blt	r2,zero,28530 <__sbprintf+0x80>
   28520:	d9410004 	addi	r5,sp,1024
   28524:	9009883a 	mov	r4,r18
   28528:	00243d00 	call	243d0 <_fflush_r>
   2852c:	10000d1e 	bne	r2,zero,28564 <__sbprintf+0xb4>
   28530:	d881030b 	ldhu	r2,1036(sp)
   28534:	1080100c 	andi	r2,r2,64
   28538:	10000326 	beq	r2,zero,28548 <__sbprintf+0x98>
   2853c:	8080030b 	ldhu	r2,12(r16)
   28540:	10801014 	ori	r2,r2,64
   28544:	8080030d 	sth	r2,12(r16)
   28548:	8805883a 	mov	r2,r17
   2854c:	dfc11d17 	ldw	ra,1140(sp)
   28550:	dc811c17 	ldw	r18,1136(sp)
   28554:	dc411b17 	ldw	r17,1132(sp)
   28558:	dc011a17 	ldw	r16,1128(sp)
   2855c:	dec11e04 	addi	sp,sp,1144
   28560:	f800283a 	ret
   28564:	047fffc4 	movi	r17,-1
   28568:	003ff106 	br	28530 <__sbprintf+0x80>

0002856c <_write_r>:
   2856c:	defffd04 	addi	sp,sp,-12
   28570:	2805883a 	mov	r2,r5
   28574:	dc000015 	stw	r16,0(sp)
   28578:	04000034 	movhi	r16,0
   2857c:	dc400115 	stw	r17,4(sp)
   28580:	300b883a 	mov	r5,r6
   28584:	84078204 	addi	r16,r16,7688
   28588:	2023883a 	mov	r17,r4
   2858c:	380d883a 	mov	r6,r7
   28590:	1009883a 	mov	r4,r2
   28594:	dfc00215 	stw	ra,8(sp)
   28598:	80000015 	stw	zero,0(r16)
   2859c:	002d6e40 	call	2d6e4 <write>
   285a0:	00ffffc4 	movi	r3,-1
   285a4:	10c00526 	beq	r2,r3,285bc <_write_r+0x50>
   285a8:	dfc00217 	ldw	ra,8(sp)
   285ac:	dc400117 	ldw	r17,4(sp)
   285b0:	dc000017 	ldw	r16,0(sp)
   285b4:	dec00304 	addi	sp,sp,12
   285b8:	f800283a 	ret
   285bc:	80c00017 	ldw	r3,0(r16)
   285c0:	183ff926 	beq	r3,zero,285a8 <_write_r+0x3c>
   285c4:	88c00015 	stw	r3,0(r17)
   285c8:	003ff706 	br	285a8 <_write_r+0x3c>

000285cc <_close_r>:
   285cc:	defffd04 	addi	sp,sp,-12
   285d0:	dc000015 	stw	r16,0(sp)
   285d4:	04000034 	movhi	r16,0
   285d8:	dc400115 	stw	r17,4(sp)
   285dc:	84078204 	addi	r16,r16,7688
   285e0:	2023883a 	mov	r17,r4
   285e4:	2809883a 	mov	r4,r5
   285e8:	dfc00215 	stw	ra,8(sp)
   285ec:	80000015 	stw	zero,0(r16)
   285f0:	002cd240 	call	2cd24 <close>
   285f4:	00ffffc4 	movi	r3,-1
   285f8:	10c00526 	beq	r2,r3,28610 <_close_r+0x44>
   285fc:	dfc00217 	ldw	ra,8(sp)
   28600:	dc400117 	ldw	r17,4(sp)
   28604:	dc000017 	ldw	r16,0(sp)
   28608:	dec00304 	addi	sp,sp,12
   2860c:	f800283a 	ret
   28610:	80c00017 	ldw	r3,0(r16)
   28614:	183ff926 	beq	r3,zero,285fc <_close_r+0x30>
   28618:	88c00015 	stw	r3,0(r17)
   2861c:	003ff706 	br	285fc <_close_r+0x30>

00028620 <_calloc_r>:
   28620:	298b383a 	mul	r5,r5,r6
   28624:	defffe04 	addi	sp,sp,-8
   28628:	dfc00115 	stw	ra,4(sp)
   2862c:	dc000015 	stw	r16,0(sp)
   28630:	00250500 	call	25050 <_malloc_r>
   28634:	10002926 	beq	r2,zero,286dc <_calloc_r+0xbc>
   28638:	11bfff17 	ldw	r6,-4(r2)
   2863c:	1021883a 	mov	r16,r2
   28640:	00bfff04 	movi	r2,-4
   28644:	308c703a 	and	r6,r6,r2
   28648:	00c00904 	movi	r3,36
   2864c:	308d883a 	add	r6,r6,r2
   28650:	19801636 	bltu	r3,r6,286ac <_calloc_r+0x8c>
   28654:	008004c4 	movi	r2,19
   28658:	11800b2e 	bgeu	r2,r6,28688 <_calloc_r+0x68>
   2865c:	80000015 	stw	zero,0(r16)
   28660:	80000115 	stw	zero,4(r16)
   28664:	008006c4 	movi	r2,27
   28668:	11801a2e 	bgeu	r2,r6,286d4 <_calloc_r+0xb4>
   2866c:	80000215 	stw	zero,8(r16)
   28670:	80000315 	stw	zero,12(r16)
   28674:	30c0151e 	bne	r6,r3,286cc <_calloc_r+0xac>
   28678:	80000415 	stw	zero,16(r16)
   2867c:	80800604 	addi	r2,r16,24
   28680:	80000515 	stw	zero,20(r16)
   28684:	00000106 	br	2868c <_calloc_r+0x6c>
   28688:	8005883a 	mov	r2,r16
   2868c:	10000015 	stw	zero,0(r2)
   28690:	10000115 	stw	zero,4(r2)
   28694:	10000215 	stw	zero,8(r2)
   28698:	8005883a 	mov	r2,r16
   2869c:	dfc00117 	ldw	ra,4(sp)
   286a0:	dc000017 	ldw	r16,0(sp)
   286a4:	dec00204 	addi	sp,sp,8
   286a8:	f800283a 	ret
   286ac:	000b883a 	mov	r5,zero
   286b0:	8009883a 	mov	r4,r16
   286b4:	0025a880 	call	25a88 <memset>
   286b8:	8005883a 	mov	r2,r16
   286bc:	dfc00117 	ldw	ra,4(sp)
   286c0:	dc000017 	ldw	r16,0(sp)
   286c4:	dec00204 	addi	sp,sp,8
   286c8:	f800283a 	ret
   286cc:	80800404 	addi	r2,r16,16
   286d0:	003fee06 	br	2868c <_calloc_r+0x6c>
   286d4:	80800204 	addi	r2,r16,8
   286d8:	003fec06 	br	2868c <_calloc_r+0x6c>
   286dc:	0005883a 	mov	r2,zero
   286e0:	003fee06 	br	2869c <_calloc_r+0x7c>

000286e4 <_fclose_r>:
   286e4:	28003926 	beq	r5,zero,287cc <_fclose_r+0xe8>
   286e8:	defffc04 	addi	sp,sp,-16
   286ec:	dc400115 	stw	r17,4(sp)
   286f0:	dc000015 	stw	r16,0(sp)
   286f4:	dfc00315 	stw	ra,12(sp)
   286f8:	dc800215 	stw	r18,8(sp)
   286fc:	2023883a 	mov	r17,r4
   28700:	2821883a 	mov	r16,r5
   28704:	20000226 	beq	r4,zero,28710 <_fclose_r+0x2c>
   28708:	20800e17 	ldw	r2,56(r4)
   2870c:	10002726 	beq	r2,zero,287ac <_fclose_r+0xc8>
   28710:	8080030f 	ldh	r2,12(r16)
   28714:	1000071e 	bne	r2,zero,28734 <_fclose_r+0x50>
   28718:	0005883a 	mov	r2,zero
   2871c:	dfc00317 	ldw	ra,12(sp)
   28720:	dc800217 	ldw	r18,8(sp)
   28724:	dc400117 	ldw	r17,4(sp)
   28728:	dc000017 	ldw	r16,0(sp)
   2872c:	dec00404 	addi	sp,sp,16
   28730:	f800283a 	ret
   28734:	800b883a 	mov	r5,r16
   28738:	8809883a 	mov	r4,r17
   2873c:	00241b40 	call	241b4 <__sflush_r>
   28740:	1025883a 	mov	r18,r2
   28744:	80800b17 	ldw	r2,44(r16)
   28748:	10000426 	beq	r2,zero,2875c <_fclose_r+0x78>
   2874c:	81400717 	ldw	r5,28(r16)
   28750:	8809883a 	mov	r4,r17
   28754:	103ee83a 	callr	r2
   28758:	10001616 	blt	r2,zero,287b4 <_fclose_r+0xd0>
   2875c:	8080030b 	ldhu	r2,12(r16)
   28760:	1080200c 	andi	r2,r2,128
   28764:	1000151e 	bne	r2,zero,287bc <_fclose_r+0xd8>
   28768:	81400c17 	ldw	r5,48(r16)
   2876c:	28000526 	beq	r5,zero,28784 <_fclose_r+0xa0>
   28770:	80801004 	addi	r2,r16,64
   28774:	28800226 	beq	r5,r2,28780 <_fclose_r+0x9c>
   28778:	8809883a 	mov	r4,r17
   2877c:	00249200 	call	24920 <_free_r>
   28780:	80000c15 	stw	zero,48(r16)
   28784:	81401117 	ldw	r5,68(r16)
   28788:	28000326 	beq	r5,zero,28798 <_fclose_r+0xb4>
   2878c:	8809883a 	mov	r4,r17
   28790:	00249200 	call	24920 <_free_r>
   28794:	80001115 	stw	zero,68(r16)
   28798:	00247bc0 	call	247bc <__sfp_lock_acquire>
   2879c:	8000030d 	sth	zero,12(r16)
   287a0:	00247c00 	call	247c0 <__sfp_lock_release>
   287a4:	9005883a 	mov	r2,r18
   287a8:	003fdc06 	br	2871c <_fclose_r+0x38>
   287ac:	00247ac0 	call	247ac <__sinit>
   287b0:	003fd706 	br	28710 <_fclose_r+0x2c>
   287b4:	04bfffc4 	movi	r18,-1
   287b8:	003fe806 	br	2875c <_fclose_r+0x78>
   287bc:	81400417 	ldw	r5,16(r16)
   287c0:	8809883a 	mov	r4,r17
   287c4:	00249200 	call	24920 <_free_r>
   287c8:	003fe706 	br	28768 <_fclose_r+0x84>
   287cc:	0005883a 	mov	r2,zero
   287d0:	f800283a 	ret

000287d4 <fclose>:
   287d4:	00800034 	movhi	r2,0
   287d8:	10876b04 	addi	r2,r2,7596
   287dc:	200b883a 	mov	r5,r4
   287e0:	11000017 	ldw	r4,0(r2)
   287e4:	00286e41 	jmpi	286e4 <_fclose_r>

000287e8 <__fputwc>:
   287e8:	defff804 	addi	sp,sp,-32
   287ec:	dcc00415 	stw	r19,16(sp)
   287f0:	dc800315 	stw	r18,12(sp)
   287f4:	dc000115 	stw	r16,4(sp)
   287f8:	dfc00715 	stw	ra,28(sp)
   287fc:	dd400615 	stw	r21,24(sp)
   28800:	dd000515 	stw	r20,20(sp)
   28804:	dc400215 	stw	r17,8(sp)
   28808:	2027883a 	mov	r19,r4
   2880c:	2825883a 	mov	r18,r5
   28810:	3021883a 	mov	r16,r6
   28814:	0024e400 	call	24e40 <__locale_mb_cur_max>
   28818:	00c00044 	movi	r3,1
   2881c:	10c03e26 	beq	r2,r3,28918 <__fputwc+0x130>
   28820:	81c01704 	addi	r7,r16,92
   28824:	900d883a 	mov	r6,r18
   28828:	d80b883a 	mov	r5,sp
   2882c:	9809883a 	mov	r4,r19
   28830:	00298340 	call	29834 <_wcrtomb_r>
   28834:	1029883a 	mov	r20,r2
   28838:	00bfffc4 	movi	r2,-1
   2883c:	a0802026 	beq	r20,r2,288c0 <__fputwc+0xd8>
   28840:	d9400003 	ldbu	r5,0(sp)
   28844:	a0001c26 	beq	r20,zero,288b8 <__fputwc+0xd0>
   28848:	0023883a 	mov	r17,zero
   2884c:	05400284 	movi	r21,10
   28850:	00000906 	br	28878 <__fputwc+0x90>
   28854:	80800017 	ldw	r2,0(r16)
   28858:	11400005 	stb	r5,0(r2)
   2885c:	80c00017 	ldw	r3,0(r16)
   28860:	18c00044 	addi	r3,r3,1
   28864:	80c00015 	stw	r3,0(r16)
   28868:	8c400044 	addi	r17,r17,1
   2886c:	dc45883a 	add	r2,sp,r17
   28870:	8d00112e 	bgeu	r17,r20,288b8 <__fputwc+0xd0>
   28874:	11400003 	ldbu	r5,0(r2)
   28878:	80c00217 	ldw	r3,8(r16)
   2887c:	18ffffc4 	addi	r3,r3,-1
   28880:	80c00215 	stw	r3,8(r16)
   28884:	183ff30e 	bge	r3,zero,28854 <__fputwc+0x6c>
   28888:	80800617 	ldw	r2,24(r16)
   2888c:	18801916 	blt	r3,r2,288f4 <__fputwc+0x10c>
   28890:	80800017 	ldw	r2,0(r16)
   28894:	11400005 	stb	r5,0(r2)
   28898:	80800017 	ldw	r2,0(r16)
   2889c:	10c00003 	ldbu	r3,0(r2)
   288a0:	10800044 	addi	r2,r2,1
   288a4:	1d402326 	beq	r3,r21,28934 <__fputwc+0x14c>
   288a8:	80800015 	stw	r2,0(r16)
   288ac:	8c400044 	addi	r17,r17,1
   288b0:	dc45883a 	add	r2,sp,r17
   288b4:	8d3fef36 	bltu	r17,r20,28874 <__fputwc+0x8c>
   288b8:	9005883a 	mov	r2,r18
   288bc:	00000406 	br	288d0 <__fputwc+0xe8>
   288c0:	80c0030b 	ldhu	r3,12(r16)
   288c4:	a005883a 	mov	r2,r20
   288c8:	18c01014 	ori	r3,r3,64
   288cc:	80c0030d 	sth	r3,12(r16)
   288d0:	dfc00717 	ldw	ra,28(sp)
   288d4:	dd400617 	ldw	r21,24(sp)
   288d8:	dd000517 	ldw	r20,20(sp)
   288dc:	dcc00417 	ldw	r19,16(sp)
   288e0:	dc800317 	ldw	r18,12(sp)
   288e4:	dc400217 	ldw	r17,8(sp)
   288e8:	dc000117 	ldw	r16,4(sp)
   288ec:	dec00804 	addi	sp,sp,32
   288f0:	f800283a 	ret
   288f4:	800d883a 	mov	r6,r16
   288f8:	29403fcc 	andi	r5,r5,255
   288fc:	9809883a 	mov	r4,r19
   28900:	00296dc0 	call	296dc <__swbuf_r>
   28904:	10bfffe0 	cmpeqi	r2,r2,-1
   28908:	10803fcc 	andi	r2,r2,255
   2890c:	103fd626 	beq	r2,zero,28868 <__fputwc+0x80>
   28910:	00bfffc4 	movi	r2,-1
   28914:	003fee06 	br	288d0 <__fputwc+0xe8>
   28918:	90ffffc4 	addi	r3,r18,-1
   2891c:	01003f84 	movi	r4,254
   28920:	20ffbf36 	bltu	r4,r3,28820 <__fputwc+0x38>
   28924:	900b883a 	mov	r5,r18
   28928:	dc800005 	stb	r18,0(sp)
   2892c:	1029883a 	mov	r20,r2
   28930:	003fc506 	br	28848 <__fputwc+0x60>
   28934:	800d883a 	mov	r6,r16
   28938:	a80b883a 	mov	r5,r21
   2893c:	9809883a 	mov	r4,r19
   28940:	00296dc0 	call	296dc <__swbuf_r>
   28944:	10bfffe0 	cmpeqi	r2,r2,-1
   28948:	003fef06 	br	28908 <__fputwc+0x120>

0002894c <_fputwc_r>:
   2894c:	3080030b 	ldhu	r2,12(r6)
   28950:	10c8000c 	andi	r3,r2,8192
   28954:	1800051e 	bne	r3,zero,2896c <_fputwc_r+0x20>
   28958:	30c01917 	ldw	r3,100(r6)
   2895c:	10880014 	ori	r2,r2,8192
   28960:	3080030d 	sth	r2,12(r6)
   28964:	18880014 	ori	r2,r3,8192
   28968:	30801915 	stw	r2,100(r6)
   2896c:	00287e81 	jmpi	287e8 <__fputwc>

00028970 <fputwc>:
   28970:	00800034 	movhi	r2,0
   28974:	defffc04 	addi	sp,sp,-16
   28978:	10876b04 	addi	r2,r2,7596
   2897c:	dc000115 	stw	r16,4(sp)
   28980:	14000017 	ldw	r16,0(r2)
   28984:	dc400215 	stw	r17,8(sp)
   28988:	dfc00315 	stw	ra,12(sp)
   2898c:	2023883a 	mov	r17,r4
   28990:	80000226 	beq	r16,zero,2899c <fputwc+0x2c>
   28994:	80800e17 	ldw	r2,56(r16)
   28998:	10001026 	beq	r2,zero,289dc <fputwc+0x6c>
   2899c:	2880030b 	ldhu	r2,12(r5)
   289a0:	10c8000c 	andi	r3,r2,8192
   289a4:	1800051e 	bne	r3,zero,289bc <fputwc+0x4c>
   289a8:	28c01917 	ldw	r3,100(r5)
   289ac:	10880014 	ori	r2,r2,8192
   289b0:	2880030d 	sth	r2,12(r5)
   289b4:	18880014 	ori	r2,r3,8192
   289b8:	28801915 	stw	r2,100(r5)
   289bc:	280d883a 	mov	r6,r5
   289c0:	8009883a 	mov	r4,r16
   289c4:	880b883a 	mov	r5,r17
   289c8:	dfc00317 	ldw	ra,12(sp)
   289cc:	dc400217 	ldw	r17,8(sp)
   289d0:	dc000117 	ldw	r16,4(sp)
   289d4:	dec00404 	addi	sp,sp,16
   289d8:	00287e81 	jmpi	287e8 <__fputwc>
   289dc:	8009883a 	mov	r4,r16
   289e0:	d9400015 	stw	r5,0(sp)
   289e4:	00247ac0 	call	247ac <__sinit>
   289e8:	d9400017 	ldw	r5,0(sp)
   289ec:	003feb06 	br	2899c <fputwc+0x2c>

000289f0 <_fstat_r>:
   289f0:	defffd04 	addi	sp,sp,-12
   289f4:	2805883a 	mov	r2,r5
   289f8:	dc000015 	stw	r16,0(sp)
   289fc:	04000034 	movhi	r16,0
   28a00:	dc400115 	stw	r17,4(sp)
   28a04:	84078204 	addi	r16,r16,7688
   28a08:	2023883a 	mov	r17,r4
   28a0c:	300b883a 	mov	r5,r6
   28a10:	1009883a 	mov	r4,r2
   28a14:	dfc00215 	stw	ra,8(sp)
   28a18:	80000015 	stw	zero,0(r16)
   28a1c:	002ce5c0 	call	2ce5c <fstat>
   28a20:	00ffffc4 	movi	r3,-1
   28a24:	10c00526 	beq	r2,r3,28a3c <_fstat_r+0x4c>
   28a28:	dfc00217 	ldw	ra,8(sp)
   28a2c:	dc400117 	ldw	r17,4(sp)
   28a30:	dc000017 	ldw	r16,0(sp)
   28a34:	dec00304 	addi	sp,sp,12
   28a38:	f800283a 	ret
   28a3c:	80c00017 	ldw	r3,0(r16)
   28a40:	183ff926 	beq	r3,zero,28a28 <_fstat_r+0x38>
   28a44:	88c00015 	stw	r3,0(r17)
   28a48:	003ff706 	br	28a28 <_fstat_r+0x38>

00028a4c <__sfvwrite_r>:
   28a4c:	30800217 	ldw	r2,8(r6)
   28a50:	10006726 	beq	r2,zero,28bf0 <__sfvwrite_r+0x1a4>
   28a54:	28c0030b 	ldhu	r3,12(r5)
   28a58:	defff404 	addi	sp,sp,-48
   28a5c:	dd400715 	stw	r21,28(sp)
   28a60:	dd000615 	stw	r20,24(sp)
   28a64:	dc000215 	stw	r16,8(sp)
   28a68:	dfc00b15 	stw	ra,44(sp)
   28a6c:	df000a15 	stw	fp,40(sp)
   28a70:	ddc00915 	stw	r23,36(sp)
   28a74:	dd800815 	stw	r22,32(sp)
   28a78:	dcc00515 	stw	r19,20(sp)
   28a7c:	dc800415 	stw	r18,16(sp)
   28a80:	dc400315 	stw	r17,12(sp)
   28a84:	1880020c 	andi	r2,r3,8
   28a88:	2821883a 	mov	r16,r5
   28a8c:	202b883a 	mov	r21,r4
   28a90:	3029883a 	mov	r20,r6
   28a94:	10002726 	beq	r2,zero,28b34 <__sfvwrite_r+0xe8>
   28a98:	28800417 	ldw	r2,16(r5)
   28a9c:	10002526 	beq	r2,zero,28b34 <__sfvwrite_r+0xe8>
   28aa0:	1880008c 	andi	r2,r3,2
   28aa4:	a4400017 	ldw	r17,0(r20)
   28aa8:	10002a26 	beq	r2,zero,28b54 <__sfvwrite_r+0x108>
   28aac:	05a00034 	movhi	r22,32768
   28ab0:	0027883a 	mov	r19,zero
   28ab4:	0025883a 	mov	r18,zero
   28ab8:	b5bf0004 	addi	r22,r22,-1024
   28abc:	980d883a 	mov	r6,r19
   28ac0:	a809883a 	mov	r4,r21
   28ac4:	90004626 	beq	r18,zero,28be0 <__sfvwrite_r+0x194>
   28ac8:	900f883a 	mov	r7,r18
   28acc:	b480022e 	bgeu	r22,r18,28ad8 <__sfvwrite_r+0x8c>
   28ad0:	01e00034 	movhi	r7,32768
   28ad4:	39ff0004 	addi	r7,r7,-1024
   28ad8:	80800917 	ldw	r2,36(r16)
   28adc:	81400717 	ldw	r5,28(r16)
   28ae0:	103ee83a 	callr	r2
   28ae4:	0080570e 	bge	zero,r2,28c44 <__sfvwrite_r+0x1f8>
   28ae8:	a0c00217 	ldw	r3,8(r20)
   28aec:	98a7883a 	add	r19,r19,r2
   28af0:	90a5c83a 	sub	r18,r18,r2
   28af4:	1885c83a 	sub	r2,r3,r2
   28af8:	a0800215 	stw	r2,8(r20)
   28afc:	103fef1e 	bne	r2,zero,28abc <__sfvwrite_r+0x70>
   28b00:	0005883a 	mov	r2,zero
   28b04:	dfc00b17 	ldw	ra,44(sp)
   28b08:	df000a17 	ldw	fp,40(sp)
   28b0c:	ddc00917 	ldw	r23,36(sp)
   28b10:	dd800817 	ldw	r22,32(sp)
   28b14:	dd400717 	ldw	r21,28(sp)
   28b18:	dd000617 	ldw	r20,24(sp)
   28b1c:	dcc00517 	ldw	r19,20(sp)
   28b20:	dc800417 	ldw	r18,16(sp)
   28b24:	dc400317 	ldw	r17,12(sp)
   28b28:	dc000217 	ldw	r16,8(sp)
   28b2c:	dec00c04 	addi	sp,sp,48
   28b30:	f800283a 	ret
   28b34:	800b883a 	mov	r5,r16
   28b38:	a809883a 	mov	r4,r21
   28b3c:	00227d80 	call	227d8 <__swsetup_r>
   28b40:	1000eb1e 	bne	r2,zero,28ef0 <__sfvwrite_r+0x4a4>
   28b44:	80c0030b 	ldhu	r3,12(r16)
   28b48:	a4400017 	ldw	r17,0(r20)
   28b4c:	1880008c 	andi	r2,r3,2
   28b50:	103fd61e 	bne	r2,zero,28aac <__sfvwrite_r+0x60>
   28b54:	1880004c 	andi	r2,r3,1
   28b58:	10003f1e 	bne	r2,zero,28c58 <__sfvwrite_r+0x20c>
   28b5c:	0039883a 	mov	fp,zero
   28b60:	0025883a 	mov	r18,zero
   28b64:	90001a26 	beq	r18,zero,28bd0 <__sfvwrite_r+0x184>
   28b68:	1880800c 	andi	r2,r3,512
   28b6c:	84c00217 	ldw	r19,8(r16)
   28b70:	10002126 	beq	r2,zero,28bf8 <__sfvwrite_r+0x1ac>
   28b74:	982f883a 	mov	r23,r19
   28b78:	94c09336 	bltu	r18,r19,28dc8 <__sfvwrite_r+0x37c>
   28b7c:	1881200c 	andi	r2,r3,1152
   28b80:	10009e1e 	bne	r2,zero,28dfc <__sfvwrite_r+0x3b0>
   28b84:	81000017 	ldw	r4,0(r16)
   28b88:	b80d883a 	mov	r6,r23
   28b8c:	e00b883a 	mov	r5,fp
   28b90:	0028fbc0 	call	28fbc <memmove>
   28b94:	80c00217 	ldw	r3,8(r16)
   28b98:	81000017 	ldw	r4,0(r16)
   28b9c:	9005883a 	mov	r2,r18
   28ba0:	1ce7c83a 	sub	r19,r3,r19
   28ba4:	25cf883a 	add	r7,r4,r23
   28ba8:	84c00215 	stw	r19,8(r16)
   28bac:	81c00015 	stw	r7,0(r16)
   28bb0:	a0c00217 	ldw	r3,8(r20)
   28bb4:	e0b9883a 	add	fp,fp,r2
   28bb8:	90a5c83a 	sub	r18,r18,r2
   28bbc:	18a7c83a 	sub	r19,r3,r2
   28bc0:	a4c00215 	stw	r19,8(r20)
   28bc4:	983fce26 	beq	r19,zero,28b00 <__sfvwrite_r+0xb4>
   28bc8:	80c0030b 	ldhu	r3,12(r16)
   28bcc:	903fe61e 	bne	r18,zero,28b68 <__sfvwrite_r+0x11c>
   28bd0:	8f000017 	ldw	fp,0(r17)
   28bd4:	8c800117 	ldw	r18,4(r17)
   28bd8:	8c400204 	addi	r17,r17,8
   28bdc:	003fe106 	br	28b64 <__sfvwrite_r+0x118>
   28be0:	8cc00017 	ldw	r19,0(r17)
   28be4:	8c800117 	ldw	r18,4(r17)
   28be8:	8c400204 	addi	r17,r17,8
   28bec:	003fb306 	br	28abc <__sfvwrite_r+0x70>
   28bf0:	0005883a 	mov	r2,zero
   28bf4:	f800283a 	ret
   28bf8:	81000017 	ldw	r4,0(r16)
   28bfc:	80800417 	ldw	r2,16(r16)
   28c00:	11005736 	bltu	r2,r4,28d60 <__sfvwrite_r+0x314>
   28c04:	85c00517 	ldw	r23,20(r16)
   28c08:	95c05536 	bltu	r18,r23,28d60 <__sfvwrite_r+0x314>
   28c0c:	00a00034 	movhi	r2,32768
   28c10:	10bfffc4 	addi	r2,r2,-1
   28c14:	9009883a 	mov	r4,r18
   28c18:	1480012e 	bgeu	r2,r18,28c20 <__sfvwrite_r+0x1d4>
   28c1c:	1009883a 	mov	r4,r2
   28c20:	b80b883a 	mov	r5,r23
   28c24:	002a4cc0 	call	2a4cc <__divsi3>
   28c28:	15cf383a 	mul	r7,r2,r23
   28c2c:	81400717 	ldw	r5,28(r16)
   28c30:	80800917 	ldw	r2,36(r16)
   28c34:	e00d883a 	mov	r6,fp
   28c38:	a809883a 	mov	r4,r21
   28c3c:	103ee83a 	callr	r2
   28c40:	00bfdb16 	blt	zero,r2,28bb0 <__sfvwrite_r+0x164>
   28c44:	8080030b 	ldhu	r2,12(r16)
   28c48:	10801014 	ori	r2,r2,64
   28c4c:	8080030d 	sth	r2,12(r16)
   28c50:	00bfffc4 	movi	r2,-1
   28c54:	003fab06 	br	28b04 <__sfvwrite_r+0xb8>
   28c58:	0027883a 	mov	r19,zero
   28c5c:	0011883a 	mov	r8,zero
   28c60:	0039883a 	mov	fp,zero
   28c64:	0025883a 	mov	r18,zero
   28c68:	90001f26 	beq	r18,zero,28ce8 <__sfvwrite_r+0x29c>
   28c6c:	40005a26 	beq	r8,zero,28dd8 <__sfvwrite_r+0x38c>
   28c70:	982d883a 	mov	r22,r19
   28c74:	94c0012e 	bgeu	r18,r19,28c7c <__sfvwrite_r+0x230>
   28c78:	902d883a 	mov	r22,r18
   28c7c:	81000017 	ldw	r4,0(r16)
   28c80:	80800417 	ldw	r2,16(r16)
   28c84:	b02f883a 	mov	r23,r22
   28c88:	81c00517 	ldw	r7,20(r16)
   28c8c:	1100032e 	bgeu	r2,r4,28c9c <__sfvwrite_r+0x250>
   28c90:	80c00217 	ldw	r3,8(r16)
   28c94:	38c7883a 	add	r3,r7,r3
   28c98:	1d801816 	blt	r3,r22,28cfc <__sfvwrite_r+0x2b0>
   28c9c:	b1c03e16 	blt	r22,r7,28d98 <__sfvwrite_r+0x34c>
   28ca0:	80800917 	ldw	r2,36(r16)
   28ca4:	81400717 	ldw	r5,28(r16)
   28ca8:	e00d883a 	mov	r6,fp
   28cac:	da000115 	stw	r8,4(sp)
   28cb0:	a809883a 	mov	r4,r21
   28cb4:	103ee83a 	callr	r2
   28cb8:	102f883a 	mov	r23,r2
   28cbc:	da000117 	ldw	r8,4(sp)
   28cc0:	00bfe00e 	bge	zero,r2,28c44 <__sfvwrite_r+0x1f8>
   28cc4:	9de7c83a 	sub	r19,r19,r23
   28cc8:	98001f26 	beq	r19,zero,28d48 <__sfvwrite_r+0x2fc>
   28ccc:	a0800217 	ldw	r2,8(r20)
   28cd0:	e5f9883a 	add	fp,fp,r23
   28cd4:	95e5c83a 	sub	r18,r18,r23
   28cd8:	15efc83a 	sub	r23,r2,r23
   28cdc:	a5c00215 	stw	r23,8(r20)
   28ce0:	b83f8726 	beq	r23,zero,28b00 <__sfvwrite_r+0xb4>
   28ce4:	903fe11e 	bne	r18,zero,28c6c <__sfvwrite_r+0x220>
   28ce8:	8f000017 	ldw	fp,0(r17)
   28cec:	8c800117 	ldw	r18,4(r17)
   28cf0:	0011883a 	mov	r8,zero
   28cf4:	8c400204 	addi	r17,r17,8
   28cf8:	003fdb06 	br	28c68 <__sfvwrite_r+0x21c>
   28cfc:	180d883a 	mov	r6,r3
   28d00:	e00b883a 	mov	r5,fp
   28d04:	da000115 	stw	r8,4(sp)
   28d08:	d8c00015 	stw	r3,0(sp)
   28d0c:	0028fbc0 	call	28fbc <memmove>
   28d10:	d8c00017 	ldw	r3,0(sp)
   28d14:	80800017 	ldw	r2,0(r16)
   28d18:	800b883a 	mov	r5,r16
   28d1c:	a809883a 	mov	r4,r21
   28d20:	10c5883a 	add	r2,r2,r3
   28d24:	80800015 	stw	r2,0(r16)
   28d28:	d8c00015 	stw	r3,0(sp)
   28d2c:	00243d00 	call	243d0 <_fflush_r>
   28d30:	d8c00017 	ldw	r3,0(sp)
   28d34:	da000117 	ldw	r8,4(sp)
   28d38:	103fc21e 	bne	r2,zero,28c44 <__sfvwrite_r+0x1f8>
   28d3c:	182f883a 	mov	r23,r3
   28d40:	9de7c83a 	sub	r19,r19,r23
   28d44:	983fe11e 	bne	r19,zero,28ccc <__sfvwrite_r+0x280>
   28d48:	800b883a 	mov	r5,r16
   28d4c:	a809883a 	mov	r4,r21
   28d50:	00243d00 	call	243d0 <_fflush_r>
   28d54:	103fbb1e 	bne	r2,zero,28c44 <__sfvwrite_r+0x1f8>
   28d58:	0011883a 	mov	r8,zero
   28d5c:	003fdb06 	br	28ccc <__sfvwrite_r+0x280>
   28d60:	94c0012e 	bgeu	r18,r19,28d68 <__sfvwrite_r+0x31c>
   28d64:	9027883a 	mov	r19,r18
   28d68:	980d883a 	mov	r6,r19
   28d6c:	e00b883a 	mov	r5,fp
   28d70:	0028fbc0 	call	28fbc <memmove>
   28d74:	80800217 	ldw	r2,8(r16)
   28d78:	80c00017 	ldw	r3,0(r16)
   28d7c:	14c5c83a 	sub	r2,r2,r19
   28d80:	1cc7883a 	add	r3,r3,r19
   28d84:	80800215 	stw	r2,8(r16)
   28d88:	80c00015 	stw	r3,0(r16)
   28d8c:	10004326 	beq	r2,zero,28e9c <__sfvwrite_r+0x450>
   28d90:	9805883a 	mov	r2,r19
   28d94:	003f8606 	br	28bb0 <__sfvwrite_r+0x164>
   28d98:	b00d883a 	mov	r6,r22
   28d9c:	e00b883a 	mov	r5,fp
   28da0:	da000115 	stw	r8,4(sp)
   28da4:	0028fbc0 	call	28fbc <memmove>
   28da8:	80800217 	ldw	r2,8(r16)
   28dac:	80c00017 	ldw	r3,0(r16)
   28db0:	da000117 	ldw	r8,4(sp)
   28db4:	1585c83a 	sub	r2,r2,r22
   28db8:	1dad883a 	add	r22,r3,r22
   28dbc:	80800215 	stw	r2,8(r16)
   28dc0:	85800015 	stw	r22,0(r16)
   28dc4:	003fbf06 	br	28cc4 <__sfvwrite_r+0x278>
   28dc8:	81000017 	ldw	r4,0(r16)
   28dcc:	9027883a 	mov	r19,r18
   28dd0:	902f883a 	mov	r23,r18
   28dd4:	003f6c06 	br	28b88 <__sfvwrite_r+0x13c>
   28dd8:	900d883a 	mov	r6,r18
   28ddc:	01400284 	movi	r5,10
   28de0:	e009883a 	mov	r4,fp
   28de4:	002585c0 	call	2585c <memchr>
   28de8:	10003e26 	beq	r2,zero,28ee4 <__sfvwrite_r+0x498>
   28dec:	10800044 	addi	r2,r2,1
   28df0:	1727c83a 	sub	r19,r2,fp
   28df4:	02000044 	movi	r8,1
   28df8:	003f9d06 	br	28c70 <__sfvwrite_r+0x224>
   28dfc:	80800517 	ldw	r2,20(r16)
   28e00:	81400417 	ldw	r5,16(r16)
   28e04:	81c00017 	ldw	r7,0(r16)
   28e08:	10a7883a 	add	r19,r2,r2
   28e0c:	9885883a 	add	r2,r19,r2
   28e10:	1026d7fa 	srli	r19,r2,31
   28e14:	396dc83a 	sub	r22,r7,r5
   28e18:	b1000044 	addi	r4,r22,1
   28e1c:	9885883a 	add	r2,r19,r2
   28e20:	1027d07a 	srai	r19,r2,1
   28e24:	2485883a 	add	r2,r4,r18
   28e28:	980d883a 	mov	r6,r19
   28e2c:	9880022e 	bgeu	r19,r2,28e38 <__sfvwrite_r+0x3ec>
   28e30:	1027883a 	mov	r19,r2
   28e34:	100d883a 	mov	r6,r2
   28e38:	18c1000c 	andi	r3,r3,1024
   28e3c:	18001c26 	beq	r3,zero,28eb0 <__sfvwrite_r+0x464>
   28e40:	300b883a 	mov	r5,r6
   28e44:	a809883a 	mov	r4,r21
   28e48:	00250500 	call	25050 <_malloc_r>
   28e4c:	102f883a 	mov	r23,r2
   28e50:	10002926 	beq	r2,zero,28ef8 <__sfvwrite_r+0x4ac>
   28e54:	81400417 	ldw	r5,16(r16)
   28e58:	b00d883a 	mov	r6,r22
   28e5c:	1009883a 	mov	r4,r2
   28e60:	00259400 	call	25940 <memcpy>
   28e64:	8080030b 	ldhu	r2,12(r16)
   28e68:	00fedfc4 	movi	r3,-1153
   28e6c:	10c4703a 	and	r2,r2,r3
   28e70:	10802014 	ori	r2,r2,128
   28e74:	8080030d 	sth	r2,12(r16)
   28e78:	bd89883a 	add	r4,r23,r22
   28e7c:	9d8fc83a 	sub	r7,r19,r22
   28e80:	85c00415 	stw	r23,16(r16)
   28e84:	84c00515 	stw	r19,20(r16)
   28e88:	81000015 	stw	r4,0(r16)
   28e8c:	9027883a 	mov	r19,r18
   28e90:	81c00215 	stw	r7,8(r16)
   28e94:	902f883a 	mov	r23,r18
   28e98:	003f3b06 	br	28b88 <__sfvwrite_r+0x13c>
   28e9c:	800b883a 	mov	r5,r16
   28ea0:	a809883a 	mov	r4,r21
   28ea4:	00243d00 	call	243d0 <_fflush_r>
   28ea8:	103fb926 	beq	r2,zero,28d90 <__sfvwrite_r+0x344>
   28eac:	003f6506 	br	28c44 <__sfvwrite_r+0x1f8>
   28eb0:	a809883a 	mov	r4,r21
   28eb4:	00291780 	call	29178 <_realloc_r>
   28eb8:	102f883a 	mov	r23,r2
   28ebc:	103fee1e 	bne	r2,zero,28e78 <__sfvwrite_r+0x42c>
   28ec0:	81400417 	ldw	r5,16(r16)
   28ec4:	a809883a 	mov	r4,r21
   28ec8:	00249200 	call	24920 <_free_r>
   28ecc:	8080030b 	ldhu	r2,12(r16)
   28ed0:	00ffdfc4 	movi	r3,-129
   28ed4:	1884703a 	and	r2,r3,r2
   28ed8:	00c00304 	movi	r3,12
   28edc:	a8c00015 	stw	r3,0(r21)
   28ee0:	003f5906 	br	28c48 <__sfvwrite_r+0x1fc>
   28ee4:	94c00044 	addi	r19,r18,1
   28ee8:	02000044 	movi	r8,1
   28eec:	003f6006 	br	28c70 <__sfvwrite_r+0x224>
   28ef0:	00bfffc4 	movi	r2,-1
   28ef4:	003f0306 	br	28b04 <__sfvwrite_r+0xb8>
   28ef8:	00800304 	movi	r2,12
   28efc:	a8800015 	stw	r2,0(r21)
   28f00:	8080030b 	ldhu	r2,12(r16)
   28f04:	003f5006 	br	28c48 <__sfvwrite_r+0x1fc>

00028f08 <_isatty_r>:
   28f08:	defffd04 	addi	sp,sp,-12
   28f0c:	dc000015 	stw	r16,0(sp)
   28f10:	04000034 	movhi	r16,0
   28f14:	dc400115 	stw	r17,4(sp)
   28f18:	84078204 	addi	r16,r16,7688
   28f1c:	2023883a 	mov	r17,r4
   28f20:	2809883a 	mov	r4,r5
   28f24:	dfc00215 	stw	ra,8(sp)
   28f28:	80000015 	stw	zero,0(r16)
   28f2c:	002d0c80 	call	2d0c8 <isatty>
   28f30:	00ffffc4 	movi	r3,-1
   28f34:	10c00526 	beq	r2,r3,28f4c <_isatty_r+0x44>
   28f38:	dfc00217 	ldw	ra,8(sp)
   28f3c:	dc400117 	ldw	r17,4(sp)
   28f40:	dc000017 	ldw	r16,0(sp)
   28f44:	dec00304 	addi	sp,sp,12
   28f48:	f800283a 	ret
   28f4c:	80c00017 	ldw	r3,0(r16)
   28f50:	183ff926 	beq	r3,zero,28f38 <_isatty_r+0x30>
   28f54:	88c00015 	stw	r3,0(r17)
   28f58:	003ff706 	br	28f38 <_isatty_r+0x30>

00028f5c <_lseek_r>:
   28f5c:	defffd04 	addi	sp,sp,-12
   28f60:	2805883a 	mov	r2,r5
   28f64:	dc000015 	stw	r16,0(sp)
   28f68:	04000034 	movhi	r16,0
   28f6c:	dc400115 	stw	r17,4(sp)
   28f70:	300b883a 	mov	r5,r6
   28f74:	84078204 	addi	r16,r16,7688
   28f78:	2023883a 	mov	r17,r4
   28f7c:	380d883a 	mov	r6,r7
   28f80:	1009883a 	mov	r4,r2
   28f84:	dfc00215 	stw	ra,8(sp)
   28f88:	80000015 	stw	zero,0(r16)
   28f8c:	002d2940 	call	2d294 <lseek>
   28f90:	00ffffc4 	movi	r3,-1
   28f94:	10c00526 	beq	r2,r3,28fac <_lseek_r+0x50>
   28f98:	dfc00217 	ldw	ra,8(sp)
   28f9c:	dc400117 	ldw	r17,4(sp)
   28fa0:	dc000017 	ldw	r16,0(sp)
   28fa4:	dec00304 	addi	sp,sp,12
   28fa8:	f800283a 	ret
   28fac:	80c00017 	ldw	r3,0(r16)
   28fb0:	183ff926 	beq	r3,zero,28f98 <_lseek_r+0x3c>
   28fb4:	88c00015 	stw	r3,0(r17)
   28fb8:	003ff706 	br	28f98 <_lseek_r+0x3c>

00028fbc <memmove>:
   28fbc:	2005883a 	mov	r2,r4
   28fc0:	29000b2e 	bgeu	r5,r4,28ff0 <memmove+0x34>
   28fc4:	298f883a 	add	r7,r5,r6
   28fc8:	21c0092e 	bgeu	r4,r7,28ff0 <memmove+0x34>
   28fcc:	2187883a 	add	r3,r4,r6
   28fd0:	198bc83a 	sub	r5,r3,r6
   28fd4:	30004826 	beq	r6,zero,290f8 <memmove+0x13c>
   28fd8:	39ffffc4 	addi	r7,r7,-1
   28fdc:	39000003 	ldbu	r4,0(r7)
   28fe0:	18ffffc4 	addi	r3,r3,-1
   28fe4:	19000005 	stb	r4,0(r3)
   28fe8:	28fffb1e 	bne	r5,r3,28fd8 <memmove+0x1c>
   28fec:	f800283a 	ret
   28ff0:	00c003c4 	movi	r3,15
   28ff4:	1980412e 	bgeu	r3,r6,290fc <memmove+0x140>
   28ff8:	2886b03a 	or	r3,r5,r2
   28ffc:	18c000cc 	andi	r3,r3,3
   29000:	1800401e 	bne	r3,zero,29104 <memmove+0x148>
   29004:	33fffc04 	addi	r15,r6,-16
   29008:	781ed13a 	srli	r15,r15,4
   2900c:	28c00104 	addi	r3,r5,4
   29010:	13400104 	addi	r13,r2,4
   29014:	781c913a 	slli	r14,r15,4
   29018:	2b000204 	addi	r12,r5,8
   2901c:	12c00204 	addi	r11,r2,8
   29020:	73800504 	addi	r14,r14,20
   29024:	2a800304 	addi	r10,r5,12
   29028:	12400304 	addi	r9,r2,12
   2902c:	2b9d883a 	add	r14,r5,r14
   29030:	2811883a 	mov	r8,r5
   29034:	100f883a 	mov	r7,r2
   29038:	41000017 	ldw	r4,0(r8)
   2903c:	39c00404 	addi	r7,r7,16
   29040:	18c00404 	addi	r3,r3,16
   29044:	393ffc15 	stw	r4,-16(r7)
   29048:	193ffc17 	ldw	r4,-16(r3)
   2904c:	6b400404 	addi	r13,r13,16
   29050:	5ac00404 	addi	r11,r11,16
   29054:	693ffc15 	stw	r4,-16(r13)
   29058:	61000017 	ldw	r4,0(r12)
   2905c:	4a400404 	addi	r9,r9,16
   29060:	42000404 	addi	r8,r8,16
   29064:	593ffc15 	stw	r4,-16(r11)
   29068:	51000017 	ldw	r4,0(r10)
   2906c:	63000404 	addi	r12,r12,16
   29070:	52800404 	addi	r10,r10,16
   29074:	493ffc15 	stw	r4,-16(r9)
   29078:	1bbfef1e 	bne	r3,r14,29038 <memmove+0x7c>
   2907c:	79000044 	addi	r4,r15,1
   29080:	2008913a 	slli	r4,r4,4
   29084:	328003cc 	andi	r10,r6,15
   29088:	02c000c4 	movi	r11,3
   2908c:	1107883a 	add	r3,r2,r4
   29090:	290b883a 	add	r5,r5,r4
   29094:	5a801e2e 	bgeu	r11,r10,29110 <memmove+0x154>
   29098:	1813883a 	mov	r9,r3
   2909c:	2811883a 	mov	r8,r5
   290a0:	500f883a 	mov	r7,r10
   290a4:	41000017 	ldw	r4,0(r8)
   290a8:	4a400104 	addi	r9,r9,4
   290ac:	39ffff04 	addi	r7,r7,-4
   290b0:	493fff15 	stw	r4,-4(r9)
   290b4:	42000104 	addi	r8,r8,4
   290b8:	59fffa36 	bltu	r11,r7,290a4 <memmove+0xe8>
   290bc:	513fff04 	addi	r4,r10,-4
   290c0:	2008d0ba 	srli	r4,r4,2
   290c4:	318000cc 	andi	r6,r6,3
   290c8:	21000044 	addi	r4,r4,1
   290cc:	2109883a 	add	r4,r4,r4
   290d0:	2109883a 	add	r4,r4,r4
   290d4:	1907883a 	add	r3,r3,r4
   290d8:	290b883a 	add	r5,r5,r4
   290dc:	30000b26 	beq	r6,zero,2910c <memmove+0x150>
   290e0:	198d883a 	add	r6,r3,r6
   290e4:	29c00003 	ldbu	r7,0(r5)
   290e8:	18c00044 	addi	r3,r3,1
   290ec:	29400044 	addi	r5,r5,1
   290f0:	19ffffc5 	stb	r7,-1(r3)
   290f4:	19bffb1e 	bne	r3,r6,290e4 <memmove+0x128>
   290f8:	f800283a 	ret
   290fc:	1007883a 	mov	r3,r2
   29100:	003ff606 	br	290dc <memmove+0x120>
   29104:	1007883a 	mov	r3,r2
   29108:	003ff506 	br	290e0 <memmove+0x124>
   2910c:	f800283a 	ret
   29110:	500d883a 	mov	r6,r10
   29114:	003ff106 	br	290dc <memmove+0x120>

00029118 <_read_r>:
   29118:	defffd04 	addi	sp,sp,-12
   2911c:	2805883a 	mov	r2,r5
   29120:	dc000015 	stw	r16,0(sp)
   29124:	04000034 	movhi	r16,0
   29128:	dc400115 	stw	r17,4(sp)
   2912c:	300b883a 	mov	r5,r6
   29130:	84078204 	addi	r16,r16,7688
   29134:	2023883a 	mov	r17,r4
   29138:	380d883a 	mov	r6,r7
   2913c:	1009883a 	mov	r4,r2
   29140:	dfc00215 	stw	ra,8(sp)
   29144:	80000015 	stw	zero,0(r16)
   29148:	002d4680 	call	2d468 <read>
   2914c:	00ffffc4 	movi	r3,-1
   29150:	10c00526 	beq	r2,r3,29168 <_read_r+0x50>
   29154:	dfc00217 	ldw	ra,8(sp)
   29158:	dc400117 	ldw	r17,4(sp)
   2915c:	dc000017 	ldw	r16,0(sp)
   29160:	dec00304 	addi	sp,sp,12
   29164:	f800283a 	ret
   29168:	80c00017 	ldw	r3,0(r16)
   2916c:	183ff926 	beq	r3,zero,29154 <_read_r+0x3c>
   29170:	88c00015 	stw	r3,0(r17)
   29174:	003ff706 	br	29154 <_read_r+0x3c>

00029178 <_realloc_r>:
   29178:	defff604 	addi	sp,sp,-40
   2917c:	dc800215 	stw	r18,8(sp)
   29180:	dfc00915 	stw	ra,36(sp)
   29184:	df000815 	stw	fp,32(sp)
   29188:	ddc00715 	stw	r23,28(sp)
   2918c:	dd800615 	stw	r22,24(sp)
   29190:	dd400515 	stw	r21,20(sp)
   29194:	dd000415 	stw	r20,16(sp)
   29198:	dcc00315 	stw	r19,12(sp)
   2919c:	dc400115 	stw	r17,4(sp)
   291a0:	dc000015 	stw	r16,0(sp)
   291a4:	3025883a 	mov	r18,r6
   291a8:	2800b726 	beq	r5,zero,29488 <_realloc_r+0x310>
   291ac:	282b883a 	mov	r21,r5
   291b0:	2029883a 	mov	r20,r4
   291b4:	002d3e40 	call	2d3e4 <__malloc_lock>
   291b8:	a8bfff17 	ldw	r2,-4(r21)
   291bc:	043fff04 	movi	r16,-4
   291c0:	90c002c4 	addi	r3,r18,11
   291c4:	01000584 	movi	r4,22
   291c8:	acfffe04 	addi	r19,r21,-8
   291cc:	1420703a 	and	r16,r2,r16
   291d0:	20c0332e 	bgeu	r4,r3,292a0 <_realloc_r+0x128>
   291d4:	047ffe04 	movi	r17,-8
   291d8:	1c62703a 	and	r17,r3,r17
   291dc:	8807883a 	mov	r3,r17
   291e0:	88005816 	blt	r17,zero,29344 <_realloc_r+0x1cc>
   291e4:	8c805736 	bltu	r17,r18,29344 <_realloc_r+0x1cc>
   291e8:	80c0300e 	bge	r16,r3,292ac <_realloc_r+0x134>
   291ec:	07000034 	movhi	fp,0
   291f0:	e701e604 	addi	fp,fp,1944
   291f4:	e1c00217 	ldw	r7,8(fp)
   291f8:	9c09883a 	add	r4,r19,r16
   291fc:	22000117 	ldw	r8,4(r4)
   29200:	21c06326 	beq	r4,r7,29390 <_realloc_r+0x218>
   29204:	017fff84 	movi	r5,-2
   29208:	414a703a 	and	r5,r8,r5
   2920c:	214b883a 	add	r5,r4,r5
   29210:	29800117 	ldw	r6,4(r5)
   29214:	3180004c 	andi	r6,r6,1
   29218:	30003f26 	beq	r6,zero,29318 <_realloc_r+0x1a0>
   2921c:	1080004c 	andi	r2,r2,1
   29220:	10008326 	beq	r2,zero,29430 <_realloc_r+0x2b8>
   29224:	900b883a 	mov	r5,r18
   29228:	a009883a 	mov	r4,r20
   2922c:	00250500 	call	25050 <_malloc_r>
   29230:	1025883a 	mov	r18,r2
   29234:	10011e26 	beq	r2,zero,296b0 <_realloc_r+0x538>
   29238:	a93fff17 	ldw	r4,-4(r21)
   2923c:	10fffe04 	addi	r3,r2,-8
   29240:	00bfff84 	movi	r2,-2
   29244:	2084703a 	and	r2,r4,r2
   29248:	9885883a 	add	r2,r19,r2
   2924c:	1880ee26 	beq	r3,r2,29608 <_realloc_r+0x490>
   29250:	81bfff04 	addi	r6,r16,-4
   29254:	00800904 	movi	r2,36
   29258:	1180b836 	bltu	r2,r6,2953c <_realloc_r+0x3c4>
   2925c:	00c004c4 	movi	r3,19
   29260:	19809636 	bltu	r3,r6,294bc <_realloc_r+0x344>
   29264:	9005883a 	mov	r2,r18
   29268:	a807883a 	mov	r3,r21
   2926c:	19000017 	ldw	r4,0(r3)
   29270:	11000015 	stw	r4,0(r2)
   29274:	19000117 	ldw	r4,4(r3)
   29278:	11000115 	stw	r4,4(r2)
   2927c:	18c00217 	ldw	r3,8(r3)
   29280:	10c00215 	stw	r3,8(r2)
   29284:	a80b883a 	mov	r5,r21
   29288:	a009883a 	mov	r4,r20
   2928c:	00249200 	call	24920 <_free_r>
   29290:	a009883a 	mov	r4,r20
   29294:	002d4080 	call	2d408 <__malloc_unlock>
   29298:	9005883a 	mov	r2,r18
   2929c:	00001206 	br	292e8 <_realloc_r+0x170>
   292a0:	00c00404 	movi	r3,16
   292a4:	1823883a 	mov	r17,r3
   292a8:	003fce06 	br	291e4 <_realloc_r+0x6c>
   292ac:	a825883a 	mov	r18,r21
   292b0:	8445c83a 	sub	r2,r16,r17
   292b4:	00c003c4 	movi	r3,15
   292b8:	18802636 	bltu	r3,r2,29354 <_realloc_r+0x1dc>
   292bc:	99800117 	ldw	r6,4(r19)
   292c0:	9c07883a 	add	r3,r19,r16
   292c4:	3180004c 	andi	r6,r6,1
   292c8:	3420b03a 	or	r16,r6,r16
   292cc:	9c000115 	stw	r16,4(r19)
   292d0:	18800117 	ldw	r2,4(r3)
   292d4:	10800054 	ori	r2,r2,1
   292d8:	18800115 	stw	r2,4(r3)
   292dc:	a009883a 	mov	r4,r20
   292e0:	002d4080 	call	2d408 <__malloc_unlock>
   292e4:	9005883a 	mov	r2,r18
   292e8:	dfc00917 	ldw	ra,36(sp)
   292ec:	df000817 	ldw	fp,32(sp)
   292f0:	ddc00717 	ldw	r23,28(sp)
   292f4:	dd800617 	ldw	r22,24(sp)
   292f8:	dd400517 	ldw	r21,20(sp)
   292fc:	dd000417 	ldw	r20,16(sp)
   29300:	dcc00317 	ldw	r19,12(sp)
   29304:	dc800217 	ldw	r18,8(sp)
   29308:	dc400117 	ldw	r17,4(sp)
   2930c:	dc000017 	ldw	r16,0(sp)
   29310:	dec00a04 	addi	sp,sp,40
   29314:	f800283a 	ret
   29318:	017fff04 	movi	r5,-4
   2931c:	414a703a 	and	r5,r8,r5
   29320:	814d883a 	add	r6,r16,r5
   29324:	30c01f16 	blt	r6,r3,293a4 <_realloc_r+0x22c>
   29328:	20800317 	ldw	r2,12(r4)
   2932c:	20c00217 	ldw	r3,8(r4)
   29330:	a825883a 	mov	r18,r21
   29334:	3021883a 	mov	r16,r6
   29338:	18800315 	stw	r2,12(r3)
   2933c:	10c00215 	stw	r3,8(r2)
   29340:	003fdb06 	br	292b0 <_realloc_r+0x138>
   29344:	00800304 	movi	r2,12
   29348:	a0800015 	stw	r2,0(r20)
   2934c:	0005883a 	mov	r2,zero
   29350:	003fe506 	br	292e8 <_realloc_r+0x170>
   29354:	98c00117 	ldw	r3,4(r19)
   29358:	9c4b883a 	add	r5,r19,r17
   2935c:	11000054 	ori	r4,r2,1
   29360:	18c0004c 	andi	r3,r3,1
   29364:	1c62b03a 	or	r17,r3,r17
   29368:	9c400115 	stw	r17,4(r19)
   2936c:	29000115 	stw	r4,4(r5)
   29370:	2885883a 	add	r2,r5,r2
   29374:	10c00117 	ldw	r3,4(r2)
   29378:	29400204 	addi	r5,r5,8
   2937c:	a009883a 	mov	r4,r20
   29380:	18c00054 	ori	r3,r3,1
   29384:	10c00115 	stw	r3,4(r2)
   29388:	00249200 	call	24920 <_free_r>
   2938c:	003fd306 	br	292dc <_realloc_r+0x164>
   29390:	017fff04 	movi	r5,-4
   29394:	414a703a 	and	r5,r8,r5
   29398:	89800404 	addi	r6,r17,16
   2939c:	8151883a 	add	r8,r16,r5
   293a0:	4180590e 	bge	r8,r6,29508 <_realloc_r+0x390>
   293a4:	1080004c 	andi	r2,r2,1
   293a8:	103f9e1e 	bne	r2,zero,29224 <_realloc_r+0xac>
   293ac:	adbffe17 	ldw	r22,-8(r21)
   293b0:	00bfff04 	movi	r2,-4
   293b4:	9dadc83a 	sub	r22,r19,r22
   293b8:	b1800117 	ldw	r6,4(r22)
   293bc:	3084703a 	and	r2,r6,r2
   293c0:	20002026 	beq	r4,zero,29444 <_realloc_r+0x2cc>
   293c4:	80af883a 	add	r23,r16,r2
   293c8:	b96f883a 	add	r23,r23,r5
   293cc:	21c05f26 	beq	r4,r7,2954c <_realloc_r+0x3d4>
   293d0:	b8c01c16 	blt	r23,r3,29444 <_realloc_r+0x2cc>
   293d4:	20800317 	ldw	r2,12(r4)
   293d8:	20c00217 	ldw	r3,8(r4)
   293dc:	81bfff04 	addi	r6,r16,-4
   293e0:	01000904 	movi	r4,36
   293e4:	18800315 	stw	r2,12(r3)
   293e8:	10c00215 	stw	r3,8(r2)
   293ec:	b0c00217 	ldw	r3,8(r22)
   293f0:	b0800317 	ldw	r2,12(r22)
   293f4:	b4800204 	addi	r18,r22,8
   293f8:	18800315 	stw	r2,12(r3)
   293fc:	10c00215 	stw	r3,8(r2)
   29400:	21801b36 	bltu	r4,r6,29470 <_realloc_r+0x2f8>
   29404:	008004c4 	movi	r2,19
   29408:	1180352e 	bgeu	r2,r6,294e0 <_realloc_r+0x368>
   2940c:	a8800017 	ldw	r2,0(r21)
   29410:	b0800215 	stw	r2,8(r22)
   29414:	a8800117 	ldw	r2,4(r21)
   29418:	b0800315 	stw	r2,12(r22)
   2941c:	008006c4 	movi	r2,27
   29420:	11807f36 	bltu	r2,r6,29620 <_realloc_r+0x4a8>
   29424:	b0800404 	addi	r2,r22,16
   29428:	ad400204 	addi	r21,r21,8
   2942c:	00002d06 	br	294e4 <_realloc_r+0x36c>
   29430:	adbffe17 	ldw	r22,-8(r21)
   29434:	00bfff04 	movi	r2,-4
   29438:	9dadc83a 	sub	r22,r19,r22
   2943c:	b1000117 	ldw	r4,4(r22)
   29440:	2084703a 	and	r2,r4,r2
   29444:	b03f7726 	beq	r22,zero,29224 <_realloc_r+0xac>
   29448:	80af883a 	add	r23,r16,r2
   2944c:	b8ff7516 	blt	r23,r3,29224 <_realloc_r+0xac>
   29450:	b0800317 	ldw	r2,12(r22)
   29454:	b0c00217 	ldw	r3,8(r22)
   29458:	81bfff04 	addi	r6,r16,-4
   2945c:	01000904 	movi	r4,36
   29460:	18800315 	stw	r2,12(r3)
   29464:	10c00215 	stw	r3,8(r2)
   29468:	b4800204 	addi	r18,r22,8
   2946c:	21bfe52e 	bgeu	r4,r6,29404 <_realloc_r+0x28c>
   29470:	a80b883a 	mov	r5,r21
   29474:	9009883a 	mov	r4,r18
   29478:	0028fbc0 	call	28fbc <memmove>
   2947c:	b821883a 	mov	r16,r23
   29480:	b027883a 	mov	r19,r22
   29484:	003f8a06 	br	292b0 <_realloc_r+0x138>
   29488:	300b883a 	mov	r5,r6
   2948c:	dfc00917 	ldw	ra,36(sp)
   29490:	df000817 	ldw	fp,32(sp)
   29494:	ddc00717 	ldw	r23,28(sp)
   29498:	dd800617 	ldw	r22,24(sp)
   2949c:	dd400517 	ldw	r21,20(sp)
   294a0:	dd000417 	ldw	r20,16(sp)
   294a4:	dcc00317 	ldw	r19,12(sp)
   294a8:	dc800217 	ldw	r18,8(sp)
   294ac:	dc400117 	ldw	r17,4(sp)
   294b0:	dc000017 	ldw	r16,0(sp)
   294b4:	dec00a04 	addi	sp,sp,40
   294b8:	00250501 	jmpi	25050 <_malloc_r>
   294bc:	a8c00017 	ldw	r3,0(r21)
   294c0:	90c00015 	stw	r3,0(r18)
   294c4:	a8c00117 	ldw	r3,4(r21)
   294c8:	90c00115 	stw	r3,4(r18)
   294cc:	00c006c4 	movi	r3,27
   294d0:	19804536 	bltu	r3,r6,295e8 <_realloc_r+0x470>
   294d4:	90800204 	addi	r2,r18,8
   294d8:	a8c00204 	addi	r3,r21,8
   294dc:	003f6306 	br	2926c <_realloc_r+0xf4>
   294e0:	9005883a 	mov	r2,r18
   294e4:	a8c00017 	ldw	r3,0(r21)
   294e8:	b821883a 	mov	r16,r23
   294ec:	b027883a 	mov	r19,r22
   294f0:	10c00015 	stw	r3,0(r2)
   294f4:	a8c00117 	ldw	r3,4(r21)
   294f8:	10c00115 	stw	r3,4(r2)
   294fc:	a8c00217 	ldw	r3,8(r21)
   29500:	10c00215 	stw	r3,8(r2)
   29504:	003f6a06 	br	292b0 <_realloc_r+0x138>
   29508:	9c67883a 	add	r19,r19,r17
   2950c:	4445c83a 	sub	r2,r8,r17
   29510:	e4c00215 	stw	r19,8(fp)
   29514:	10800054 	ori	r2,r2,1
   29518:	98800115 	stw	r2,4(r19)
   2951c:	a8bfff17 	ldw	r2,-4(r21)
   29520:	a009883a 	mov	r4,r20
   29524:	1080004c 	andi	r2,r2,1
   29528:	1462b03a 	or	r17,r2,r17
   2952c:	ac7fff15 	stw	r17,-4(r21)
   29530:	002d4080 	call	2d408 <__malloc_unlock>
   29534:	a805883a 	mov	r2,r21
   29538:	003f6b06 	br	292e8 <_realloc_r+0x170>
   2953c:	a80b883a 	mov	r5,r21
   29540:	9009883a 	mov	r4,r18
   29544:	0028fbc0 	call	28fbc <memmove>
   29548:	003f4e06 	br	29284 <_realloc_r+0x10c>
   2954c:	89000404 	addi	r4,r17,16
   29550:	b93fbc16 	blt	r23,r4,29444 <_realloc_r+0x2cc>
   29554:	b0800317 	ldw	r2,12(r22)
   29558:	b0c00217 	ldw	r3,8(r22)
   2955c:	81bfff04 	addi	r6,r16,-4
   29560:	01000904 	movi	r4,36
   29564:	18800315 	stw	r2,12(r3)
   29568:	10c00215 	stw	r3,8(r2)
   2956c:	b4800204 	addi	r18,r22,8
   29570:	21804336 	bltu	r4,r6,29680 <_realloc_r+0x508>
   29574:	008004c4 	movi	r2,19
   29578:	11803f2e 	bgeu	r2,r6,29678 <_realloc_r+0x500>
   2957c:	a8800017 	ldw	r2,0(r21)
   29580:	b0800215 	stw	r2,8(r22)
   29584:	a8800117 	ldw	r2,4(r21)
   29588:	b0800315 	stw	r2,12(r22)
   2958c:	008006c4 	movi	r2,27
   29590:	11803f36 	bltu	r2,r6,29690 <_realloc_r+0x518>
   29594:	b0800404 	addi	r2,r22,16
   29598:	ad400204 	addi	r21,r21,8
   2959c:	a8c00017 	ldw	r3,0(r21)
   295a0:	10c00015 	stw	r3,0(r2)
   295a4:	a8c00117 	ldw	r3,4(r21)
   295a8:	10c00115 	stw	r3,4(r2)
   295ac:	a8c00217 	ldw	r3,8(r21)
   295b0:	10c00215 	stw	r3,8(r2)
   295b4:	b447883a 	add	r3,r22,r17
   295b8:	bc45c83a 	sub	r2,r23,r17
   295bc:	e0c00215 	stw	r3,8(fp)
   295c0:	10800054 	ori	r2,r2,1
   295c4:	18800115 	stw	r2,4(r3)
   295c8:	b0800117 	ldw	r2,4(r22)
   295cc:	a009883a 	mov	r4,r20
   295d0:	1080004c 	andi	r2,r2,1
   295d4:	1462b03a 	or	r17,r2,r17
   295d8:	b4400115 	stw	r17,4(r22)
   295dc:	002d4080 	call	2d408 <__malloc_unlock>
   295e0:	9005883a 	mov	r2,r18
   295e4:	003f4006 	br	292e8 <_realloc_r+0x170>
   295e8:	a8c00217 	ldw	r3,8(r21)
   295ec:	90c00215 	stw	r3,8(r18)
   295f0:	a8c00317 	ldw	r3,12(r21)
   295f4:	90c00315 	stw	r3,12(r18)
   295f8:	30801126 	beq	r6,r2,29640 <_realloc_r+0x4c8>
   295fc:	90800404 	addi	r2,r18,16
   29600:	a8c00404 	addi	r3,r21,16
   29604:	003f1906 	br	2926c <_realloc_r+0xf4>
   29608:	90ffff17 	ldw	r3,-4(r18)
   2960c:	00bfff04 	movi	r2,-4
   29610:	a825883a 	mov	r18,r21
   29614:	1884703a 	and	r2,r3,r2
   29618:	80a1883a 	add	r16,r16,r2
   2961c:	003f2406 	br	292b0 <_realloc_r+0x138>
   29620:	a8800217 	ldw	r2,8(r21)
   29624:	b0800415 	stw	r2,16(r22)
   29628:	a8800317 	ldw	r2,12(r21)
   2962c:	b0800515 	stw	r2,20(r22)
   29630:	31000a26 	beq	r6,r4,2965c <_realloc_r+0x4e4>
   29634:	b0800604 	addi	r2,r22,24
   29638:	ad400404 	addi	r21,r21,16
   2963c:	003fa906 	br	294e4 <_realloc_r+0x36c>
   29640:	a9000417 	ldw	r4,16(r21)
   29644:	90800604 	addi	r2,r18,24
   29648:	a8c00604 	addi	r3,r21,24
   2964c:	91000415 	stw	r4,16(r18)
   29650:	a9000517 	ldw	r4,20(r21)
   29654:	91000515 	stw	r4,20(r18)
   29658:	003f0406 	br	2926c <_realloc_r+0xf4>
   2965c:	a8c00417 	ldw	r3,16(r21)
   29660:	ad400604 	addi	r21,r21,24
   29664:	b0800804 	addi	r2,r22,32
   29668:	b0c00615 	stw	r3,24(r22)
   2966c:	a8ffff17 	ldw	r3,-4(r21)
   29670:	b0c00715 	stw	r3,28(r22)
   29674:	003f9b06 	br	294e4 <_realloc_r+0x36c>
   29678:	9005883a 	mov	r2,r18
   2967c:	003fc706 	br	2959c <_realloc_r+0x424>
   29680:	a80b883a 	mov	r5,r21
   29684:	9009883a 	mov	r4,r18
   29688:	0028fbc0 	call	28fbc <memmove>
   2968c:	003fc906 	br	295b4 <_realloc_r+0x43c>
   29690:	a8800217 	ldw	r2,8(r21)
   29694:	b0800415 	stw	r2,16(r22)
   29698:	a8800317 	ldw	r2,12(r21)
   2969c:	b0800515 	stw	r2,20(r22)
   296a0:	31000726 	beq	r6,r4,296c0 <_realloc_r+0x548>
   296a4:	b0800604 	addi	r2,r22,24
   296a8:	ad400404 	addi	r21,r21,16
   296ac:	003fbb06 	br	2959c <_realloc_r+0x424>
   296b0:	a009883a 	mov	r4,r20
   296b4:	002d4080 	call	2d408 <__malloc_unlock>
   296b8:	0005883a 	mov	r2,zero
   296bc:	003f0a06 	br	292e8 <_realloc_r+0x170>
   296c0:	a8c00417 	ldw	r3,16(r21)
   296c4:	ad400604 	addi	r21,r21,24
   296c8:	b0800804 	addi	r2,r22,32
   296cc:	b0c00615 	stw	r3,24(r22)
   296d0:	a8ffff17 	ldw	r3,-4(r21)
   296d4:	b0c00715 	stw	r3,28(r22)
   296d8:	003fb006 	br	2959c <_realloc_r+0x424>

000296dc <__swbuf_r>:
   296dc:	defffb04 	addi	sp,sp,-20
   296e0:	dcc00315 	stw	r19,12(sp)
   296e4:	dc800215 	stw	r18,8(sp)
   296e8:	dc000015 	stw	r16,0(sp)
   296ec:	dfc00415 	stw	ra,16(sp)
   296f0:	dc400115 	stw	r17,4(sp)
   296f4:	2025883a 	mov	r18,r4
   296f8:	2827883a 	mov	r19,r5
   296fc:	3021883a 	mov	r16,r6
   29700:	20000226 	beq	r4,zero,2970c <__swbuf_r+0x30>
   29704:	20800e17 	ldw	r2,56(r4)
   29708:	10004226 	beq	r2,zero,29814 <__swbuf_r+0x138>
   2970c:	80800617 	ldw	r2,24(r16)
   29710:	8100030b 	ldhu	r4,12(r16)
   29714:	80800215 	stw	r2,8(r16)
   29718:	2080020c 	andi	r2,r4,8
   2971c:	10003626 	beq	r2,zero,297f8 <__swbuf_r+0x11c>
   29720:	80c00417 	ldw	r3,16(r16)
   29724:	18003426 	beq	r3,zero,297f8 <__swbuf_r+0x11c>
   29728:	2088000c 	andi	r2,r4,8192
   2972c:	9c403fcc 	andi	r17,r19,255
   29730:	10001a26 	beq	r2,zero,2979c <__swbuf_r+0xc0>
   29734:	80800017 	ldw	r2,0(r16)
   29738:	81000517 	ldw	r4,20(r16)
   2973c:	10c7c83a 	sub	r3,r2,r3
   29740:	1900200e 	bge	r3,r4,297c4 <__swbuf_r+0xe8>
   29744:	18c00044 	addi	r3,r3,1
   29748:	81000217 	ldw	r4,8(r16)
   2974c:	11400044 	addi	r5,r2,1
   29750:	81400015 	stw	r5,0(r16)
   29754:	213fffc4 	addi	r4,r4,-1
   29758:	81000215 	stw	r4,8(r16)
   2975c:	14c00005 	stb	r19,0(r2)
   29760:	80800517 	ldw	r2,20(r16)
   29764:	10c01e26 	beq	r2,r3,297e0 <__swbuf_r+0x104>
   29768:	8080030b 	ldhu	r2,12(r16)
   2976c:	1080004c 	andi	r2,r2,1
   29770:	10000226 	beq	r2,zero,2977c <__swbuf_r+0xa0>
   29774:	00800284 	movi	r2,10
   29778:	88801926 	beq	r17,r2,297e0 <__swbuf_r+0x104>
   2977c:	8805883a 	mov	r2,r17
   29780:	dfc00417 	ldw	ra,16(sp)
   29784:	dcc00317 	ldw	r19,12(sp)
   29788:	dc800217 	ldw	r18,8(sp)
   2978c:	dc400117 	ldw	r17,4(sp)
   29790:	dc000017 	ldw	r16,0(sp)
   29794:	dec00504 	addi	sp,sp,20
   29798:	f800283a 	ret
   2979c:	81401917 	ldw	r5,100(r16)
   297a0:	00b7ffc4 	movi	r2,-8193
   297a4:	21080014 	ori	r4,r4,8192
   297a8:	2884703a 	and	r2,r5,r2
   297ac:	80801915 	stw	r2,100(r16)
   297b0:	80800017 	ldw	r2,0(r16)
   297b4:	8100030d 	sth	r4,12(r16)
   297b8:	81000517 	ldw	r4,20(r16)
   297bc:	10c7c83a 	sub	r3,r2,r3
   297c0:	193fe016 	blt	r3,r4,29744 <__swbuf_r+0x68>
   297c4:	800b883a 	mov	r5,r16
   297c8:	9009883a 	mov	r4,r18
   297cc:	00243d00 	call	243d0 <_fflush_r>
   297d0:	1000071e 	bne	r2,zero,297f0 <__swbuf_r+0x114>
   297d4:	80800017 	ldw	r2,0(r16)
   297d8:	00c00044 	movi	r3,1
   297dc:	003fda06 	br	29748 <__swbuf_r+0x6c>
   297e0:	800b883a 	mov	r5,r16
   297e4:	9009883a 	mov	r4,r18
   297e8:	00243d00 	call	243d0 <_fflush_r>
   297ec:	103fe326 	beq	r2,zero,2977c <__swbuf_r+0xa0>
   297f0:	00bfffc4 	movi	r2,-1
   297f4:	003fe206 	br	29780 <__swbuf_r+0xa4>
   297f8:	800b883a 	mov	r5,r16
   297fc:	9009883a 	mov	r4,r18
   29800:	00227d80 	call	227d8 <__swsetup_r>
   29804:	103ffa1e 	bne	r2,zero,297f0 <__swbuf_r+0x114>
   29808:	8100030b 	ldhu	r4,12(r16)
   2980c:	80c00417 	ldw	r3,16(r16)
   29810:	003fc506 	br	29728 <__swbuf_r+0x4c>
   29814:	00247ac0 	call	247ac <__sinit>
   29818:	003fbc06 	br	2970c <__swbuf_r+0x30>

0002981c <__swbuf>:
   2981c:	00800034 	movhi	r2,0
   29820:	10876b04 	addi	r2,r2,7596
   29824:	280d883a 	mov	r6,r5
   29828:	200b883a 	mov	r5,r4
   2982c:	11000017 	ldw	r4,0(r2)
   29830:	00296dc1 	jmpi	296dc <__swbuf_r>

00029834 <_wcrtomb_r>:
   29834:	defff604 	addi	sp,sp,-40
   29838:	00800034 	movhi	r2,0
   2983c:	dc800815 	stw	r18,32(sp)
   29840:	dc400715 	stw	r17,28(sp)
   29844:	dc000615 	stw	r16,24(sp)
   29848:	10876f04 	addi	r2,r2,7612
   2984c:	dfc00915 	stw	ra,36(sp)
   29850:	2021883a 	mov	r16,r4
   29854:	3823883a 	mov	r17,r7
   29858:	14800017 	ldw	r18,0(r2)
   2985c:	28001426 	beq	r5,zero,298b0 <_wcrtomb_r+0x7c>
   29860:	d9400415 	stw	r5,16(sp)
   29864:	d9800515 	stw	r6,20(sp)
   29868:	0024e340 	call	24e34 <__locale_charset>
   2986c:	d9800517 	ldw	r6,20(sp)
   29870:	d9400417 	ldw	r5,16(sp)
   29874:	100f883a 	mov	r7,r2
   29878:	dc400015 	stw	r17,0(sp)
   2987c:	8009883a 	mov	r4,r16
   29880:	903ee83a 	callr	r18
   29884:	00ffffc4 	movi	r3,-1
   29888:	10c0031e 	bne	r2,r3,29898 <_wcrtomb_r+0x64>
   2988c:	88000015 	stw	zero,0(r17)
   29890:	00c02284 	movi	r3,138
   29894:	80c00015 	stw	r3,0(r16)
   29898:	dfc00917 	ldw	ra,36(sp)
   2989c:	dc800817 	ldw	r18,32(sp)
   298a0:	dc400717 	ldw	r17,28(sp)
   298a4:	dc000617 	ldw	r16,24(sp)
   298a8:	dec00a04 	addi	sp,sp,40
   298ac:	f800283a 	ret
   298b0:	0024e340 	call	24e34 <__locale_charset>
   298b4:	100f883a 	mov	r7,r2
   298b8:	dc400015 	stw	r17,0(sp)
   298bc:	000d883a 	mov	r6,zero
   298c0:	d9400104 	addi	r5,sp,4
   298c4:	8009883a 	mov	r4,r16
   298c8:	903ee83a 	callr	r18
   298cc:	003fed06 	br	29884 <_wcrtomb_r+0x50>

000298d0 <wcrtomb>:
   298d0:	defff604 	addi	sp,sp,-40
   298d4:	00800034 	movhi	r2,0
   298d8:	dc800615 	stw	r18,24(sp)
   298dc:	dc400515 	stw	r17,20(sp)
   298e0:	10876b04 	addi	r2,r2,7596
   298e4:	dfc00915 	stw	ra,36(sp)
   298e8:	dd000815 	stw	r20,32(sp)
   298ec:	dcc00715 	stw	r19,28(sp)
   298f0:	dc000415 	stw	r16,16(sp)
   298f4:	3025883a 	mov	r18,r6
   298f8:	14400017 	ldw	r17,0(r2)
   298fc:	20001926 	beq	r4,zero,29964 <wcrtomb+0x94>
   29900:	00800034 	movhi	r2,0
   29904:	10876f04 	addi	r2,r2,7612
   29908:	15000017 	ldw	r20,0(r2)
   2990c:	2021883a 	mov	r16,r4
   29910:	2827883a 	mov	r19,r5
   29914:	0024e340 	call	24e34 <__locale_charset>
   29918:	100f883a 	mov	r7,r2
   2991c:	dc800015 	stw	r18,0(sp)
   29920:	980d883a 	mov	r6,r19
   29924:	800b883a 	mov	r5,r16
   29928:	8809883a 	mov	r4,r17
   2992c:	a03ee83a 	callr	r20
   29930:	00ffffc4 	movi	r3,-1
   29934:	10c0031e 	bne	r2,r3,29944 <wcrtomb+0x74>
   29938:	90000015 	stw	zero,0(r18)
   2993c:	00c02284 	movi	r3,138
   29940:	88c00015 	stw	r3,0(r17)
   29944:	dfc00917 	ldw	ra,36(sp)
   29948:	dd000817 	ldw	r20,32(sp)
   2994c:	dcc00717 	ldw	r19,28(sp)
   29950:	dc800617 	ldw	r18,24(sp)
   29954:	dc400517 	ldw	r17,20(sp)
   29958:	dc000417 	ldw	r16,16(sp)
   2995c:	dec00a04 	addi	sp,sp,40
   29960:	f800283a 	ret
   29964:	00800034 	movhi	r2,0
   29968:	10876f04 	addi	r2,r2,7612
   2996c:	14000017 	ldw	r16,0(r2)
   29970:	0024e340 	call	24e34 <__locale_charset>
   29974:	100f883a 	mov	r7,r2
   29978:	dc800015 	stw	r18,0(sp)
   2997c:	000d883a 	mov	r6,zero
   29980:	d9400104 	addi	r5,sp,4
   29984:	8809883a 	mov	r4,r17
   29988:	803ee83a 	callr	r16
   2998c:	003fe806 	br	29930 <wcrtomb+0x60>

00029990 <__ascii_wctomb>:
   29990:	28000526 	beq	r5,zero,299a8 <__ascii_wctomb+0x18>
   29994:	00803fc4 	movi	r2,255
   29998:	11800536 	bltu	r2,r6,299b0 <__ascii_wctomb+0x20>
   2999c:	29800005 	stb	r6,0(r5)
   299a0:	00800044 	movi	r2,1
   299a4:	f800283a 	ret
   299a8:	0005883a 	mov	r2,zero
   299ac:	f800283a 	ret
   299b0:	00802284 	movi	r2,138
   299b4:	20800015 	stw	r2,0(r4)
   299b8:	00bfffc4 	movi	r2,-1
   299bc:	f800283a 	ret

000299c0 <_wctomb_r>:
   299c0:	00800034 	movhi	r2,0
   299c4:	defff904 	addi	sp,sp,-28
   299c8:	10876f04 	addi	r2,r2,7612
   299cc:	dfc00615 	stw	ra,24(sp)
   299d0:	dc400515 	stw	r17,20(sp)
   299d4:	dc000415 	stw	r16,16(sp)
   299d8:	3823883a 	mov	r17,r7
   299dc:	14000017 	ldw	r16,0(r2)
   299e0:	d9000115 	stw	r4,4(sp)
   299e4:	d9400215 	stw	r5,8(sp)
   299e8:	d9800315 	stw	r6,12(sp)
   299ec:	0024e340 	call	24e34 <__locale_charset>
   299f0:	d9800317 	ldw	r6,12(sp)
   299f4:	d9400217 	ldw	r5,8(sp)
   299f8:	d9000117 	ldw	r4,4(sp)
   299fc:	100f883a 	mov	r7,r2
   29a00:	dc400015 	stw	r17,0(sp)
   29a04:	803ee83a 	callr	r16
   29a08:	dfc00617 	ldw	ra,24(sp)
   29a0c:	dc400517 	ldw	r17,20(sp)
   29a10:	dc000417 	ldw	r16,16(sp)
   29a14:	dec00704 	addi	sp,sp,28
   29a18:	f800283a 	ret

00029a1c <__udivdi3>:
   29a1c:	defff504 	addi	sp,sp,-44
   29a20:	dcc00415 	stw	r19,16(sp)
   29a24:	dc000115 	stw	r16,4(sp)
   29a28:	dfc00a15 	stw	ra,40(sp)
   29a2c:	df000915 	stw	fp,36(sp)
   29a30:	ddc00815 	stw	r23,32(sp)
   29a34:	dd800715 	stw	r22,28(sp)
   29a38:	dd400615 	stw	r21,24(sp)
   29a3c:	dd000515 	stw	r20,20(sp)
   29a40:	dc800315 	stw	r18,12(sp)
   29a44:	dc400215 	stw	r17,8(sp)
   29a48:	2027883a 	mov	r19,r4
   29a4c:	2821883a 	mov	r16,r5
   29a50:	3800411e 	bne	r7,zero,29b58 <__udivdi3+0x13c>
   29a54:	3023883a 	mov	r17,r6
   29a58:	2025883a 	mov	r18,r4
   29a5c:	2980522e 	bgeu	r5,r6,29ba8 <__udivdi3+0x18c>
   29a60:	00bfffd4 	movui	r2,65535
   29a64:	282d883a 	mov	r22,r5
   29a68:	1180a836 	bltu	r2,r6,29d0c <__udivdi3+0x2f0>
   29a6c:	00803fc4 	movi	r2,255
   29a70:	1185803a 	cmpltu	r2,r2,r6
   29a74:	100490fa 	slli	r2,r2,3
   29a78:	3086d83a 	srl	r3,r6,r2
   29a7c:	01000034 	movhi	r4,0
   29a80:	21007204 	addi	r4,r4,456
   29a84:	20c7883a 	add	r3,r4,r3
   29a88:	18c00003 	ldbu	r3,0(r3)
   29a8c:	1885883a 	add	r2,r3,r2
   29a90:	00c00804 	movi	r3,32
   29a94:	1887c83a 	sub	r3,r3,r2
   29a98:	18000526 	beq	r3,zero,29ab0 <__udivdi3+0x94>
   29a9c:	80e0983a 	sll	r16,r16,r3
   29aa0:	9884d83a 	srl	r2,r19,r2
   29aa4:	30e2983a 	sll	r17,r6,r3
   29aa8:	98e4983a 	sll	r18,r19,r3
   29aac:	142cb03a 	or	r22,r2,r16
   29ab0:	882ad43a 	srli	r21,r17,16
   29ab4:	b009883a 	mov	r4,r22
   29ab8:	8d3fffcc 	andi	r20,r17,65535
   29abc:	a80b883a 	mov	r5,r21
   29ac0:	002a6280 	call	2a628 <__umodsi3>
   29ac4:	b009883a 	mov	r4,r22
   29ac8:	a80b883a 	mov	r5,r21
   29acc:	1027883a 	mov	r19,r2
   29ad0:	002a5c40 	call	2a5c4 <__udivsi3>
   29ad4:	102d883a 	mov	r22,r2
   29ad8:	9826943a 	slli	r19,r19,16
   29adc:	9004d43a 	srli	r2,r18,16
   29ae0:	a5a1383a 	mul	r16,r20,r22
   29ae4:	14c4b03a 	or	r2,r2,r19
   29ae8:	1400052e 	bgeu	r2,r16,29b00 <__udivdi3+0xe4>
   29aec:	1445883a 	add	r2,r2,r17
   29af0:	b0ffffc4 	addi	r3,r22,-1
   29af4:	14400136 	bltu	r2,r17,29afc <__udivdi3+0xe0>
   29af8:	14012336 	bltu	r2,r16,29f88 <__udivdi3+0x56c>
   29afc:	182d883a 	mov	r22,r3
   29b00:	1421c83a 	sub	r16,r2,r16
   29b04:	a80b883a 	mov	r5,r21
   29b08:	8009883a 	mov	r4,r16
   29b0c:	002a6280 	call	2a628 <__umodsi3>
   29b10:	1027883a 	mov	r19,r2
   29b14:	a80b883a 	mov	r5,r21
   29b18:	8009883a 	mov	r4,r16
   29b1c:	002a5c40 	call	2a5c4 <__udivsi3>
   29b20:	9826943a 	slli	r19,r19,16
   29b24:	a0a9383a 	mul	r20,r20,r2
   29b28:	94bfffcc 	andi	r18,r18,65535
   29b2c:	94e4b03a 	or	r18,r18,r19
   29b30:	9500052e 	bgeu	r18,r20,29b48 <__udivdi3+0x12c>
   29b34:	8ca5883a 	add	r18,r17,r18
   29b38:	10ffffc4 	addi	r3,r2,-1
   29b3c:	9440f136 	bltu	r18,r17,29f04 <__udivdi3+0x4e8>
   29b40:	9500f02e 	bgeu	r18,r20,29f04 <__udivdi3+0x4e8>
   29b44:	10bfff84 	addi	r2,r2,-2
   29b48:	b00c943a 	slli	r6,r22,16
   29b4c:	0007883a 	mov	r3,zero
   29b50:	3084b03a 	or	r2,r6,r2
   29b54:	00005906 	br	29cbc <__udivdi3+0x2a0>
   29b58:	29c05636 	bltu	r5,r7,29cb4 <__udivdi3+0x298>
   29b5c:	00bfffd4 	movui	r2,65535
   29b60:	11c0622e 	bgeu	r2,r7,29cec <__udivdi3+0x2d0>
   29b64:	00804034 	movhi	r2,256
   29b68:	10bfffc4 	addi	r2,r2,-1
   29b6c:	11c0ee36 	bltu	r2,r7,29f28 <__udivdi3+0x50c>
   29b70:	00800404 	movi	r2,16
   29b74:	3886d83a 	srl	r3,r7,r2
   29b78:	01000034 	movhi	r4,0
   29b7c:	21007204 	addi	r4,r4,456
   29b80:	20c7883a 	add	r3,r4,r3
   29b84:	18c00003 	ldbu	r3,0(r3)
   29b88:	05400804 	movi	r21,32
   29b8c:	1885883a 	add	r2,r3,r2
   29b90:	a8abc83a 	sub	r21,r21,r2
   29b94:	a800621e 	bne	r21,zero,29d20 <__udivdi3+0x304>
   29b98:	3c00e936 	bltu	r7,r16,29f40 <__udivdi3+0x524>
   29b9c:	9985403a 	cmpgeu	r2,r19,r6
   29ba0:	0007883a 	mov	r3,zero
   29ba4:	00004506 	br	29cbc <__udivdi3+0x2a0>
   29ba8:	3000041e 	bne	r6,zero,29bbc <__udivdi3+0x1a0>
   29bac:	000b883a 	mov	r5,zero
   29bb0:	01000044 	movi	r4,1
   29bb4:	002a5c40 	call	2a5c4 <__udivsi3>
   29bb8:	1023883a 	mov	r17,r2
   29bbc:	00bfffd4 	movui	r2,65535
   29bc0:	14404e2e 	bgeu	r2,r17,29cfc <__udivdi3+0x2e0>
   29bc4:	00804034 	movhi	r2,256
   29bc8:	10bfffc4 	addi	r2,r2,-1
   29bcc:	1440d836 	bltu	r2,r17,29f30 <__udivdi3+0x514>
   29bd0:	00800404 	movi	r2,16
   29bd4:	8886d83a 	srl	r3,r17,r2
   29bd8:	01000034 	movhi	r4,0
   29bdc:	21007204 	addi	r4,r4,456
   29be0:	20c7883a 	add	r3,r4,r3
   29be4:	18c00003 	ldbu	r3,0(r3)
   29be8:	1885883a 	add	r2,r3,r2
   29bec:	00c00804 	movi	r3,32
   29bf0:	1887c83a 	sub	r3,r3,r2
   29bf4:	18008f1e 	bne	r3,zero,29e34 <__udivdi3+0x418>
   29bf8:	882ad43a 	srli	r21,r17,16
   29bfc:	8461c83a 	sub	r16,r16,r17
   29c00:	8d3fffcc 	andi	r20,r17,65535
   29c04:	00c00044 	movi	r3,1
   29c08:	8009883a 	mov	r4,r16
   29c0c:	a80b883a 	mov	r5,r21
   29c10:	d8c00015 	stw	r3,0(sp)
   29c14:	002a6280 	call	2a628 <__umodsi3>
   29c18:	8009883a 	mov	r4,r16
   29c1c:	a80b883a 	mov	r5,r21
   29c20:	1027883a 	mov	r19,r2
   29c24:	002a5c40 	call	2a5c4 <__udivsi3>
   29c28:	9826943a 	slli	r19,r19,16
   29c2c:	9008d43a 	srli	r4,r18,16
   29c30:	1521383a 	mul	r16,r2,r20
   29c34:	102d883a 	mov	r22,r2
   29c38:	24c8b03a 	or	r4,r4,r19
   29c3c:	d8c00017 	ldw	r3,0(sp)
   29c40:	2400052e 	bgeu	r4,r16,29c58 <__udivdi3+0x23c>
   29c44:	2449883a 	add	r4,r4,r17
   29c48:	b0bfffc4 	addi	r2,r22,-1
   29c4c:	24400136 	bltu	r4,r17,29c54 <__udivdi3+0x238>
   29c50:	2400ca36 	bltu	r4,r16,29f7c <__udivdi3+0x560>
   29c54:	102d883a 	mov	r22,r2
   29c58:	2421c83a 	sub	r16,r4,r16
   29c5c:	a80b883a 	mov	r5,r21
   29c60:	8009883a 	mov	r4,r16
   29c64:	d8c00015 	stw	r3,0(sp)
   29c68:	002a6280 	call	2a628 <__umodsi3>
   29c6c:	1027883a 	mov	r19,r2
   29c70:	a80b883a 	mov	r5,r21
   29c74:	8009883a 	mov	r4,r16
   29c78:	002a5c40 	call	2a5c4 <__udivsi3>
   29c7c:	9826943a 	slli	r19,r19,16
   29c80:	1529383a 	mul	r20,r2,r20
   29c84:	94bfffcc 	andi	r18,r18,65535
   29c88:	94e4b03a 	or	r18,r18,r19
   29c8c:	d8c00017 	ldw	r3,0(sp)
   29c90:	9500052e 	bgeu	r18,r20,29ca8 <__udivdi3+0x28c>
   29c94:	8ca5883a 	add	r18,r17,r18
   29c98:	113fffc4 	addi	r4,r2,-1
   29c9c:	94409736 	bltu	r18,r17,29efc <__udivdi3+0x4e0>
   29ca0:	9500962e 	bgeu	r18,r20,29efc <__udivdi3+0x4e0>
   29ca4:	10bfff84 	addi	r2,r2,-2
   29ca8:	b00c943a 	slli	r6,r22,16
   29cac:	3084b03a 	or	r2,r6,r2
   29cb0:	00000206 	br	29cbc <__udivdi3+0x2a0>
   29cb4:	0007883a 	mov	r3,zero
   29cb8:	0005883a 	mov	r2,zero
   29cbc:	dfc00a17 	ldw	ra,40(sp)
   29cc0:	df000917 	ldw	fp,36(sp)
   29cc4:	ddc00817 	ldw	r23,32(sp)
   29cc8:	dd800717 	ldw	r22,28(sp)
   29ccc:	dd400617 	ldw	r21,24(sp)
   29cd0:	dd000517 	ldw	r20,20(sp)
   29cd4:	dcc00417 	ldw	r19,16(sp)
   29cd8:	dc800317 	ldw	r18,12(sp)
   29cdc:	dc400217 	ldw	r17,8(sp)
   29ce0:	dc000117 	ldw	r16,4(sp)
   29ce4:	dec00b04 	addi	sp,sp,44
   29ce8:	f800283a 	ret
   29cec:	00803fc4 	movi	r2,255
   29cf0:	11c5803a 	cmpltu	r2,r2,r7
   29cf4:	100490fa 	slli	r2,r2,3
   29cf8:	003f9e06 	br	29b74 <__udivdi3+0x158>
   29cfc:	00803fc4 	movi	r2,255
   29d00:	1445803a 	cmpltu	r2,r2,r17
   29d04:	100490fa 	slli	r2,r2,3
   29d08:	003fb206 	br	29bd4 <__udivdi3+0x1b8>
   29d0c:	00804034 	movhi	r2,256
   29d10:	10bfffc4 	addi	r2,r2,-1
   29d14:	11808836 	bltu	r2,r6,29f38 <__udivdi3+0x51c>
   29d18:	00800404 	movi	r2,16
   29d1c:	003f5606 	br	29a78 <__udivdi3+0x5c>
   29d20:	30aed83a 	srl	r23,r6,r2
   29d24:	3d4e983a 	sll	r7,r7,r21
   29d28:	80acd83a 	srl	r22,r16,r2
   29d2c:	9884d83a 	srl	r2,r19,r2
   29d30:	3deeb03a 	or	r23,r7,r23
   29d34:	b824d43a 	srli	r18,r23,16
   29d38:	8560983a 	sll	r16,r16,r21
   29d3c:	b009883a 	mov	r4,r22
   29d40:	900b883a 	mov	r5,r18
   29d44:	3568983a 	sll	r20,r6,r21
   29d48:	1420b03a 	or	r16,r2,r16
   29d4c:	002a6280 	call	2a628 <__umodsi3>
   29d50:	b009883a 	mov	r4,r22
   29d54:	900b883a 	mov	r5,r18
   29d58:	1023883a 	mov	r17,r2
   29d5c:	002a5c40 	call	2a5c4 <__udivsi3>
   29d60:	8808943a 	slli	r4,r17,16
   29d64:	bf3fffcc 	andi	fp,r23,65535
   29d68:	8006d43a 	srli	r3,r16,16
   29d6c:	e0a3383a 	mul	r17,fp,r2
   29d70:	100d883a 	mov	r6,r2
   29d74:	1906b03a 	or	r3,r3,r4
   29d78:	1c40042e 	bgeu	r3,r17,29d8c <__udivdi3+0x370>
   29d7c:	1dc7883a 	add	r3,r3,r23
   29d80:	10bfffc4 	addi	r2,r2,-1
   29d84:	1dc0752e 	bgeu	r3,r23,29f5c <__udivdi3+0x540>
   29d88:	100d883a 	mov	r6,r2
   29d8c:	1c63c83a 	sub	r17,r3,r17
   29d90:	900b883a 	mov	r5,r18
   29d94:	8809883a 	mov	r4,r17
   29d98:	d9800015 	stw	r6,0(sp)
   29d9c:	002a6280 	call	2a628 <__umodsi3>
   29da0:	102d883a 	mov	r22,r2
   29da4:	8809883a 	mov	r4,r17
   29da8:	900b883a 	mov	r5,r18
   29dac:	002a5c40 	call	2a5c4 <__udivsi3>
   29db0:	b02c943a 	slli	r22,r22,16
   29db4:	e089383a 	mul	r4,fp,r2
   29db8:	843fffcc 	andi	r16,r16,65535
   29dbc:	85a0b03a 	or	r16,r16,r22
   29dc0:	d9800017 	ldw	r6,0(sp)
   29dc4:	8100042e 	bgeu	r16,r4,29dd8 <__udivdi3+0x3bc>
   29dc8:	85e1883a 	add	r16,r16,r23
   29dcc:	10ffffc4 	addi	r3,r2,-1
   29dd0:	85c05e2e 	bgeu	r16,r23,29f4c <__udivdi3+0x530>
   29dd4:	1805883a 	mov	r2,r3
   29dd8:	300c943a 	slli	r6,r6,16
   29ddc:	a17fffcc 	andi	r5,r20,65535
   29de0:	a028d43a 	srli	r20,r20,16
   29de4:	3084b03a 	or	r2,r6,r2
   29de8:	10ffffcc 	andi	r3,r2,65535
   29dec:	100cd43a 	srli	r6,r2,16
   29df0:	194f383a 	mul	r7,r3,r5
   29df4:	1d07383a 	mul	r3,r3,r20
   29df8:	314b383a 	mul	r5,r6,r5
   29dfc:	3810d43a 	srli	r8,r7,16
   29e00:	8121c83a 	sub	r16,r16,r4
   29e04:	1947883a 	add	r3,r3,r5
   29e08:	40c7883a 	add	r3,r8,r3
   29e0c:	350d383a 	mul	r6,r6,r20
   29e10:	1940022e 	bgeu	r3,r5,29e1c <__udivdi3+0x400>
   29e14:	01000074 	movhi	r4,1
   29e18:	310d883a 	add	r6,r6,r4
   29e1c:	1828d43a 	srli	r20,r3,16
   29e20:	a18d883a 	add	r6,r20,r6
   29e24:	81803e36 	bltu	r16,r6,29f20 <__udivdi3+0x504>
   29e28:	81803826 	beq	r16,r6,29f0c <__udivdi3+0x4f0>
   29e2c:	0007883a 	mov	r3,zero
   29e30:	003fa206 	br	29cbc <__udivdi3+0x2a0>
   29e34:	88e2983a 	sll	r17,r17,r3
   29e38:	80a8d83a 	srl	r20,r16,r2
   29e3c:	80e0983a 	sll	r16,r16,r3
   29e40:	882ad43a 	srli	r21,r17,16
   29e44:	9884d83a 	srl	r2,r19,r2
   29e48:	a009883a 	mov	r4,r20
   29e4c:	a80b883a 	mov	r5,r21
   29e50:	142eb03a 	or	r23,r2,r16
   29e54:	98e4983a 	sll	r18,r19,r3
   29e58:	002a6280 	call	2a628 <__umodsi3>
   29e5c:	a009883a 	mov	r4,r20
   29e60:	a80b883a 	mov	r5,r21
   29e64:	1021883a 	mov	r16,r2
   29e68:	002a5c40 	call	2a5c4 <__udivsi3>
   29e6c:	1039883a 	mov	fp,r2
   29e70:	8d3fffcc 	andi	r20,r17,65535
   29e74:	8020943a 	slli	r16,r16,16
   29e78:	b804d43a 	srli	r2,r23,16
   29e7c:	a72d383a 	mul	r22,r20,fp
   29e80:	1404b03a 	or	r2,r2,r16
   29e84:	1580062e 	bgeu	r2,r22,29ea0 <__udivdi3+0x484>
   29e88:	1445883a 	add	r2,r2,r17
   29e8c:	e0ffffc4 	addi	r3,fp,-1
   29e90:	14403836 	bltu	r2,r17,29f74 <__udivdi3+0x558>
   29e94:	1580372e 	bgeu	r2,r22,29f74 <__udivdi3+0x558>
   29e98:	e73fff84 	addi	fp,fp,-2
   29e9c:	1445883a 	add	r2,r2,r17
   29ea0:	15adc83a 	sub	r22,r2,r22
   29ea4:	a80b883a 	mov	r5,r21
   29ea8:	b009883a 	mov	r4,r22
   29eac:	002a6280 	call	2a628 <__umodsi3>
   29eb0:	1027883a 	mov	r19,r2
   29eb4:	b009883a 	mov	r4,r22
   29eb8:	a80b883a 	mov	r5,r21
   29ebc:	002a5c40 	call	2a5c4 <__udivsi3>
   29ec0:	9826943a 	slli	r19,r19,16
   29ec4:	a0a1383a 	mul	r16,r20,r2
   29ec8:	b93fffcc 	andi	r4,r23,65535
   29ecc:	24c8b03a 	or	r4,r4,r19
   29ed0:	2400062e 	bgeu	r4,r16,29eec <__udivdi3+0x4d0>
   29ed4:	2449883a 	add	r4,r4,r17
   29ed8:	10ffffc4 	addi	r3,r2,-1
   29edc:	24402336 	bltu	r4,r17,29f6c <__udivdi3+0x550>
   29ee0:	2400222e 	bgeu	r4,r16,29f6c <__udivdi3+0x550>
   29ee4:	10bfff84 	addi	r2,r2,-2
   29ee8:	2449883a 	add	r4,r4,r17
   29eec:	e038943a 	slli	fp,fp,16
   29ef0:	2421c83a 	sub	r16,r4,r16
   29ef4:	e086b03a 	or	r3,fp,r2
   29ef8:	003f4306 	br	29c08 <__udivdi3+0x1ec>
   29efc:	2005883a 	mov	r2,r4
   29f00:	003f6906 	br	29ca8 <__udivdi3+0x28c>
   29f04:	1805883a 	mov	r2,r3
   29f08:	003f0f06 	br	29b48 <__udivdi3+0x12c>
   29f0c:	1806943a 	slli	r3,r3,16
   29f10:	9d66983a 	sll	r19,r19,r21
   29f14:	39ffffcc 	andi	r7,r7,65535
   29f18:	19c7883a 	add	r3,r3,r7
   29f1c:	98ffc32e 	bgeu	r19,r3,29e2c <__udivdi3+0x410>
   29f20:	10bfffc4 	addi	r2,r2,-1
   29f24:	003fc106 	br	29e2c <__udivdi3+0x410>
   29f28:	00800604 	movi	r2,24
   29f2c:	003f1106 	br	29b74 <__udivdi3+0x158>
   29f30:	00800604 	movi	r2,24
   29f34:	003f2706 	br	29bd4 <__udivdi3+0x1b8>
   29f38:	00800604 	movi	r2,24
   29f3c:	003ece06 	br	29a78 <__udivdi3+0x5c>
   29f40:	0007883a 	mov	r3,zero
   29f44:	00800044 	movi	r2,1
   29f48:	003f5c06 	br	29cbc <__udivdi3+0x2a0>
   29f4c:	813fa12e 	bgeu	r16,r4,29dd4 <__udivdi3+0x3b8>
   29f50:	10bfff84 	addi	r2,r2,-2
   29f54:	85e1883a 	add	r16,r16,r23
   29f58:	003f9f06 	br	29dd8 <__udivdi3+0x3bc>
   29f5c:	1c7f8a2e 	bgeu	r3,r17,29d88 <__udivdi3+0x36c>
   29f60:	31bfff84 	addi	r6,r6,-2
   29f64:	1dc7883a 	add	r3,r3,r23
   29f68:	003f8806 	br	29d8c <__udivdi3+0x370>
   29f6c:	1805883a 	mov	r2,r3
   29f70:	003fde06 	br	29eec <__udivdi3+0x4d0>
   29f74:	1839883a 	mov	fp,r3
   29f78:	003fc906 	br	29ea0 <__udivdi3+0x484>
   29f7c:	b5bfff84 	addi	r22,r22,-2
   29f80:	2449883a 	add	r4,r4,r17
   29f84:	003f3406 	br	29c58 <__udivdi3+0x23c>
   29f88:	b5bfff84 	addi	r22,r22,-2
   29f8c:	1445883a 	add	r2,r2,r17
   29f90:	003edb06 	br	29b00 <__udivdi3+0xe4>

00029f94 <__umoddi3>:
   29f94:	defff404 	addi	sp,sp,-48
   29f98:	df000a15 	stw	fp,40(sp)
   29f9c:	dc400315 	stw	r17,12(sp)
   29fa0:	dc000215 	stw	r16,8(sp)
   29fa4:	dfc00b15 	stw	ra,44(sp)
   29fa8:	ddc00915 	stw	r23,36(sp)
   29fac:	dd800815 	stw	r22,32(sp)
   29fb0:	dd400715 	stw	r21,28(sp)
   29fb4:	dd000615 	stw	r20,24(sp)
   29fb8:	dcc00515 	stw	r19,20(sp)
   29fbc:	dc800415 	stw	r18,16(sp)
   29fc0:	2021883a 	mov	r16,r4
   29fc4:	2823883a 	mov	r17,r5
   29fc8:	2839883a 	mov	fp,r5
   29fcc:	38003c1e 	bne	r7,zero,2a0c0 <__umoddi3+0x12c>
   29fd0:	3027883a 	mov	r19,r6
   29fd4:	2029883a 	mov	r20,r4
   29fd8:	2980512e 	bgeu	r5,r6,2a120 <__umoddi3+0x18c>
   29fdc:	00bfffd4 	movui	r2,65535
   29fe0:	11809a36 	bltu	r2,r6,2a24c <__umoddi3+0x2b8>
   29fe4:	01003fc4 	movi	r4,255
   29fe8:	2189803a 	cmpltu	r4,r4,r6
   29fec:	200890fa 	slli	r4,r4,3
   29ff0:	3104d83a 	srl	r2,r6,r4
   29ff4:	00c00034 	movhi	r3,0
   29ff8:	18c07204 	addi	r3,r3,456
   29ffc:	1885883a 	add	r2,r3,r2
   2a000:	10c00003 	ldbu	r3,0(r2)
   2a004:	00800804 	movi	r2,32
   2a008:	1909883a 	add	r4,r3,r4
   2a00c:	1125c83a 	sub	r18,r2,r4
   2a010:	90000526 	beq	r18,zero,2a028 <__umoddi3+0x94>
   2a014:	8ca2983a 	sll	r17,r17,r18
   2a018:	8108d83a 	srl	r4,r16,r4
   2a01c:	34a6983a 	sll	r19,r6,r18
   2a020:	84a8983a 	sll	r20,r16,r18
   2a024:	2478b03a 	or	fp,r4,r17
   2a028:	982ed43a 	srli	r23,r19,16
   2a02c:	e009883a 	mov	r4,fp
   2a030:	9dbfffcc 	andi	r22,r19,65535
   2a034:	b80b883a 	mov	r5,r23
   2a038:	002a6280 	call	2a628 <__umodsi3>
   2a03c:	e009883a 	mov	r4,fp
   2a040:	b80b883a 	mov	r5,r23
   2a044:	102b883a 	mov	r21,r2
   2a048:	002a5c40 	call	2a5c4 <__udivsi3>
   2a04c:	a806943a 	slli	r3,r21,16
   2a050:	a008d43a 	srli	r4,r20,16
   2a054:	b085383a 	mul	r2,r22,r2
   2a058:	20c8b03a 	or	r4,r4,r3
   2a05c:	2080032e 	bgeu	r4,r2,2a06c <__umoddi3+0xd8>
   2a060:	24c9883a 	add	r4,r4,r19
   2a064:	24c00136 	bltu	r4,r19,2a06c <__umoddi3+0xd8>
   2a068:	20811036 	bltu	r4,r2,2a4ac <__umoddi3+0x518>
   2a06c:	20abc83a 	sub	r21,r4,r2
   2a070:	b80b883a 	mov	r5,r23
   2a074:	a809883a 	mov	r4,r21
   2a078:	002a6280 	call	2a628 <__umodsi3>
   2a07c:	1023883a 	mov	r17,r2
   2a080:	b80b883a 	mov	r5,r23
   2a084:	a809883a 	mov	r4,r21
   2a088:	002a5c40 	call	2a5c4 <__udivsi3>
   2a08c:	8822943a 	slli	r17,r17,16
   2a090:	b085383a 	mul	r2,r22,r2
   2a094:	a0ffffcc 	andi	r3,r20,65535
   2a098:	1c46b03a 	or	r3,r3,r17
   2a09c:	1880042e 	bgeu	r3,r2,2a0b0 <__umoddi3+0x11c>
   2a0a0:	1cc7883a 	add	r3,r3,r19
   2a0a4:	1cc00236 	bltu	r3,r19,2a0b0 <__umoddi3+0x11c>
   2a0a8:	1880012e 	bgeu	r3,r2,2a0b0 <__umoddi3+0x11c>
   2a0ac:	1cc7883a 	add	r3,r3,r19
   2a0b0:	1885c83a 	sub	r2,r3,r2
   2a0b4:	1484d83a 	srl	r2,r2,r18
   2a0b8:	0007883a 	mov	r3,zero
   2a0bc:	00004f06 	br	2a1fc <__umoddi3+0x268>
   2a0c0:	29c04c36 	bltu	r5,r7,2a1f4 <__umoddi3+0x260>
   2a0c4:	00bfffd4 	movui	r2,65535
   2a0c8:	11c0582e 	bgeu	r2,r7,2a22c <__umoddi3+0x298>
   2a0cc:	00804034 	movhi	r2,256
   2a0d0:	10bfffc4 	addi	r2,r2,-1
   2a0d4:	11c0e736 	bltu	r2,r7,2a474 <__umoddi3+0x4e0>
   2a0d8:	01000404 	movi	r4,16
   2a0dc:	3904d83a 	srl	r2,r7,r4
   2a0e0:	00c00034 	movhi	r3,0
   2a0e4:	18c07204 	addi	r3,r3,456
   2a0e8:	1885883a 	add	r2,r3,r2
   2a0ec:	14c00003 	ldbu	r19,0(r2)
   2a0f0:	00c00804 	movi	r3,32
   2a0f4:	9927883a 	add	r19,r19,r4
   2a0f8:	1ce9c83a 	sub	r20,r3,r19
   2a0fc:	a000581e 	bne	r20,zero,2a260 <__umoddi3+0x2cc>
   2a100:	3c400136 	bltu	r7,r17,2a108 <__umoddi3+0x174>
   2a104:	8180eb36 	bltu	r16,r6,2a4b4 <__umoddi3+0x520>
   2a108:	8185c83a 	sub	r2,r16,r6
   2a10c:	89e3c83a 	sub	r17,r17,r7
   2a110:	8089803a 	cmpltu	r4,r16,r2
   2a114:	8939c83a 	sub	fp,r17,r4
   2a118:	e007883a 	mov	r3,fp
   2a11c:	00003706 	br	2a1fc <__umoddi3+0x268>
   2a120:	3000041e 	bne	r6,zero,2a134 <__umoddi3+0x1a0>
   2a124:	000b883a 	mov	r5,zero
   2a128:	01000044 	movi	r4,1
   2a12c:	002a5c40 	call	2a5c4 <__udivsi3>
   2a130:	1027883a 	mov	r19,r2
   2a134:	00bfffd4 	movui	r2,65535
   2a138:	14c0402e 	bgeu	r2,r19,2a23c <__umoddi3+0x2a8>
   2a13c:	00804034 	movhi	r2,256
   2a140:	10bfffc4 	addi	r2,r2,-1
   2a144:	14c0cd36 	bltu	r2,r19,2a47c <__umoddi3+0x4e8>
   2a148:	00800404 	movi	r2,16
   2a14c:	9886d83a 	srl	r3,r19,r2
   2a150:	01000034 	movhi	r4,0
   2a154:	21007204 	addi	r4,r4,456
   2a158:	20c7883a 	add	r3,r4,r3
   2a15c:	18c00003 	ldbu	r3,0(r3)
   2a160:	1887883a 	add	r3,r3,r2
   2a164:	00800804 	movi	r2,32
   2a168:	10e5c83a 	sub	r18,r2,r3
   2a16c:	9000901e 	bne	r18,zero,2a3b0 <__umoddi3+0x41c>
   2a170:	982cd43a 	srli	r22,r19,16
   2a174:	8ce3c83a 	sub	r17,r17,r19
   2a178:	9d7fffcc 	andi	r21,r19,65535
   2a17c:	b00b883a 	mov	r5,r22
   2a180:	8809883a 	mov	r4,r17
   2a184:	002a6280 	call	2a628 <__umodsi3>
   2a188:	8809883a 	mov	r4,r17
   2a18c:	b00b883a 	mov	r5,r22
   2a190:	1021883a 	mov	r16,r2
   2a194:	002a5c40 	call	2a5c4 <__udivsi3>
   2a198:	8006943a 	slli	r3,r16,16
   2a19c:	a008d43a 	srli	r4,r20,16
   2a1a0:	1545383a 	mul	r2,r2,r21
   2a1a4:	20c8b03a 	or	r4,r4,r3
   2a1a8:	2080042e 	bgeu	r4,r2,2a1bc <__umoddi3+0x228>
   2a1ac:	24c9883a 	add	r4,r4,r19
   2a1b0:	24c00236 	bltu	r4,r19,2a1bc <__umoddi3+0x228>
   2a1b4:	2080012e 	bgeu	r4,r2,2a1bc <__umoddi3+0x228>
   2a1b8:	24c9883a 	add	r4,r4,r19
   2a1bc:	20a1c83a 	sub	r16,r4,r2
   2a1c0:	b00b883a 	mov	r5,r22
   2a1c4:	8009883a 	mov	r4,r16
   2a1c8:	002a6280 	call	2a628 <__umodsi3>
   2a1cc:	1023883a 	mov	r17,r2
   2a1d0:	b00b883a 	mov	r5,r22
   2a1d4:	8009883a 	mov	r4,r16
   2a1d8:	002a5c40 	call	2a5c4 <__udivsi3>
   2a1dc:	8822943a 	slli	r17,r17,16
   2a1e0:	1545383a 	mul	r2,r2,r21
   2a1e4:	a53fffcc 	andi	r20,r20,65535
   2a1e8:	a446b03a 	or	r3,r20,r17
   2a1ec:	18bfb02e 	bgeu	r3,r2,2a0b0 <__umoddi3+0x11c>
   2a1f0:	003fab06 	br	2a0a0 <__umoddi3+0x10c>
   2a1f4:	2005883a 	mov	r2,r4
   2a1f8:	2807883a 	mov	r3,r5
   2a1fc:	dfc00b17 	ldw	ra,44(sp)
   2a200:	df000a17 	ldw	fp,40(sp)
   2a204:	ddc00917 	ldw	r23,36(sp)
   2a208:	dd800817 	ldw	r22,32(sp)
   2a20c:	dd400717 	ldw	r21,28(sp)
   2a210:	dd000617 	ldw	r20,24(sp)
   2a214:	dcc00517 	ldw	r19,20(sp)
   2a218:	dc800417 	ldw	r18,16(sp)
   2a21c:	dc400317 	ldw	r17,12(sp)
   2a220:	dc000217 	ldw	r16,8(sp)
   2a224:	dec00c04 	addi	sp,sp,48
   2a228:	f800283a 	ret
   2a22c:	04c03fc4 	movi	r19,255
   2a230:	99c9803a 	cmpltu	r4,r19,r7
   2a234:	200890fa 	slli	r4,r4,3
   2a238:	003fa806 	br	2a0dc <__umoddi3+0x148>
   2a23c:	00803fc4 	movi	r2,255
   2a240:	14c5803a 	cmpltu	r2,r2,r19
   2a244:	100490fa 	slli	r2,r2,3
   2a248:	003fc006 	br	2a14c <__umoddi3+0x1b8>
   2a24c:	00804034 	movhi	r2,256
   2a250:	10bfffc4 	addi	r2,r2,-1
   2a254:	11808b36 	bltu	r2,r6,2a484 <__umoddi3+0x4f0>
   2a258:	01000404 	movi	r4,16
   2a25c:	003f6406 	br	29ff0 <__umoddi3+0x5c>
   2a260:	34c4d83a 	srl	r2,r6,r19
   2a264:	3d0e983a 	sll	r7,r7,r20
   2a268:	8cf8d83a 	srl	fp,r17,r19
   2a26c:	8d10983a 	sll	r8,r17,r20
   2a270:	38aab03a 	or	r21,r7,r2
   2a274:	a82cd43a 	srli	r22,r21,16
   2a278:	84e2d83a 	srl	r17,r16,r19
   2a27c:	e009883a 	mov	r4,fp
   2a280:	b00b883a 	mov	r5,r22
   2a284:	8a22b03a 	or	r17,r17,r8
   2a288:	3524983a 	sll	r18,r6,r20
   2a28c:	002a6280 	call	2a628 <__umodsi3>
   2a290:	e009883a 	mov	r4,fp
   2a294:	b00b883a 	mov	r5,r22
   2a298:	102f883a 	mov	r23,r2
   2a29c:	002a5c40 	call	2a5c4 <__udivsi3>
   2a2a0:	100d883a 	mov	r6,r2
   2a2a4:	b808943a 	slli	r4,r23,16
   2a2a8:	aa3fffcc 	andi	r8,r21,65535
   2a2ac:	8804d43a 	srli	r2,r17,16
   2a2b0:	41af383a 	mul	r23,r8,r6
   2a2b4:	8520983a 	sll	r16,r16,r20
   2a2b8:	1104b03a 	or	r2,r2,r4
   2a2bc:	15c0042e 	bgeu	r2,r23,2a2d0 <__umoddi3+0x33c>
   2a2c0:	1545883a 	add	r2,r2,r21
   2a2c4:	30ffffc4 	addi	r3,r6,-1
   2a2c8:	1540742e 	bgeu	r2,r21,2a49c <__umoddi3+0x508>
   2a2cc:	180d883a 	mov	r6,r3
   2a2d0:	15efc83a 	sub	r23,r2,r23
   2a2d4:	b00b883a 	mov	r5,r22
   2a2d8:	b809883a 	mov	r4,r23
   2a2dc:	d9800115 	stw	r6,4(sp)
   2a2e0:	da000015 	stw	r8,0(sp)
   2a2e4:	002a6280 	call	2a628 <__umodsi3>
   2a2e8:	b00b883a 	mov	r5,r22
   2a2ec:	b809883a 	mov	r4,r23
   2a2f0:	1039883a 	mov	fp,r2
   2a2f4:	002a5c40 	call	2a5c4 <__udivsi3>
   2a2f8:	da000017 	ldw	r8,0(sp)
   2a2fc:	e038943a 	slli	fp,fp,16
   2a300:	100b883a 	mov	r5,r2
   2a304:	4089383a 	mul	r4,r8,r2
   2a308:	8a3fffcc 	andi	r8,r17,65535
   2a30c:	4710b03a 	or	r8,r8,fp
   2a310:	d9800117 	ldw	r6,4(sp)
   2a314:	4100042e 	bgeu	r8,r4,2a328 <__umoddi3+0x394>
   2a318:	4551883a 	add	r8,r8,r21
   2a31c:	10bfffc4 	addi	r2,r2,-1
   2a320:	45405a2e 	bgeu	r8,r21,2a48c <__umoddi3+0x4f8>
   2a324:	100b883a 	mov	r5,r2
   2a328:	300c943a 	slli	r6,r6,16
   2a32c:	91ffffcc 	andi	r7,r18,65535
   2a330:	9004d43a 	srli	r2,r18,16
   2a334:	314cb03a 	or	r6,r6,r5
   2a338:	317fffcc 	andi	r5,r6,65535
   2a33c:	300cd43a 	srli	r6,r6,16
   2a340:	29d3383a 	mul	r9,r5,r7
   2a344:	288b383a 	mul	r5,r5,r2
   2a348:	31cf383a 	mul	r7,r6,r7
   2a34c:	4806d43a 	srli	r3,r9,16
   2a350:	4111c83a 	sub	r8,r8,r4
   2a354:	29cb883a 	add	r5,r5,r7
   2a358:	194b883a 	add	r5,r3,r5
   2a35c:	3085383a 	mul	r2,r6,r2
   2a360:	29c0022e 	bgeu	r5,r7,2a36c <__umoddi3+0x3d8>
   2a364:	00c00074 	movhi	r3,1
   2a368:	10c5883a 	add	r2,r2,r3
   2a36c:	2808d43a 	srli	r4,r5,16
   2a370:	280a943a 	slli	r5,r5,16
   2a374:	4a7fffcc 	andi	r9,r9,65535
   2a378:	2085883a 	add	r2,r4,r2
   2a37c:	2a4b883a 	add	r5,r5,r9
   2a380:	40803636 	bltu	r8,r2,2a45c <__umoddi3+0x4c8>
   2a384:	40804d26 	beq	r8,r2,2a4bc <__umoddi3+0x528>
   2a388:	4089c83a 	sub	r4,r8,r2
   2a38c:	280f883a 	mov	r7,r5
   2a390:	81cfc83a 	sub	r7,r16,r7
   2a394:	81c7803a 	cmpltu	r3,r16,r7
   2a398:	20c7c83a 	sub	r3,r4,r3
   2a39c:	1cc4983a 	sll	r2,r3,r19
   2a3a0:	3d0ed83a 	srl	r7,r7,r20
   2a3a4:	1d06d83a 	srl	r3,r3,r20
   2a3a8:	11c4b03a 	or	r2,r2,r7
   2a3ac:	003f9306 	br	2a1fc <__umoddi3+0x268>
   2a3b0:	9ca6983a 	sll	r19,r19,r18
   2a3b4:	88e8d83a 	srl	r20,r17,r3
   2a3b8:	80c4d83a 	srl	r2,r16,r3
   2a3bc:	982cd43a 	srli	r22,r19,16
   2a3c0:	8ca2983a 	sll	r17,r17,r18
   2a3c4:	a009883a 	mov	r4,r20
   2a3c8:	b00b883a 	mov	r5,r22
   2a3cc:	1478b03a 	or	fp,r2,r17
   2a3d0:	002a6280 	call	2a628 <__umodsi3>
   2a3d4:	a009883a 	mov	r4,r20
   2a3d8:	b00b883a 	mov	r5,r22
   2a3dc:	1023883a 	mov	r17,r2
   2a3e0:	002a5c40 	call	2a5c4 <__udivsi3>
   2a3e4:	9d7fffcc 	andi	r21,r19,65535
   2a3e8:	880a943a 	slli	r5,r17,16
   2a3ec:	e008d43a 	srli	r4,fp,16
   2a3f0:	a885383a 	mul	r2,r21,r2
   2a3f4:	84a8983a 	sll	r20,r16,r18
   2a3f8:	2148b03a 	or	r4,r4,r5
   2a3fc:	2080042e 	bgeu	r4,r2,2a410 <__umoddi3+0x47c>
   2a400:	24c9883a 	add	r4,r4,r19
   2a404:	24c00236 	bltu	r4,r19,2a410 <__umoddi3+0x47c>
   2a408:	2080012e 	bgeu	r4,r2,2a410 <__umoddi3+0x47c>
   2a40c:	24c9883a 	add	r4,r4,r19
   2a410:	20a3c83a 	sub	r17,r4,r2
   2a414:	b00b883a 	mov	r5,r22
   2a418:	8809883a 	mov	r4,r17
   2a41c:	002a6280 	call	2a628 <__umodsi3>
   2a420:	102f883a 	mov	r23,r2
   2a424:	8809883a 	mov	r4,r17
   2a428:	b00b883a 	mov	r5,r22
   2a42c:	002a5c40 	call	2a5c4 <__udivsi3>
   2a430:	b82e943a 	slli	r23,r23,16
   2a434:	a885383a 	mul	r2,r21,r2
   2a438:	e13fffcc 	andi	r4,fp,65535
   2a43c:	25c8b03a 	or	r4,r4,r23
   2a440:	2080042e 	bgeu	r4,r2,2a454 <__umoddi3+0x4c0>
   2a444:	24c9883a 	add	r4,r4,r19
   2a448:	24c00236 	bltu	r4,r19,2a454 <__umoddi3+0x4c0>
   2a44c:	2080012e 	bgeu	r4,r2,2a454 <__umoddi3+0x4c0>
   2a450:	24c9883a 	add	r4,r4,r19
   2a454:	20a3c83a 	sub	r17,r4,r2
   2a458:	003f4806 	br	2a17c <__umoddi3+0x1e8>
   2a45c:	2c8fc83a 	sub	r7,r5,r18
   2a460:	1545c83a 	sub	r2,r2,r21
   2a464:	29cb803a 	cmpltu	r5,r5,r7
   2a468:	1145c83a 	sub	r2,r2,r5
   2a46c:	4089c83a 	sub	r4,r8,r2
   2a470:	003fc706 	br	2a390 <__umoddi3+0x3fc>
   2a474:	01000604 	movi	r4,24
   2a478:	003f1806 	br	2a0dc <__umoddi3+0x148>
   2a47c:	00800604 	movi	r2,24
   2a480:	003f3206 	br	2a14c <__umoddi3+0x1b8>
   2a484:	01000604 	movi	r4,24
   2a488:	003ed906 	br	29ff0 <__umoddi3+0x5c>
   2a48c:	413fa52e 	bgeu	r8,r4,2a324 <__umoddi3+0x390>
   2a490:	297fff84 	addi	r5,r5,-2
   2a494:	4551883a 	add	r8,r8,r21
   2a498:	003fa306 	br	2a328 <__umoddi3+0x394>
   2a49c:	15ff8b2e 	bgeu	r2,r23,2a2cc <__umoddi3+0x338>
   2a4a0:	31bfff84 	addi	r6,r6,-2
   2a4a4:	1545883a 	add	r2,r2,r21
   2a4a8:	003f8906 	br	2a2d0 <__umoddi3+0x33c>
   2a4ac:	24c9883a 	add	r4,r4,r19
   2a4b0:	003eee06 	br	2a06c <__umoddi3+0xd8>
   2a4b4:	8005883a 	mov	r2,r16
   2a4b8:	003f1706 	br	2a118 <__umoddi3+0x184>
   2a4bc:	817fe736 	bltu	r16,r5,2a45c <__umoddi3+0x4c8>
   2a4c0:	280f883a 	mov	r7,r5
   2a4c4:	0009883a 	mov	r4,zero
   2a4c8:	003fb106 	br	2a390 <__umoddi3+0x3fc>

0002a4cc <__divsi3>:
   2a4cc:	20001b16 	blt	r4,zero,2a53c <__divsi3+0x70>
   2a4d0:	000f883a 	mov	r7,zero
   2a4d4:	28001616 	blt	r5,zero,2a530 <__divsi3+0x64>
   2a4d8:	200d883a 	mov	r6,r4
   2a4dc:	29001a2e 	bgeu	r5,r4,2a548 <__divsi3+0x7c>
   2a4e0:	00800804 	movi	r2,32
   2a4e4:	00c00044 	movi	r3,1
   2a4e8:	00000106 	br	2a4f0 <__divsi3+0x24>
   2a4ec:	10000d26 	beq	r2,zero,2a524 <__divsi3+0x58>
   2a4f0:	294b883a 	add	r5,r5,r5
   2a4f4:	10bfffc4 	addi	r2,r2,-1
   2a4f8:	18c7883a 	add	r3,r3,r3
   2a4fc:	293ffb36 	bltu	r5,r4,2a4ec <__divsi3+0x20>
   2a500:	0005883a 	mov	r2,zero
   2a504:	18000726 	beq	r3,zero,2a524 <__divsi3+0x58>
   2a508:	0005883a 	mov	r2,zero
   2a50c:	31400236 	bltu	r6,r5,2a518 <__divsi3+0x4c>
   2a510:	314dc83a 	sub	r6,r6,r5
   2a514:	10c4b03a 	or	r2,r2,r3
   2a518:	1806d07a 	srli	r3,r3,1
   2a51c:	280ad07a 	srli	r5,r5,1
   2a520:	183ffa1e 	bne	r3,zero,2a50c <__divsi3+0x40>
   2a524:	38000126 	beq	r7,zero,2a52c <__divsi3+0x60>
   2a528:	0085c83a 	sub	r2,zero,r2
   2a52c:	f800283a 	ret
   2a530:	014bc83a 	sub	r5,zero,r5
   2a534:	39c0005c 	xori	r7,r7,1
   2a538:	003fe706 	br	2a4d8 <__divsi3+0xc>
   2a53c:	0109c83a 	sub	r4,zero,r4
   2a540:	01c00044 	movi	r7,1
   2a544:	003fe306 	br	2a4d4 <__divsi3+0x8>
   2a548:	00c00044 	movi	r3,1
   2a54c:	003fee06 	br	2a508 <__divsi3+0x3c>

0002a550 <__modsi3>:
   2a550:	20001716 	blt	r4,zero,2a5b0 <__modsi3+0x60>
   2a554:	000f883a 	mov	r7,zero
   2a558:	2005883a 	mov	r2,r4
   2a55c:	28001216 	blt	r5,zero,2a5a8 <__modsi3+0x58>
   2a560:	2900162e 	bgeu	r5,r4,2a5bc <__modsi3+0x6c>
   2a564:	01800804 	movi	r6,32
   2a568:	00c00044 	movi	r3,1
   2a56c:	00000106 	br	2a574 <__modsi3+0x24>
   2a570:	30000a26 	beq	r6,zero,2a59c <__modsi3+0x4c>
   2a574:	294b883a 	add	r5,r5,r5
   2a578:	31bfffc4 	addi	r6,r6,-1
   2a57c:	18c7883a 	add	r3,r3,r3
   2a580:	293ffb36 	bltu	r5,r4,2a570 <__modsi3+0x20>
   2a584:	18000526 	beq	r3,zero,2a59c <__modsi3+0x4c>
   2a588:	1806d07a 	srli	r3,r3,1
   2a58c:	11400136 	bltu	r2,r5,2a594 <__modsi3+0x44>
   2a590:	1145c83a 	sub	r2,r2,r5
   2a594:	280ad07a 	srli	r5,r5,1
   2a598:	183ffb1e 	bne	r3,zero,2a588 <__modsi3+0x38>
   2a59c:	38000126 	beq	r7,zero,2a5a4 <__modsi3+0x54>
   2a5a0:	0085c83a 	sub	r2,zero,r2
   2a5a4:	f800283a 	ret
   2a5a8:	014bc83a 	sub	r5,zero,r5
   2a5ac:	003fec06 	br	2a560 <__modsi3+0x10>
   2a5b0:	0109c83a 	sub	r4,zero,r4
   2a5b4:	01c00044 	movi	r7,1
   2a5b8:	003fe706 	br	2a558 <__modsi3+0x8>
   2a5bc:	00c00044 	movi	r3,1
   2a5c0:	003ff106 	br	2a588 <__modsi3+0x38>

0002a5c4 <__udivsi3>:
   2a5c4:	200d883a 	mov	r6,r4
   2a5c8:	2900152e 	bgeu	r5,r4,2a620 <__udivsi3+0x5c>
   2a5cc:	28001416 	blt	r5,zero,2a620 <__udivsi3+0x5c>
   2a5d0:	00800804 	movi	r2,32
   2a5d4:	00c00044 	movi	r3,1
   2a5d8:	00000206 	br	2a5e4 <__udivsi3+0x20>
   2a5dc:	10000e26 	beq	r2,zero,2a618 <__udivsi3+0x54>
   2a5e0:	28000516 	blt	r5,zero,2a5f8 <__udivsi3+0x34>
   2a5e4:	294b883a 	add	r5,r5,r5
   2a5e8:	10bfffc4 	addi	r2,r2,-1
   2a5ec:	18c7883a 	add	r3,r3,r3
   2a5f0:	293ffa36 	bltu	r5,r4,2a5dc <__udivsi3+0x18>
   2a5f4:	18000826 	beq	r3,zero,2a618 <__udivsi3+0x54>
   2a5f8:	0005883a 	mov	r2,zero
   2a5fc:	31400236 	bltu	r6,r5,2a608 <__udivsi3+0x44>
   2a600:	314dc83a 	sub	r6,r6,r5
   2a604:	10c4b03a 	or	r2,r2,r3
   2a608:	1806d07a 	srli	r3,r3,1
   2a60c:	280ad07a 	srli	r5,r5,1
   2a610:	183ffa1e 	bne	r3,zero,2a5fc <__udivsi3+0x38>
   2a614:	f800283a 	ret
   2a618:	0005883a 	mov	r2,zero
   2a61c:	f800283a 	ret
   2a620:	00c00044 	movi	r3,1
   2a624:	003ff406 	br	2a5f8 <__udivsi3+0x34>

0002a628 <__umodsi3>:
   2a628:	2005883a 	mov	r2,r4
   2a62c:	2900122e 	bgeu	r5,r4,2a678 <__umodsi3+0x50>
   2a630:	28001116 	blt	r5,zero,2a678 <__umodsi3+0x50>
   2a634:	01800804 	movi	r6,32
   2a638:	00c00044 	movi	r3,1
   2a63c:	00000206 	br	2a648 <__umodsi3+0x20>
   2a640:	30000c26 	beq	r6,zero,2a674 <__umodsi3+0x4c>
   2a644:	28000516 	blt	r5,zero,2a65c <__umodsi3+0x34>
   2a648:	294b883a 	add	r5,r5,r5
   2a64c:	31bfffc4 	addi	r6,r6,-1
   2a650:	18c7883a 	add	r3,r3,r3
   2a654:	293ffa36 	bltu	r5,r4,2a640 <__umodsi3+0x18>
   2a658:	18000626 	beq	r3,zero,2a674 <__umodsi3+0x4c>
   2a65c:	1806d07a 	srli	r3,r3,1
   2a660:	11400136 	bltu	r2,r5,2a668 <__umodsi3+0x40>
   2a664:	1145c83a 	sub	r2,r2,r5
   2a668:	280ad07a 	srli	r5,r5,1
   2a66c:	183ffb1e 	bne	r3,zero,2a65c <__umodsi3+0x34>
   2a670:	f800283a 	ret
   2a674:	f800283a 	ret
   2a678:	00c00044 	movi	r3,1
   2a67c:	003ff706 	br	2a65c <__umodsi3+0x34>

0002a680 <__adddf3>:
   2a680:	02c00434 	movhi	r11,16
   2a684:	5affffc4 	addi	r11,r11,-1
   2a688:	2806d7fa 	srli	r3,r5,31
   2a68c:	2ad4703a 	and	r10,r5,r11
   2a690:	3ad2703a 	and	r9,r7,r11
   2a694:	3804d53a 	srli	r2,r7,20
   2a698:	3018d77a 	srli	r12,r6,29
   2a69c:	280ad53a 	srli	r5,r5,20
   2a6a0:	501490fa 	slli	r10,r10,3
   2a6a4:	2010d77a 	srli	r8,r4,29
   2a6a8:	481290fa 	slli	r9,r9,3
   2a6ac:	380ed7fa 	srli	r7,r7,31
   2a6b0:	defffb04 	addi	sp,sp,-20
   2a6b4:	dc800215 	stw	r18,8(sp)
   2a6b8:	dc400115 	stw	r17,4(sp)
   2a6bc:	dc000015 	stw	r16,0(sp)
   2a6c0:	dfc00415 	stw	ra,16(sp)
   2a6c4:	dcc00315 	stw	r19,12(sp)
   2a6c8:	1c803fcc 	andi	r18,r3,255
   2a6cc:	2c01ffcc 	andi	r16,r5,2047
   2a6d0:	5210b03a 	or	r8,r10,r8
   2a6d4:	202290fa 	slli	r17,r4,3
   2a6d8:	1081ffcc 	andi	r2,r2,2047
   2a6dc:	4b12b03a 	or	r9,r9,r12
   2a6e0:	300c90fa 	slli	r6,r6,3
   2a6e4:	91c07526 	beq	r18,r7,2a8bc <__adddf3+0x23c>
   2a6e8:	8087c83a 	sub	r3,r16,r2
   2a6ec:	00c0ab0e 	bge	zero,r3,2a99c <__adddf3+0x31c>
   2a6f0:	10002a1e 	bne	r2,zero,2a79c <__adddf3+0x11c>
   2a6f4:	4984b03a 	or	r2,r9,r6
   2a6f8:	1000961e 	bne	r2,zero,2a954 <__adddf3+0x2d4>
   2a6fc:	888001cc 	andi	r2,r17,7
   2a700:	10000726 	beq	r2,zero,2a720 <__adddf3+0xa0>
   2a704:	888003cc 	andi	r2,r17,15
   2a708:	00c00104 	movi	r3,4
   2a70c:	10c00426 	beq	r2,r3,2a720 <__adddf3+0xa0>
   2a710:	88c7883a 	add	r3,r17,r3
   2a714:	1c63803a 	cmpltu	r17,r3,r17
   2a718:	4451883a 	add	r8,r8,r17
   2a71c:	1823883a 	mov	r17,r3
   2a720:	4080202c 	andhi	r2,r8,128
   2a724:	10005926 	beq	r2,zero,2a88c <__adddf3+0x20c>
   2a728:	84000044 	addi	r16,r16,1
   2a72c:	0081ffc4 	movi	r2,2047
   2a730:	8080ba26 	beq	r16,r2,2aa1c <__adddf3+0x39c>
   2a734:	00bfe034 	movhi	r2,65408
   2a738:	10bfffc4 	addi	r2,r2,-1
   2a73c:	4090703a 	and	r8,r8,r2
   2a740:	4004977a 	slli	r2,r8,29
   2a744:	4010927a 	slli	r8,r8,9
   2a748:	8822d0fa 	srli	r17,r17,3
   2a74c:	8401ffcc 	andi	r16,r16,2047
   2a750:	4010d33a 	srli	r8,r8,12
   2a754:	9007883a 	mov	r3,r18
   2a758:	1444b03a 	or	r2,r2,r17
   2a75c:	8401ffcc 	andi	r16,r16,2047
   2a760:	8020953a 	slli	r16,r16,20
   2a764:	18c03fcc 	andi	r3,r3,255
   2a768:	01000434 	movhi	r4,16
   2a76c:	213fffc4 	addi	r4,r4,-1
   2a770:	180697fa 	slli	r3,r3,31
   2a774:	4110703a 	and	r8,r8,r4
   2a778:	4410b03a 	or	r8,r8,r16
   2a77c:	40c6b03a 	or	r3,r8,r3
   2a780:	dfc00417 	ldw	ra,16(sp)
   2a784:	dcc00317 	ldw	r19,12(sp)
   2a788:	dc800217 	ldw	r18,8(sp)
   2a78c:	dc400117 	ldw	r17,4(sp)
   2a790:	dc000017 	ldw	r16,0(sp)
   2a794:	dec00504 	addi	sp,sp,20
   2a798:	f800283a 	ret
   2a79c:	0081ffc4 	movi	r2,2047
   2a7a0:	80bfd626 	beq	r16,r2,2a6fc <__adddf3+0x7c>
   2a7a4:	4a402034 	orhi	r9,r9,128
   2a7a8:	00800e04 	movi	r2,56
   2a7ac:	10c09f16 	blt	r2,r3,2aa2c <__adddf3+0x3ac>
   2a7b0:	008007c4 	movi	r2,31
   2a7b4:	10c0c216 	blt	r2,r3,2aac0 <__adddf3+0x440>
   2a7b8:	00800804 	movi	r2,32
   2a7bc:	10c5c83a 	sub	r2,r2,r3
   2a7c0:	488a983a 	sll	r5,r9,r2
   2a7c4:	30c8d83a 	srl	r4,r6,r3
   2a7c8:	3084983a 	sll	r2,r6,r2
   2a7cc:	48c6d83a 	srl	r3,r9,r3
   2a7d0:	290cb03a 	or	r6,r5,r4
   2a7d4:	1004c03a 	cmpne	r2,r2,zero
   2a7d8:	308cb03a 	or	r6,r6,r2
   2a7dc:	898dc83a 	sub	r6,r17,r6
   2a7e0:	89a3803a 	cmpltu	r17,r17,r6
   2a7e4:	40d1c83a 	sub	r8,r8,r3
   2a7e8:	4451c83a 	sub	r8,r8,r17
   2a7ec:	3023883a 	mov	r17,r6
   2a7f0:	4080202c 	andhi	r2,r8,128
   2a7f4:	10002326 	beq	r2,zero,2a884 <__adddf3+0x204>
   2a7f8:	04c02034 	movhi	r19,128
   2a7fc:	9cffffc4 	addi	r19,r19,-1
   2a800:	44e6703a 	and	r19,r8,r19
   2a804:	98007626 	beq	r19,zero,2a9e0 <__adddf3+0x360>
   2a808:	9809883a 	mov	r4,r19
   2a80c:	002cc840 	call	2cc84 <__clzsi2>
   2a810:	10fffe04 	addi	r3,r2,-8
   2a814:	010007c4 	movi	r4,31
   2a818:	20c07716 	blt	r4,r3,2a9f8 <__adddf3+0x378>
   2a81c:	00800804 	movi	r2,32
   2a820:	10c5c83a 	sub	r2,r2,r3
   2a824:	8884d83a 	srl	r2,r17,r2
   2a828:	98d0983a 	sll	r8,r19,r3
   2a82c:	88e2983a 	sll	r17,r17,r3
   2a830:	1204b03a 	or	r2,r2,r8
   2a834:	1c007416 	blt	r3,r16,2aa08 <__adddf3+0x388>
   2a838:	1c21c83a 	sub	r16,r3,r16
   2a83c:	82000044 	addi	r8,r16,1
   2a840:	00c007c4 	movi	r3,31
   2a844:	1a009116 	blt	r3,r8,2aa8c <__adddf3+0x40c>
   2a848:	00c00804 	movi	r3,32
   2a84c:	1a07c83a 	sub	r3,r3,r8
   2a850:	8a08d83a 	srl	r4,r17,r8
   2a854:	88e2983a 	sll	r17,r17,r3
   2a858:	10c6983a 	sll	r3,r2,r3
   2a85c:	1210d83a 	srl	r8,r2,r8
   2a860:	8804c03a 	cmpne	r2,r17,zero
   2a864:	1906b03a 	or	r3,r3,r4
   2a868:	18a2b03a 	or	r17,r3,r2
   2a86c:	0021883a 	mov	r16,zero
   2a870:	003fa206 	br	2a6fc <__adddf3+0x7c>
   2a874:	1890b03a 	or	r8,r3,r2
   2a878:	40017d26 	beq	r8,zero,2ae70 <__adddf3+0x7f0>
   2a87c:	1011883a 	mov	r8,r2
   2a880:	1823883a 	mov	r17,r3
   2a884:	888001cc 	andi	r2,r17,7
   2a888:	103f9e1e 	bne	r2,zero,2a704 <__adddf3+0x84>
   2a88c:	4004977a 	slli	r2,r8,29
   2a890:	8822d0fa 	srli	r17,r17,3
   2a894:	4010d0fa 	srli	r8,r8,3
   2a898:	9007883a 	mov	r3,r18
   2a89c:	1444b03a 	or	r2,r2,r17
   2a8a0:	0101ffc4 	movi	r4,2047
   2a8a4:	81002426 	beq	r16,r4,2a938 <__adddf3+0x2b8>
   2a8a8:	8120703a 	and	r16,r16,r4
   2a8ac:	01000434 	movhi	r4,16
   2a8b0:	213fffc4 	addi	r4,r4,-1
   2a8b4:	4110703a 	and	r8,r8,r4
   2a8b8:	003fa806 	br	2a75c <__adddf3+0xdc>
   2a8bc:	8089c83a 	sub	r4,r16,r2
   2a8c0:	01005e0e 	bge	zero,r4,2aa3c <__adddf3+0x3bc>
   2a8c4:	10002b26 	beq	r2,zero,2a974 <__adddf3+0x2f4>
   2a8c8:	0081ffc4 	movi	r2,2047
   2a8cc:	80bf8b26 	beq	r16,r2,2a6fc <__adddf3+0x7c>
   2a8d0:	4a402034 	orhi	r9,r9,128
   2a8d4:	00800e04 	movi	r2,56
   2a8d8:	1100a40e 	bge	r2,r4,2ab6c <__adddf3+0x4ec>
   2a8dc:	498cb03a 	or	r6,r9,r6
   2a8e0:	300ac03a 	cmpne	r5,r6,zero
   2a8e4:	0013883a 	mov	r9,zero
   2a8e8:	2c4b883a 	add	r5,r5,r17
   2a8ec:	2c63803a 	cmpltu	r17,r5,r17
   2a8f0:	4a11883a 	add	r8,r9,r8
   2a8f4:	8a11883a 	add	r8,r17,r8
   2a8f8:	2823883a 	mov	r17,r5
   2a8fc:	4080202c 	andhi	r2,r8,128
   2a900:	103fe026 	beq	r2,zero,2a884 <__adddf3+0x204>
   2a904:	84000044 	addi	r16,r16,1
   2a908:	0081ffc4 	movi	r2,2047
   2a90c:	8080d226 	beq	r16,r2,2ac58 <__adddf3+0x5d8>
   2a910:	00bfe034 	movhi	r2,65408
   2a914:	10bfffc4 	addi	r2,r2,-1
   2a918:	4090703a 	and	r8,r8,r2
   2a91c:	880ad07a 	srli	r5,r17,1
   2a920:	400897fa 	slli	r4,r8,31
   2a924:	88c0004c 	andi	r3,r17,1
   2a928:	28e2b03a 	or	r17,r5,r3
   2a92c:	4010d07a 	srli	r8,r8,1
   2a930:	2462b03a 	or	r17,r4,r17
   2a934:	003f7106 	br	2a6fc <__adddf3+0x7c>
   2a938:	4088b03a 	or	r4,r8,r2
   2a93c:	20014526 	beq	r4,zero,2ae54 <__adddf3+0x7d4>
   2a940:	01000434 	movhi	r4,16
   2a944:	42000234 	orhi	r8,r8,8
   2a948:	213fffc4 	addi	r4,r4,-1
   2a94c:	4110703a 	and	r8,r8,r4
   2a950:	003f8206 	br	2a75c <__adddf3+0xdc>
   2a954:	18ffffc4 	addi	r3,r3,-1
   2a958:	1800491e 	bne	r3,zero,2aa80 <__adddf3+0x400>
   2a95c:	898bc83a 	sub	r5,r17,r6
   2a960:	8963803a 	cmpltu	r17,r17,r5
   2a964:	4251c83a 	sub	r8,r8,r9
   2a968:	4451c83a 	sub	r8,r8,r17
   2a96c:	2823883a 	mov	r17,r5
   2a970:	003f9f06 	br	2a7f0 <__adddf3+0x170>
   2a974:	4984b03a 	or	r2,r9,r6
   2a978:	103f6026 	beq	r2,zero,2a6fc <__adddf3+0x7c>
   2a97c:	213fffc4 	addi	r4,r4,-1
   2a980:	2000931e 	bne	r4,zero,2abd0 <__adddf3+0x550>
   2a984:	898d883a 	add	r6,r17,r6
   2a988:	3463803a 	cmpltu	r17,r6,r17
   2a98c:	4251883a 	add	r8,r8,r9
   2a990:	8a11883a 	add	r8,r17,r8
   2a994:	3023883a 	mov	r17,r6
   2a998:	003fd806 	br	2a8fc <__adddf3+0x27c>
   2a99c:	1800541e 	bne	r3,zero,2aaf0 <__adddf3+0x470>
   2a9a0:	80800044 	addi	r2,r16,1
   2a9a4:	1081ffcc 	andi	r2,r2,2047
   2a9a8:	00c00044 	movi	r3,1
   2a9ac:	1880a00e 	bge	r3,r2,2ac30 <__adddf3+0x5b0>
   2a9b0:	8989c83a 	sub	r4,r17,r6
   2a9b4:	8905803a 	cmpltu	r2,r17,r4
   2a9b8:	4267c83a 	sub	r19,r8,r9
   2a9bc:	98a7c83a 	sub	r19,r19,r2
   2a9c0:	9880202c 	andhi	r2,r19,128
   2a9c4:	10006326 	beq	r2,zero,2ab54 <__adddf3+0x4d4>
   2a9c8:	3463c83a 	sub	r17,r6,r17
   2a9cc:	4a07c83a 	sub	r3,r9,r8
   2a9d0:	344d803a 	cmpltu	r6,r6,r17
   2a9d4:	19a7c83a 	sub	r19,r3,r6
   2a9d8:	3825883a 	mov	r18,r7
   2a9dc:	983f8a1e 	bne	r19,zero,2a808 <__adddf3+0x188>
   2a9e0:	8809883a 	mov	r4,r17
   2a9e4:	002cc840 	call	2cc84 <__clzsi2>
   2a9e8:	10800804 	addi	r2,r2,32
   2a9ec:	10fffe04 	addi	r3,r2,-8
   2a9f0:	010007c4 	movi	r4,31
   2a9f4:	20ff890e 	bge	r4,r3,2a81c <__adddf3+0x19c>
   2a9f8:	10bff604 	addi	r2,r2,-40
   2a9fc:	8884983a 	sll	r2,r17,r2
   2aa00:	0023883a 	mov	r17,zero
   2aa04:	1c3f8c0e 	bge	r3,r16,2a838 <__adddf3+0x1b8>
   2aa08:	023fe034 	movhi	r8,65408
   2aa0c:	423fffc4 	addi	r8,r8,-1
   2aa10:	80e1c83a 	sub	r16,r16,r3
   2aa14:	1210703a 	and	r8,r2,r8
   2aa18:	003f3806 	br	2a6fc <__adddf3+0x7c>
   2aa1c:	9007883a 	mov	r3,r18
   2aa20:	0011883a 	mov	r8,zero
   2aa24:	0005883a 	mov	r2,zero
   2aa28:	003f4c06 	br	2a75c <__adddf3+0xdc>
   2aa2c:	498cb03a 	or	r6,r9,r6
   2aa30:	300cc03a 	cmpne	r6,r6,zero
   2aa34:	0007883a 	mov	r3,zero
   2aa38:	003f6806 	br	2a7dc <__adddf3+0x15c>
   2aa3c:	20009c1e 	bne	r4,zero,2acb0 <__adddf3+0x630>
   2aa40:	80800044 	addi	r2,r16,1
   2aa44:	1141ffcc 	andi	r5,r2,2047
   2aa48:	01000044 	movi	r4,1
   2aa4c:	2140670e 	bge	r4,r5,2abec <__adddf3+0x56c>
   2aa50:	0101ffc4 	movi	r4,2047
   2aa54:	11007f26 	beq	r2,r4,2ac54 <__adddf3+0x5d4>
   2aa58:	898d883a 	add	r6,r17,r6
   2aa5c:	4247883a 	add	r3,r8,r9
   2aa60:	3451803a 	cmpltu	r8,r6,r17
   2aa64:	40d1883a 	add	r8,r8,r3
   2aa68:	402297fa 	slli	r17,r8,31
   2aa6c:	300cd07a 	srli	r6,r6,1
   2aa70:	4010d07a 	srli	r8,r8,1
   2aa74:	1021883a 	mov	r16,r2
   2aa78:	89a2b03a 	or	r17,r17,r6
   2aa7c:	003f1f06 	br	2a6fc <__adddf3+0x7c>
   2aa80:	0081ffc4 	movi	r2,2047
   2aa84:	80bf481e 	bne	r16,r2,2a7a8 <__adddf3+0x128>
   2aa88:	003f1c06 	br	2a6fc <__adddf3+0x7c>
   2aa8c:	843ff844 	addi	r16,r16,-31
   2aa90:	01000804 	movi	r4,32
   2aa94:	1406d83a 	srl	r3,r2,r16
   2aa98:	41005026 	beq	r8,r4,2abdc <__adddf3+0x55c>
   2aa9c:	01001004 	movi	r4,64
   2aaa0:	2211c83a 	sub	r8,r4,r8
   2aaa4:	1204983a 	sll	r2,r2,r8
   2aaa8:	88a2b03a 	or	r17,r17,r2
   2aaac:	8822c03a 	cmpne	r17,r17,zero
   2aab0:	1c62b03a 	or	r17,r3,r17
   2aab4:	0011883a 	mov	r8,zero
   2aab8:	0021883a 	mov	r16,zero
   2aabc:	003f7106 	br	2a884 <__adddf3+0x204>
   2aac0:	193ff804 	addi	r4,r3,-32
   2aac4:	00800804 	movi	r2,32
   2aac8:	4908d83a 	srl	r4,r9,r4
   2aacc:	18804526 	beq	r3,r2,2abe4 <__adddf3+0x564>
   2aad0:	00801004 	movi	r2,64
   2aad4:	10c5c83a 	sub	r2,r2,r3
   2aad8:	4886983a 	sll	r3,r9,r2
   2aadc:	198cb03a 	or	r6,r3,r6
   2aae0:	300cc03a 	cmpne	r6,r6,zero
   2aae4:	218cb03a 	or	r6,r4,r6
   2aae8:	0007883a 	mov	r3,zero
   2aaec:	003f3b06 	br	2a7dc <__adddf3+0x15c>
   2aaf0:	80002a26 	beq	r16,zero,2ab9c <__adddf3+0x51c>
   2aaf4:	0101ffc4 	movi	r4,2047
   2aaf8:	11006826 	beq	r2,r4,2ac9c <__adddf3+0x61c>
   2aafc:	00c7c83a 	sub	r3,zero,r3
   2ab00:	42002034 	orhi	r8,r8,128
   2ab04:	01000e04 	movi	r4,56
   2ab08:	20c07c16 	blt	r4,r3,2acfc <__adddf3+0x67c>
   2ab0c:	010007c4 	movi	r4,31
   2ab10:	20c0da16 	blt	r4,r3,2ae7c <__adddf3+0x7fc>
   2ab14:	01000804 	movi	r4,32
   2ab18:	20c9c83a 	sub	r4,r4,r3
   2ab1c:	4114983a 	sll	r10,r8,r4
   2ab20:	88cad83a 	srl	r5,r17,r3
   2ab24:	8908983a 	sll	r4,r17,r4
   2ab28:	40c6d83a 	srl	r3,r8,r3
   2ab2c:	5162b03a 	or	r17,r10,r5
   2ab30:	2008c03a 	cmpne	r4,r4,zero
   2ab34:	8922b03a 	or	r17,r17,r4
   2ab38:	3463c83a 	sub	r17,r6,r17
   2ab3c:	48c7c83a 	sub	r3,r9,r3
   2ab40:	344d803a 	cmpltu	r6,r6,r17
   2ab44:	1991c83a 	sub	r8,r3,r6
   2ab48:	1021883a 	mov	r16,r2
   2ab4c:	3825883a 	mov	r18,r7
   2ab50:	003f2706 	br	2a7f0 <__adddf3+0x170>
   2ab54:	24d0b03a 	or	r8,r4,r19
   2ab58:	40001b1e 	bne	r8,zero,2abc8 <__adddf3+0x548>
   2ab5c:	0005883a 	mov	r2,zero
   2ab60:	0007883a 	mov	r3,zero
   2ab64:	0021883a 	mov	r16,zero
   2ab68:	003f4d06 	br	2a8a0 <__adddf3+0x220>
   2ab6c:	008007c4 	movi	r2,31
   2ab70:	11003c16 	blt	r2,r4,2ac64 <__adddf3+0x5e4>
   2ab74:	00800804 	movi	r2,32
   2ab78:	1105c83a 	sub	r2,r2,r4
   2ab7c:	488e983a 	sll	r7,r9,r2
   2ab80:	310ad83a 	srl	r5,r6,r4
   2ab84:	3084983a 	sll	r2,r6,r2
   2ab88:	4912d83a 	srl	r9,r9,r4
   2ab8c:	394ab03a 	or	r5,r7,r5
   2ab90:	1004c03a 	cmpne	r2,r2,zero
   2ab94:	288ab03a 	or	r5,r5,r2
   2ab98:	003f5306 	br	2a8e8 <__adddf3+0x268>
   2ab9c:	4448b03a 	or	r4,r8,r17
   2aba0:	20003e26 	beq	r4,zero,2ac9c <__adddf3+0x61c>
   2aba4:	00c6303a 	nor	r3,zero,r3
   2aba8:	18003a1e 	bne	r3,zero,2ac94 <__adddf3+0x614>
   2abac:	3463c83a 	sub	r17,r6,r17
   2abb0:	4a07c83a 	sub	r3,r9,r8
   2abb4:	344d803a 	cmpltu	r6,r6,r17
   2abb8:	1991c83a 	sub	r8,r3,r6
   2abbc:	1021883a 	mov	r16,r2
   2abc0:	3825883a 	mov	r18,r7
   2abc4:	003f0a06 	br	2a7f0 <__adddf3+0x170>
   2abc8:	2023883a 	mov	r17,r4
   2abcc:	003f0d06 	br	2a804 <__adddf3+0x184>
   2abd0:	0081ffc4 	movi	r2,2047
   2abd4:	80bf3f1e 	bne	r16,r2,2a8d4 <__adddf3+0x254>
   2abd8:	003ec806 	br	2a6fc <__adddf3+0x7c>
   2abdc:	0005883a 	mov	r2,zero
   2abe0:	003fb106 	br	2aaa8 <__adddf3+0x428>
   2abe4:	0007883a 	mov	r3,zero
   2abe8:	003fbc06 	br	2aadc <__adddf3+0x45c>
   2abec:	4444b03a 	or	r2,r8,r17
   2abf0:	8000871e 	bne	r16,zero,2ae10 <__adddf3+0x790>
   2abf4:	1000ba26 	beq	r2,zero,2aee0 <__adddf3+0x860>
   2abf8:	4984b03a 	or	r2,r9,r6
   2abfc:	103ebf26 	beq	r2,zero,2a6fc <__adddf3+0x7c>
   2ac00:	8985883a 	add	r2,r17,r6
   2ac04:	4247883a 	add	r3,r8,r9
   2ac08:	1451803a 	cmpltu	r8,r2,r17
   2ac0c:	40d1883a 	add	r8,r8,r3
   2ac10:	40c0202c 	andhi	r3,r8,128
   2ac14:	1023883a 	mov	r17,r2
   2ac18:	183f1a26 	beq	r3,zero,2a884 <__adddf3+0x204>
   2ac1c:	00bfe034 	movhi	r2,65408
   2ac20:	10bfffc4 	addi	r2,r2,-1
   2ac24:	2021883a 	mov	r16,r4
   2ac28:	4090703a 	and	r8,r8,r2
   2ac2c:	003eb306 	br	2a6fc <__adddf3+0x7c>
   2ac30:	4444b03a 	or	r2,r8,r17
   2ac34:	8000291e 	bne	r16,zero,2acdc <__adddf3+0x65c>
   2ac38:	10004b1e 	bne	r2,zero,2ad68 <__adddf3+0x6e8>
   2ac3c:	4990b03a 	or	r8,r9,r6
   2ac40:	40008b26 	beq	r8,zero,2ae70 <__adddf3+0x7f0>
   2ac44:	4811883a 	mov	r8,r9
   2ac48:	3023883a 	mov	r17,r6
   2ac4c:	3825883a 	mov	r18,r7
   2ac50:	003eaa06 	br	2a6fc <__adddf3+0x7c>
   2ac54:	1021883a 	mov	r16,r2
   2ac58:	0011883a 	mov	r8,zero
   2ac5c:	0005883a 	mov	r2,zero
   2ac60:	003f0f06 	br	2a8a0 <__adddf3+0x220>
   2ac64:	217ff804 	addi	r5,r4,-32
   2ac68:	00800804 	movi	r2,32
   2ac6c:	494ad83a 	srl	r5,r9,r5
   2ac70:	20807d26 	beq	r4,r2,2ae68 <__adddf3+0x7e8>
   2ac74:	00801004 	movi	r2,64
   2ac78:	1109c83a 	sub	r4,r2,r4
   2ac7c:	4912983a 	sll	r9,r9,r4
   2ac80:	498cb03a 	or	r6,r9,r6
   2ac84:	300cc03a 	cmpne	r6,r6,zero
   2ac88:	298ab03a 	or	r5,r5,r6
   2ac8c:	0013883a 	mov	r9,zero
   2ac90:	003f1506 	br	2a8e8 <__adddf3+0x268>
   2ac94:	0101ffc4 	movi	r4,2047
   2ac98:	113f9a1e 	bne	r2,r4,2ab04 <__adddf3+0x484>
   2ac9c:	4811883a 	mov	r8,r9
   2aca0:	3023883a 	mov	r17,r6
   2aca4:	1021883a 	mov	r16,r2
   2aca8:	3825883a 	mov	r18,r7
   2acac:	003e9306 	br	2a6fc <__adddf3+0x7c>
   2acb0:	8000161e 	bne	r16,zero,2ad0c <__adddf3+0x68c>
   2acb4:	444ab03a 	or	r5,r8,r17
   2acb8:	28005126 	beq	r5,zero,2ae00 <__adddf3+0x780>
   2acbc:	0108303a 	nor	r4,zero,r4
   2acc0:	20004d1e 	bne	r4,zero,2adf8 <__adddf3+0x778>
   2acc4:	89a3883a 	add	r17,r17,r6
   2acc8:	4253883a 	add	r9,r8,r9
   2accc:	898d803a 	cmpltu	r6,r17,r6
   2acd0:	3251883a 	add	r8,r6,r9
   2acd4:	1021883a 	mov	r16,r2
   2acd8:	003f0806 	br	2a8fc <__adddf3+0x27c>
   2acdc:	1000301e 	bne	r2,zero,2ada0 <__adddf3+0x720>
   2ace0:	4984b03a 	or	r2,r9,r6
   2ace4:	10007126 	beq	r2,zero,2aeac <__adddf3+0x82c>
   2ace8:	4811883a 	mov	r8,r9
   2acec:	3023883a 	mov	r17,r6
   2acf0:	3825883a 	mov	r18,r7
   2acf4:	0401ffc4 	movi	r16,2047
   2acf8:	003e8006 	br	2a6fc <__adddf3+0x7c>
   2acfc:	4462b03a 	or	r17,r8,r17
   2ad00:	8822c03a 	cmpne	r17,r17,zero
   2ad04:	0007883a 	mov	r3,zero
   2ad08:	003f8b06 	br	2ab38 <__adddf3+0x4b8>
   2ad0c:	0141ffc4 	movi	r5,2047
   2ad10:	11403b26 	beq	r2,r5,2ae00 <__adddf3+0x780>
   2ad14:	0109c83a 	sub	r4,zero,r4
   2ad18:	42002034 	orhi	r8,r8,128
   2ad1c:	01400e04 	movi	r5,56
   2ad20:	29006716 	blt	r5,r4,2aec0 <__adddf3+0x840>
   2ad24:	014007c4 	movi	r5,31
   2ad28:	29007016 	blt	r5,r4,2aeec <__adddf3+0x86c>
   2ad2c:	01400804 	movi	r5,32
   2ad30:	290bc83a 	sub	r5,r5,r4
   2ad34:	4154983a 	sll	r10,r8,r5
   2ad38:	890ed83a 	srl	r7,r17,r4
   2ad3c:	894a983a 	sll	r5,r17,r5
   2ad40:	4108d83a 	srl	r4,r8,r4
   2ad44:	51e2b03a 	or	r17,r10,r7
   2ad48:	280ac03a 	cmpne	r5,r5,zero
   2ad4c:	8962b03a 	or	r17,r17,r5
   2ad50:	89a3883a 	add	r17,r17,r6
   2ad54:	2253883a 	add	r9,r4,r9
   2ad58:	898d803a 	cmpltu	r6,r17,r6
   2ad5c:	3251883a 	add	r8,r6,r9
   2ad60:	1021883a 	mov	r16,r2
   2ad64:	003ee506 	br	2a8fc <__adddf3+0x27c>
   2ad68:	4984b03a 	or	r2,r9,r6
   2ad6c:	103e6326 	beq	r2,zero,2a6fc <__adddf3+0x7c>
   2ad70:	8987c83a 	sub	r3,r17,r6
   2ad74:	88c9803a 	cmpltu	r4,r17,r3
   2ad78:	4245c83a 	sub	r2,r8,r9
   2ad7c:	1105c83a 	sub	r2,r2,r4
   2ad80:	1100202c 	andhi	r4,r2,128
   2ad84:	203ebb26 	beq	r4,zero,2a874 <__adddf3+0x1f4>
   2ad88:	3463c83a 	sub	r17,r6,r17
   2ad8c:	4a07c83a 	sub	r3,r9,r8
   2ad90:	344d803a 	cmpltu	r6,r6,r17
   2ad94:	1991c83a 	sub	r8,r3,r6
   2ad98:	3825883a 	mov	r18,r7
   2ad9c:	003e5706 	br	2a6fc <__adddf3+0x7c>
   2ada0:	4984b03a 	or	r2,r9,r6
   2ada4:	10002e26 	beq	r2,zero,2ae60 <__adddf3+0x7e0>
   2ada8:	4004d0fa 	srli	r2,r8,3
   2adac:	8822d0fa 	srli	r17,r17,3
   2adb0:	4010977a 	slli	r8,r8,29
   2adb4:	10c0022c 	andhi	r3,r2,8
   2adb8:	4462b03a 	or	r17,r8,r17
   2adbc:	18000826 	beq	r3,zero,2ade0 <__adddf3+0x760>
   2adc0:	4808d0fa 	srli	r4,r9,3
   2adc4:	20c0022c 	andhi	r3,r4,8
   2adc8:	1800051e 	bne	r3,zero,2ade0 <__adddf3+0x760>
   2adcc:	300cd0fa 	srli	r6,r6,3
   2add0:	4806977a 	slli	r3,r9,29
   2add4:	2005883a 	mov	r2,r4
   2add8:	3825883a 	mov	r18,r7
   2addc:	19a2b03a 	or	r17,r3,r6
   2ade0:	8810d77a 	srli	r8,r17,29
   2ade4:	100490fa 	slli	r2,r2,3
   2ade8:	882290fa 	slli	r17,r17,3
   2adec:	0401ffc4 	movi	r16,2047
   2adf0:	4090b03a 	or	r8,r8,r2
   2adf4:	003e4106 	br	2a6fc <__adddf3+0x7c>
   2adf8:	0141ffc4 	movi	r5,2047
   2adfc:	117fc71e 	bne	r2,r5,2ad1c <__adddf3+0x69c>
   2ae00:	4811883a 	mov	r8,r9
   2ae04:	3023883a 	mov	r17,r6
   2ae08:	1021883a 	mov	r16,r2
   2ae0c:	003e3b06 	br	2a6fc <__adddf3+0x7c>
   2ae10:	10002f26 	beq	r2,zero,2aed0 <__adddf3+0x850>
   2ae14:	4984b03a 	or	r2,r9,r6
   2ae18:	10001126 	beq	r2,zero,2ae60 <__adddf3+0x7e0>
   2ae1c:	4004d0fa 	srli	r2,r8,3
   2ae20:	8822d0fa 	srli	r17,r17,3
   2ae24:	4010977a 	slli	r8,r8,29
   2ae28:	10c0022c 	andhi	r3,r2,8
   2ae2c:	4462b03a 	or	r17,r8,r17
   2ae30:	183feb26 	beq	r3,zero,2ade0 <__adddf3+0x760>
   2ae34:	4808d0fa 	srli	r4,r9,3
   2ae38:	20c0022c 	andhi	r3,r4,8
   2ae3c:	183fe81e 	bne	r3,zero,2ade0 <__adddf3+0x760>
   2ae40:	300cd0fa 	srli	r6,r6,3
   2ae44:	4806977a 	slli	r3,r9,29
   2ae48:	2005883a 	mov	r2,r4
   2ae4c:	19a2b03a 	or	r17,r3,r6
   2ae50:	003fe306 	br	2ade0 <__adddf3+0x760>
   2ae54:	0011883a 	mov	r8,zero
   2ae58:	0005883a 	mov	r2,zero
   2ae5c:	003e3f06 	br	2a75c <__adddf3+0xdc>
   2ae60:	0401ffc4 	movi	r16,2047
   2ae64:	003e2506 	br	2a6fc <__adddf3+0x7c>
   2ae68:	0013883a 	mov	r9,zero
   2ae6c:	003f8406 	br	2ac80 <__adddf3+0x600>
   2ae70:	0005883a 	mov	r2,zero
   2ae74:	0007883a 	mov	r3,zero
   2ae78:	003e8906 	br	2a8a0 <__adddf3+0x220>
   2ae7c:	197ff804 	addi	r5,r3,-32
   2ae80:	01000804 	movi	r4,32
   2ae84:	414ad83a 	srl	r5,r8,r5
   2ae88:	19002426 	beq	r3,r4,2af1c <__adddf3+0x89c>
   2ae8c:	01001004 	movi	r4,64
   2ae90:	20c7c83a 	sub	r3,r4,r3
   2ae94:	40c6983a 	sll	r3,r8,r3
   2ae98:	1c46b03a 	or	r3,r3,r17
   2ae9c:	1806c03a 	cmpne	r3,r3,zero
   2aea0:	28e2b03a 	or	r17,r5,r3
   2aea4:	0007883a 	mov	r3,zero
   2aea8:	003f2306 	br	2ab38 <__adddf3+0x4b8>
   2aeac:	0007883a 	mov	r3,zero
   2aeb0:	5811883a 	mov	r8,r11
   2aeb4:	00bfffc4 	movi	r2,-1
   2aeb8:	0401ffc4 	movi	r16,2047
   2aebc:	003e7806 	br	2a8a0 <__adddf3+0x220>
   2aec0:	4462b03a 	or	r17,r8,r17
   2aec4:	8822c03a 	cmpne	r17,r17,zero
   2aec8:	0009883a 	mov	r4,zero
   2aecc:	003fa006 	br	2ad50 <__adddf3+0x6d0>
   2aed0:	4811883a 	mov	r8,r9
   2aed4:	3023883a 	mov	r17,r6
   2aed8:	0401ffc4 	movi	r16,2047
   2aedc:	003e0706 	br	2a6fc <__adddf3+0x7c>
   2aee0:	4811883a 	mov	r8,r9
   2aee4:	3023883a 	mov	r17,r6
   2aee8:	003e0406 	br	2a6fc <__adddf3+0x7c>
   2aeec:	21fff804 	addi	r7,r4,-32
   2aef0:	01400804 	movi	r5,32
   2aef4:	41ced83a 	srl	r7,r8,r7
   2aef8:	21400a26 	beq	r4,r5,2af24 <__adddf3+0x8a4>
   2aefc:	01401004 	movi	r5,64
   2af00:	2909c83a 	sub	r4,r5,r4
   2af04:	4108983a 	sll	r4,r8,r4
   2af08:	2448b03a 	or	r4,r4,r17
   2af0c:	2008c03a 	cmpne	r4,r4,zero
   2af10:	3922b03a 	or	r17,r7,r4
   2af14:	0009883a 	mov	r4,zero
   2af18:	003f8d06 	br	2ad50 <__adddf3+0x6d0>
   2af1c:	0007883a 	mov	r3,zero
   2af20:	003fdd06 	br	2ae98 <__adddf3+0x818>
   2af24:	0009883a 	mov	r4,zero
   2af28:	003ff706 	br	2af08 <__adddf3+0x888>

0002af2c <__divdf3>:
   2af2c:	defff204 	addi	sp,sp,-56
   2af30:	dd400915 	stw	r21,36(sp)
   2af34:	282ad53a 	srli	r21,r5,20
   2af38:	dd000815 	stw	r20,32(sp)
   2af3c:	2828d7fa 	srli	r20,r5,31
   2af40:	dc000415 	stw	r16,16(sp)
   2af44:	04000434 	movhi	r16,16
   2af48:	df000c15 	stw	fp,48(sp)
   2af4c:	843fffc4 	addi	r16,r16,-1
   2af50:	dfc00d15 	stw	ra,52(sp)
   2af54:	ddc00b15 	stw	r23,44(sp)
   2af58:	dd800a15 	stw	r22,40(sp)
   2af5c:	dcc00715 	stw	r19,28(sp)
   2af60:	dc800615 	stw	r18,24(sp)
   2af64:	dc400515 	stw	r17,20(sp)
   2af68:	ad41ffcc 	andi	r21,r21,2047
   2af6c:	2c20703a 	and	r16,r5,r16
   2af70:	a7003fcc 	andi	fp,r20,255
   2af74:	a8006126 	beq	r21,zero,2b0fc <__divdf3+0x1d0>
   2af78:	0081ffc4 	movi	r2,2047
   2af7c:	2025883a 	mov	r18,r4
   2af80:	a8803726 	beq	r21,r2,2b060 <__divdf3+0x134>
   2af84:	80800434 	orhi	r2,r16,16
   2af88:	100490fa 	slli	r2,r2,3
   2af8c:	2020d77a 	srli	r16,r4,29
   2af90:	202490fa 	slli	r18,r4,3
   2af94:	ad7f0044 	addi	r21,r21,-1023
   2af98:	80a0b03a 	or	r16,r16,r2
   2af9c:	0027883a 	mov	r19,zero
   2afa0:	0013883a 	mov	r9,zero
   2afa4:	3804d53a 	srli	r2,r7,20
   2afa8:	382cd7fa 	srli	r22,r7,31
   2afac:	04400434 	movhi	r17,16
   2afb0:	8c7fffc4 	addi	r17,r17,-1
   2afb4:	1081ffcc 	andi	r2,r2,2047
   2afb8:	3011883a 	mov	r8,r6
   2afbc:	3c62703a 	and	r17,r7,r17
   2afc0:	b5c03fcc 	andi	r23,r22,255
   2afc4:	10006c26 	beq	r2,zero,2b178 <__divdf3+0x24c>
   2afc8:	00c1ffc4 	movi	r3,2047
   2afcc:	10c06426 	beq	r2,r3,2b160 <__divdf3+0x234>
   2afd0:	88c00434 	orhi	r3,r17,16
   2afd4:	180690fa 	slli	r3,r3,3
   2afd8:	3022d77a 	srli	r17,r6,29
   2afdc:	301090fa 	slli	r8,r6,3
   2afe0:	10bf0044 	addi	r2,r2,-1023
   2afe4:	88e2b03a 	or	r17,r17,r3
   2afe8:	000f883a 	mov	r7,zero
   2afec:	a58cf03a 	xor	r6,r20,r22
   2aff0:	3cc8b03a 	or	r4,r7,r19
   2aff4:	a8abc83a 	sub	r21,r21,r2
   2aff8:	008003c4 	movi	r2,15
   2affc:	3007883a 	mov	r3,r6
   2b000:	34c03fcc 	andi	r19,r6,255
   2b004:	11009036 	bltu	r2,r4,2b248 <__divdf3+0x31c>
   2b008:	200890ba 	slli	r4,r4,2
   2b00c:	008000f4 	movhi	r2,3
   2b010:	10ac0804 	addi	r2,r2,-20448
   2b014:	2089883a 	add	r4,r4,r2
   2b018:	20800017 	ldw	r2,0(r4)
   2b01c:	1000683a 	jmp	r2
   2b020:	0002b248 	cmpgei	zero,zero,2761
   2b024:	0002b098 	cmpnei	zero,zero,2754
   2b028:	0002b238 	rdprs	zero,zero,2760
   2b02c:	0002b08c 	andi	zero,zero,2754
   2b030:	0002b238 	rdprs	zero,zero,2760
   2b034:	0002b20c 	andi	zero,zero,2760
   2b038:	0002b238 	rdprs	zero,zero,2760
   2b03c:	0002b08c 	andi	zero,zero,2754
   2b040:	0002b098 	cmpnei	zero,zero,2754
   2b044:	0002b098 	cmpnei	zero,zero,2754
   2b048:	0002b20c 	andi	zero,zero,2760
   2b04c:	0002b08c 	andi	zero,zero,2754
   2b050:	0002b07c 	xorhi	zero,zero,2753
   2b054:	0002b07c 	xorhi	zero,zero,2753
   2b058:	0002b07c 	xorhi	zero,zero,2753
   2b05c:	0002b52c 	andhi	zero,zero,2772
   2b060:	2404b03a 	or	r2,r4,r16
   2b064:	1000661e 	bne	r2,zero,2b200 <__divdf3+0x2d4>
   2b068:	04c00204 	movi	r19,8
   2b06c:	0021883a 	mov	r16,zero
   2b070:	0025883a 	mov	r18,zero
   2b074:	02400084 	movi	r9,2
   2b078:	003fca06 	br	2afa4 <__divdf3+0x78>
   2b07c:	8023883a 	mov	r17,r16
   2b080:	9011883a 	mov	r8,r18
   2b084:	e02f883a 	mov	r23,fp
   2b088:	480f883a 	mov	r7,r9
   2b08c:	00800084 	movi	r2,2
   2b090:	3881311e 	bne	r7,r2,2b558 <__divdf3+0x62c>
   2b094:	b827883a 	mov	r19,r23
   2b098:	98c0004c 	andi	r3,r19,1
   2b09c:	0081ffc4 	movi	r2,2047
   2b0a0:	000b883a 	mov	r5,zero
   2b0a4:	0025883a 	mov	r18,zero
   2b0a8:	1004953a 	slli	r2,r2,20
   2b0ac:	18c03fcc 	andi	r3,r3,255
   2b0b0:	04400434 	movhi	r17,16
   2b0b4:	8c7fffc4 	addi	r17,r17,-1
   2b0b8:	180697fa 	slli	r3,r3,31
   2b0bc:	2c4a703a 	and	r5,r5,r17
   2b0c0:	288ab03a 	or	r5,r5,r2
   2b0c4:	28c6b03a 	or	r3,r5,r3
   2b0c8:	9005883a 	mov	r2,r18
   2b0cc:	dfc00d17 	ldw	ra,52(sp)
   2b0d0:	df000c17 	ldw	fp,48(sp)
   2b0d4:	ddc00b17 	ldw	r23,44(sp)
   2b0d8:	dd800a17 	ldw	r22,40(sp)
   2b0dc:	dd400917 	ldw	r21,36(sp)
   2b0e0:	dd000817 	ldw	r20,32(sp)
   2b0e4:	dcc00717 	ldw	r19,28(sp)
   2b0e8:	dc800617 	ldw	r18,24(sp)
   2b0ec:	dc400517 	ldw	r17,20(sp)
   2b0f0:	dc000417 	ldw	r16,16(sp)
   2b0f4:	dec00e04 	addi	sp,sp,56
   2b0f8:	f800283a 	ret
   2b0fc:	2404b03a 	or	r2,r4,r16
   2b100:	2027883a 	mov	r19,r4
   2b104:	10003926 	beq	r2,zero,2b1ec <__divdf3+0x2c0>
   2b108:	80012e26 	beq	r16,zero,2b5c4 <__divdf3+0x698>
   2b10c:	8009883a 	mov	r4,r16
   2b110:	d9800315 	stw	r6,12(sp)
   2b114:	d9c00215 	stw	r7,8(sp)
   2b118:	002cc840 	call	2cc84 <__clzsi2>
   2b11c:	d9800317 	ldw	r6,12(sp)
   2b120:	d9c00217 	ldw	r7,8(sp)
   2b124:	113ffd44 	addi	r4,r2,-11
   2b128:	00c00704 	movi	r3,28
   2b12c:	19012116 	blt	r3,r4,2b5b4 <__divdf3+0x688>
   2b130:	00c00744 	movi	r3,29
   2b134:	147ffe04 	addi	r17,r2,-8
   2b138:	1907c83a 	sub	r3,r3,r4
   2b13c:	8460983a 	sll	r16,r16,r17
   2b140:	98c6d83a 	srl	r3,r19,r3
   2b144:	9c64983a 	sll	r18,r19,r17
   2b148:	1c20b03a 	or	r16,r3,r16
   2b14c:	1080fcc4 	addi	r2,r2,1011
   2b150:	00abc83a 	sub	r21,zero,r2
   2b154:	0027883a 	mov	r19,zero
   2b158:	0013883a 	mov	r9,zero
   2b15c:	003f9106 	br	2afa4 <__divdf3+0x78>
   2b160:	3446b03a 	or	r3,r6,r17
   2b164:	18001f1e 	bne	r3,zero,2b1e4 <__divdf3+0x2b8>
   2b168:	0023883a 	mov	r17,zero
   2b16c:	0011883a 	mov	r8,zero
   2b170:	01c00084 	movi	r7,2
   2b174:	003f9d06 	br	2afec <__divdf3+0xc0>
   2b178:	3446b03a 	or	r3,r6,r17
   2b17c:	18001526 	beq	r3,zero,2b1d4 <__divdf3+0x2a8>
   2b180:	88011b26 	beq	r17,zero,2b5f0 <__divdf3+0x6c4>
   2b184:	8809883a 	mov	r4,r17
   2b188:	d9800315 	stw	r6,12(sp)
   2b18c:	da400115 	stw	r9,4(sp)
   2b190:	002cc840 	call	2cc84 <__clzsi2>
   2b194:	d9800317 	ldw	r6,12(sp)
   2b198:	da400117 	ldw	r9,4(sp)
   2b19c:	113ffd44 	addi	r4,r2,-11
   2b1a0:	00c00704 	movi	r3,28
   2b1a4:	19010e16 	blt	r3,r4,2b5e0 <__divdf3+0x6b4>
   2b1a8:	00c00744 	movi	r3,29
   2b1ac:	123ffe04 	addi	r8,r2,-8
   2b1b0:	1907c83a 	sub	r3,r3,r4
   2b1b4:	8a22983a 	sll	r17,r17,r8
   2b1b8:	30c6d83a 	srl	r3,r6,r3
   2b1bc:	3210983a 	sll	r8,r6,r8
   2b1c0:	1c62b03a 	or	r17,r3,r17
   2b1c4:	1080fcc4 	addi	r2,r2,1011
   2b1c8:	0085c83a 	sub	r2,zero,r2
   2b1cc:	000f883a 	mov	r7,zero
   2b1d0:	003f8606 	br	2afec <__divdf3+0xc0>
   2b1d4:	0023883a 	mov	r17,zero
   2b1d8:	0011883a 	mov	r8,zero
   2b1dc:	01c00044 	movi	r7,1
   2b1e0:	003f8206 	br	2afec <__divdf3+0xc0>
   2b1e4:	01c000c4 	movi	r7,3
   2b1e8:	003f8006 	br	2afec <__divdf3+0xc0>
   2b1ec:	04c00104 	movi	r19,4
   2b1f0:	0021883a 	mov	r16,zero
   2b1f4:	0025883a 	mov	r18,zero
   2b1f8:	02400044 	movi	r9,1
   2b1fc:	003f6906 	br	2afa4 <__divdf3+0x78>
   2b200:	04c00304 	movi	r19,12
   2b204:	024000c4 	movi	r9,3
   2b208:	003f6606 	br	2afa4 <__divdf3+0x78>
   2b20c:	01400434 	movhi	r5,16
   2b210:	0007883a 	mov	r3,zero
   2b214:	297fffc4 	addi	r5,r5,-1
   2b218:	04bfffc4 	movi	r18,-1
   2b21c:	0081ffc4 	movi	r2,2047
   2b220:	003fa106 	br	2b0a8 <__divdf3+0x17c>
   2b224:	00c00044 	movi	r3,1
   2b228:	1887c83a 	sub	r3,r3,r2
   2b22c:	01000e04 	movi	r4,56
   2b230:	20c1210e 	bge	r4,r3,2b6b8 <__divdf3+0x78c>
   2b234:	98c0004c 	andi	r3,r19,1
   2b238:	0005883a 	mov	r2,zero
   2b23c:	000b883a 	mov	r5,zero
   2b240:	0025883a 	mov	r18,zero
   2b244:	003f9806 	br	2b0a8 <__divdf3+0x17c>
   2b248:	8c00fd36 	bltu	r17,r16,2b640 <__divdf3+0x714>
   2b24c:	8440fb26 	beq	r16,r17,2b63c <__divdf3+0x710>
   2b250:	8007883a 	mov	r3,r16
   2b254:	ad7fffc4 	addi	r21,r21,-1
   2b258:	0021883a 	mov	r16,zero
   2b25c:	4004d63a 	srli	r2,r8,24
   2b260:	8822923a 	slli	r17,r17,8
   2b264:	1809883a 	mov	r4,r3
   2b268:	402c923a 	slli	r22,r8,8
   2b26c:	88b8b03a 	or	fp,r17,r2
   2b270:	e028d43a 	srli	r20,fp,16
   2b274:	d8c00015 	stw	r3,0(sp)
   2b278:	e5ffffcc 	andi	r23,fp,65535
   2b27c:	a00b883a 	mov	r5,r20
   2b280:	002a5c40 	call	2a5c4 <__udivsi3>
   2b284:	d8c00017 	ldw	r3,0(sp)
   2b288:	a00b883a 	mov	r5,r20
   2b28c:	d8800315 	stw	r2,12(sp)
   2b290:	1809883a 	mov	r4,r3
   2b294:	002a6280 	call	2a628 <__umodsi3>
   2b298:	d9800317 	ldw	r6,12(sp)
   2b29c:	1006943a 	slli	r3,r2,16
   2b2a0:	9004d43a 	srli	r2,r18,16
   2b2a4:	b9a3383a 	mul	r17,r23,r6
   2b2a8:	10c4b03a 	or	r2,r2,r3
   2b2ac:	1440062e 	bgeu	r2,r17,2b2c8 <__divdf3+0x39c>
   2b2b0:	1705883a 	add	r2,r2,fp
   2b2b4:	30ffffc4 	addi	r3,r6,-1
   2b2b8:	1700ee36 	bltu	r2,fp,2b674 <__divdf3+0x748>
   2b2bc:	1440ed2e 	bgeu	r2,r17,2b674 <__divdf3+0x748>
   2b2c0:	31bfff84 	addi	r6,r6,-2
   2b2c4:	1705883a 	add	r2,r2,fp
   2b2c8:	1463c83a 	sub	r17,r2,r17
   2b2cc:	a00b883a 	mov	r5,r20
   2b2d0:	8809883a 	mov	r4,r17
   2b2d4:	d9800315 	stw	r6,12(sp)
   2b2d8:	002a5c40 	call	2a5c4 <__udivsi3>
   2b2dc:	a00b883a 	mov	r5,r20
   2b2e0:	8809883a 	mov	r4,r17
   2b2e4:	d8800215 	stw	r2,8(sp)
   2b2e8:	002a6280 	call	2a628 <__umodsi3>
   2b2ec:	d9c00217 	ldw	r7,8(sp)
   2b2f0:	1004943a 	slli	r2,r2,16
   2b2f4:	94bfffcc 	andi	r18,r18,65535
   2b2f8:	b9d1383a 	mul	r8,r23,r7
   2b2fc:	90a4b03a 	or	r18,r18,r2
   2b300:	d9800317 	ldw	r6,12(sp)
   2b304:	9200062e 	bgeu	r18,r8,2b320 <__divdf3+0x3f4>
   2b308:	9725883a 	add	r18,r18,fp
   2b30c:	38bfffc4 	addi	r2,r7,-1
   2b310:	9700d636 	bltu	r18,fp,2b66c <__divdf3+0x740>
   2b314:	9200d52e 	bgeu	r18,r8,2b66c <__divdf3+0x740>
   2b318:	39ffff84 	addi	r7,r7,-2
   2b31c:	9725883a 	add	r18,r18,fp
   2b320:	3004943a 	slli	r2,r6,16
   2b324:	b012d43a 	srli	r9,r22,16
   2b328:	b1bfffcc 	andi	r6,r22,65535
   2b32c:	11e2b03a 	or	r17,r2,r7
   2b330:	8806d43a 	srli	r3,r17,16
   2b334:	893fffcc 	andi	r4,r17,65535
   2b338:	218b383a 	mul	r5,r4,r6
   2b33c:	30c5383a 	mul	r2,r6,r3
   2b340:	2249383a 	mul	r4,r4,r9
   2b344:	280ed43a 	srli	r7,r5,16
   2b348:	9225c83a 	sub	r18,r18,r8
   2b34c:	2089883a 	add	r4,r4,r2
   2b350:	3909883a 	add	r4,r7,r4
   2b354:	1a47383a 	mul	r3,r3,r9
   2b358:	2080022e 	bgeu	r4,r2,2b364 <__divdf3+0x438>
   2b35c:	00800074 	movhi	r2,1
   2b360:	1887883a 	add	r3,r3,r2
   2b364:	2004d43a 	srli	r2,r4,16
   2b368:	2008943a 	slli	r4,r4,16
   2b36c:	297fffcc 	andi	r5,r5,65535
   2b370:	10c7883a 	add	r3,r2,r3
   2b374:	2149883a 	add	r4,r4,r5
   2b378:	90c0a536 	bltu	r18,r3,2b610 <__divdf3+0x6e4>
   2b37c:	90c0bf26 	beq	r18,r3,2b67c <__divdf3+0x750>
   2b380:	90c7c83a 	sub	r3,r18,r3
   2b384:	810fc83a 	sub	r7,r16,r4
   2b388:	81e5803a 	cmpltu	r18,r16,r7
   2b38c:	1ca5c83a 	sub	r18,r3,r18
   2b390:	e480c126 	beq	fp,r18,2b698 <__divdf3+0x76c>
   2b394:	a00b883a 	mov	r5,r20
   2b398:	9009883a 	mov	r4,r18
   2b39c:	d9800315 	stw	r6,12(sp)
   2b3a0:	d9c00215 	stw	r7,8(sp)
   2b3a4:	da400115 	stw	r9,4(sp)
   2b3a8:	002a5c40 	call	2a5c4 <__udivsi3>
   2b3ac:	a00b883a 	mov	r5,r20
   2b3b0:	9009883a 	mov	r4,r18
   2b3b4:	d8800015 	stw	r2,0(sp)
   2b3b8:	002a6280 	call	2a628 <__umodsi3>
   2b3bc:	d9c00217 	ldw	r7,8(sp)
   2b3c0:	da000017 	ldw	r8,0(sp)
   2b3c4:	1006943a 	slli	r3,r2,16
   2b3c8:	3804d43a 	srli	r2,r7,16
   2b3cc:	ba21383a 	mul	r16,r23,r8
   2b3d0:	d9800317 	ldw	r6,12(sp)
   2b3d4:	10c4b03a 	or	r2,r2,r3
   2b3d8:	da400117 	ldw	r9,4(sp)
   2b3dc:	1400062e 	bgeu	r2,r16,2b3f8 <__divdf3+0x4cc>
   2b3e0:	1705883a 	add	r2,r2,fp
   2b3e4:	40ffffc4 	addi	r3,r8,-1
   2b3e8:	1700ad36 	bltu	r2,fp,2b6a0 <__divdf3+0x774>
   2b3ec:	1400ac2e 	bgeu	r2,r16,2b6a0 <__divdf3+0x774>
   2b3f0:	423fff84 	addi	r8,r8,-2
   2b3f4:	1705883a 	add	r2,r2,fp
   2b3f8:	1421c83a 	sub	r16,r2,r16
   2b3fc:	a00b883a 	mov	r5,r20
   2b400:	8009883a 	mov	r4,r16
   2b404:	d9800315 	stw	r6,12(sp)
   2b408:	d9c00215 	stw	r7,8(sp)
   2b40c:	da000015 	stw	r8,0(sp)
   2b410:	da400115 	stw	r9,4(sp)
   2b414:	002a5c40 	call	2a5c4 <__udivsi3>
   2b418:	8009883a 	mov	r4,r16
   2b41c:	a00b883a 	mov	r5,r20
   2b420:	1025883a 	mov	r18,r2
   2b424:	002a6280 	call	2a628 <__umodsi3>
   2b428:	d9c00217 	ldw	r7,8(sp)
   2b42c:	1004943a 	slli	r2,r2,16
   2b430:	bcaf383a 	mul	r23,r23,r18
   2b434:	393fffcc 	andi	r4,r7,65535
   2b438:	2088b03a 	or	r4,r4,r2
   2b43c:	d9800317 	ldw	r6,12(sp)
   2b440:	da000017 	ldw	r8,0(sp)
   2b444:	da400117 	ldw	r9,4(sp)
   2b448:	25c0062e 	bgeu	r4,r23,2b464 <__divdf3+0x538>
   2b44c:	2709883a 	add	r4,r4,fp
   2b450:	90bfffc4 	addi	r2,r18,-1
   2b454:	27009436 	bltu	r4,fp,2b6a8 <__divdf3+0x77c>
   2b458:	25c0932e 	bgeu	r4,r23,2b6a8 <__divdf3+0x77c>
   2b45c:	94bfff84 	addi	r18,r18,-2
   2b460:	2709883a 	add	r4,r4,fp
   2b464:	4004943a 	slli	r2,r8,16
   2b468:	25efc83a 	sub	r23,r4,r23
   2b46c:	1490b03a 	or	r8,r2,r18
   2b470:	4008d43a 	srli	r4,r8,16
   2b474:	40ffffcc 	andi	r3,r8,65535
   2b478:	30c5383a 	mul	r2,r6,r3
   2b47c:	1a47383a 	mul	r3,r3,r9
   2b480:	310d383a 	mul	r6,r6,r4
   2b484:	100ad43a 	srli	r5,r2,16
   2b488:	4913383a 	mul	r9,r9,r4
   2b48c:	1987883a 	add	r3,r3,r6
   2b490:	28c7883a 	add	r3,r5,r3
   2b494:	1980022e 	bgeu	r3,r6,2b4a0 <__divdf3+0x574>
   2b498:	01000074 	movhi	r4,1
   2b49c:	4913883a 	add	r9,r9,r4
   2b4a0:	1808d43a 	srli	r4,r3,16
   2b4a4:	1806943a 	slli	r3,r3,16
   2b4a8:	10bfffcc 	andi	r2,r2,65535
   2b4ac:	2253883a 	add	r9,r4,r9
   2b4b0:	1887883a 	add	r3,r3,r2
   2b4b4:	ba403836 	bltu	r23,r9,2b598 <__divdf3+0x66c>
   2b4b8:	ba403626 	beq	r23,r9,2b594 <__divdf3+0x668>
   2b4bc:	42000054 	ori	r8,r8,1
   2b4c0:	a880ffc4 	addi	r2,r21,1023
   2b4c4:	00bf570e 	bge	zero,r2,2b224 <__divdf3+0x2f8>
   2b4c8:	40c001cc 	andi	r3,r8,7
   2b4cc:	18000726 	beq	r3,zero,2b4ec <__divdf3+0x5c0>
   2b4d0:	40c003cc 	andi	r3,r8,15
   2b4d4:	01000104 	movi	r4,4
   2b4d8:	19000426 	beq	r3,r4,2b4ec <__divdf3+0x5c0>
   2b4dc:	4107883a 	add	r3,r8,r4
   2b4e0:	1a11803a 	cmpltu	r8,r3,r8
   2b4e4:	8a23883a 	add	r17,r17,r8
   2b4e8:	1811883a 	mov	r8,r3
   2b4ec:	88c0402c 	andhi	r3,r17,256
   2b4f0:	18000426 	beq	r3,zero,2b504 <__divdf3+0x5d8>
   2b4f4:	00ffc034 	movhi	r3,65280
   2b4f8:	18ffffc4 	addi	r3,r3,-1
   2b4fc:	a8810004 	addi	r2,r21,1024
   2b500:	88e2703a 	and	r17,r17,r3
   2b504:	00c1ff84 	movi	r3,2046
   2b508:	18bee316 	blt	r3,r2,2b098 <__divdf3+0x16c>
   2b50c:	8824977a 	slli	r18,r17,29
   2b510:	4010d0fa 	srli	r8,r8,3
   2b514:	8822927a 	slli	r17,r17,9
   2b518:	1081ffcc 	andi	r2,r2,2047
   2b51c:	9224b03a 	or	r18,r18,r8
   2b520:	880ad33a 	srli	r5,r17,12
   2b524:	98c0004c 	andi	r3,r19,1
   2b528:	003edf06 	br	2b0a8 <__divdf3+0x17c>
   2b52c:	8080022c 	andhi	r2,r16,8
   2b530:	10001226 	beq	r2,zero,2b57c <__divdf3+0x650>
   2b534:	8880022c 	andhi	r2,r17,8
   2b538:	1000101e 	bne	r2,zero,2b57c <__divdf3+0x650>
   2b53c:	00800434 	movhi	r2,16
   2b540:	89400234 	orhi	r5,r17,8
   2b544:	10bfffc4 	addi	r2,r2,-1
   2b548:	b007883a 	mov	r3,r22
   2b54c:	288a703a 	and	r5,r5,r2
   2b550:	4025883a 	mov	r18,r8
   2b554:	003f3106 	br	2b21c <__divdf3+0x2f0>
   2b558:	008000c4 	movi	r2,3
   2b55c:	3880a626 	beq	r7,r2,2b7f8 <__divdf3+0x8cc>
   2b560:	00800044 	movi	r2,1
   2b564:	3880521e 	bne	r7,r2,2b6b0 <__divdf3+0x784>
   2b568:	b807883a 	mov	r3,r23
   2b56c:	0005883a 	mov	r2,zero
   2b570:	000b883a 	mov	r5,zero
   2b574:	0025883a 	mov	r18,zero
   2b578:	003ecb06 	br	2b0a8 <__divdf3+0x17c>
   2b57c:	00800434 	movhi	r2,16
   2b580:	81400234 	orhi	r5,r16,8
   2b584:	10bfffc4 	addi	r2,r2,-1
   2b588:	a007883a 	mov	r3,r20
   2b58c:	288a703a 	and	r5,r5,r2
   2b590:	003f2206 	br	2b21c <__divdf3+0x2f0>
   2b594:	183fca26 	beq	r3,zero,2b4c0 <__divdf3+0x594>
   2b598:	e5ef883a 	add	r23,fp,r23
   2b59c:	40bfffc4 	addi	r2,r8,-1
   2b5a0:	bf00392e 	bgeu	r23,fp,2b688 <__divdf3+0x75c>
   2b5a4:	1011883a 	mov	r8,r2
   2b5a8:	ba7fc41e 	bne	r23,r9,2b4bc <__divdf3+0x590>
   2b5ac:	b0ffc31e 	bne	r22,r3,2b4bc <__divdf3+0x590>
   2b5b0:	003fc306 	br	2b4c0 <__divdf3+0x594>
   2b5b4:	143ff604 	addi	r16,r2,-40
   2b5b8:	9c20983a 	sll	r16,r19,r16
   2b5bc:	0025883a 	mov	r18,zero
   2b5c0:	003ee206 	br	2b14c <__divdf3+0x220>
   2b5c4:	d9800315 	stw	r6,12(sp)
   2b5c8:	d9c00215 	stw	r7,8(sp)
   2b5cc:	002cc840 	call	2cc84 <__clzsi2>
   2b5d0:	10800804 	addi	r2,r2,32
   2b5d4:	d9c00217 	ldw	r7,8(sp)
   2b5d8:	d9800317 	ldw	r6,12(sp)
   2b5dc:	003ed106 	br	2b124 <__divdf3+0x1f8>
   2b5e0:	147ff604 	addi	r17,r2,-40
   2b5e4:	3462983a 	sll	r17,r6,r17
   2b5e8:	0011883a 	mov	r8,zero
   2b5ec:	003ef506 	br	2b1c4 <__divdf3+0x298>
   2b5f0:	3009883a 	mov	r4,r6
   2b5f4:	d9800315 	stw	r6,12(sp)
   2b5f8:	da400115 	stw	r9,4(sp)
   2b5fc:	002cc840 	call	2cc84 <__clzsi2>
   2b600:	10800804 	addi	r2,r2,32
   2b604:	da400117 	ldw	r9,4(sp)
   2b608:	d9800317 	ldw	r6,12(sp)
   2b60c:	003ee306 	br	2b19c <__divdf3+0x270>
   2b610:	85a1883a 	add	r16,r16,r22
   2b614:	8585803a 	cmpltu	r2,r16,r22
   2b618:	1705883a 	add	r2,r2,fp
   2b61c:	14a5883a 	add	r18,r2,r18
   2b620:	88bfffc4 	addi	r2,r17,-1
   2b624:	e4800c2e 	bgeu	fp,r18,2b658 <__divdf3+0x72c>
   2b628:	90c03e36 	bltu	r18,r3,2b724 <__divdf3+0x7f8>
   2b62c:	1c806926 	beq	r3,r18,2b7d4 <__divdf3+0x8a8>
   2b630:	90c7c83a 	sub	r3,r18,r3
   2b634:	1023883a 	mov	r17,r2
   2b638:	003f5206 	br	2b384 <__divdf3+0x458>
   2b63c:	923f0436 	bltu	r18,r8,2b250 <__divdf3+0x324>
   2b640:	800897fa 	slli	r4,r16,31
   2b644:	9004d07a 	srli	r2,r18,1
   2b648:	8006d07a 	srli	r3,r16,1
   2b64c:	902097fa 	slli	r16,r18,31
   2b650:	20a4b03a 	or	r18,r4,r2
   2b654:	003f0106 	br	2b25c <__divdf3+0x330>
   2b658:	e4bff51e 	bne	fp,r18,2b630 <__divdf3+0x704>
   2b65c:	85bff22e 	bgeu	r16,r22,2b628 <__divdf3+0x6fc>
   2b660:	e0c7c83a 	sub	r3,fp,r3
   2b664:	1023883a 	mov	r17,r2
   2b668:	003f4606 	br	2b384 <__divdf3+0x458>
   2b66c:	100f883a 	mov	r7,r2
   2b670:	003f2b06 	br	2b320 <__divdf3+0x3f4>
   2b674:	180d883a 	mov	r6,r3
   2b678:	003f1306 	br	2b2c8 <__divdf3+0x39c>
   2b67c:	813fe436 	bltu	r16,r4,2b610 <__divdf3+0x6e4>
   2b680:	0007883a 	mov	r3,zero
   2b684:	003f3f06 	br	2b384 <__divdf3+0x458>
   2b688:	ba402c36 	bltu	r23,r9,2b73c <__divdf3+0x810>
   2b68c:	4dc05426 	beq	r9,r23,2b7e0 <__divdf3+0x8b4>
   2b690:	1011883a 	mov	r8,r2
   2b694:	003f8906 	br	2b4bc <__divdf3+0x590>
   2b698:	023fffc4 	movi	r8,-1
   2b69c:	003f8806 	br	2b4c0 <__divdf3+0x594>
   2b6a0:	1811883a 	mov	r8,r3
   2b6a4:	003f5406 	br	2b3f8 <__divdf3+0x4cc>
   2b6a8:	1025883a 	mov	r18,r2
   2b6ac:	003f6d06 	br	2b464 <__divdf3+0x538>
   2b6b0:	b827883a 	mov	r19,r23
   2b6b4:	003f8206 	br	2b4c0 <__divdf3+0x594>
   2b6b8:	010007c4 	movi	r4,31
   2b6bc:	20c02616 	blt	r4,r3,2b758 <__divdf3+0x82c>
   2b6c0:	00800804 	movi	r2,32
   2b6c4:	10c5c83a 	sub	r2,r2,r3
   2b6c8:	888a983a 	sll	r5,r17,r2
   2b6cc:	40c8d83a 	srl	r4,r8,r3
   2b6d0:	4084983a 	sll	r2,r8,r2
   2b6d4:	88e2d83a 	srl	r17,r17,r3
   2b6d8:	2906b03a 	or	r3,r5,r4
   2b6dc:	1004c03a 	cmpne	r2,r2,zero
   2b6e0:	1886b03a 	or	r3,r3,r2
   2b6e4:	188001cc 	andi	r2,r3,7
   2b6e8:	10000726 	beq	r2,zero,2b708 <__divdf3+0x7dc>
   2b6ec:	188003cc 	andi	r2,r3,15
   2b6f0:	01000104 	movi	r4,4
   2b6f4:	11000426 	beq	r2,r4,2b708 <__divdf3+0x7dc>
   2b6f8:	1805883a 	mov	r2,r3
   2b6fc:	10c00104 	addi	r3,r2,4
   2b700:	1885803a 	cmpltu	r2,r3,r2
   2b704:	88a3883a 	add	r17,r17,r2
   2b708:	8880202c 	andhi	r2,r17,128
   2b70c:	10002726 	beq	r2,zero,2b7ac <__divdf3+0x880>
   2b710:	98c0004c 	andi	r3,r19,1
   2b714:	00800044 	movi	r2,1
   2b718:	000b883a 	mov	r5,zero
   2b71c:	0025883a 	mov	r18,zero
   2b720:	003e6106 	br	2b0a8 <__divdf3+0x17c>
   2b724:	85a1883a 	add	r16,r16,r22
   2b728:	8585803a 	cmpltu	r2,r16,r22
   2b72c:	1705883a 	add	r2,r2,fp
   2b730:	14a5883a 	add	r18,r2,r18
   2b734:	8c7fff84 	addi	r17,r17,-2
   2b738:	003f1106 	br	2b380 <__divdf3+0x454>
   2b73c:	b589883a 	add	r4,r22,r22
   2b740:	25ad803a 	cmpltu	r22,r4,r22
   2b744:	b739883a 	add	fp,r22,fp
   2b748:	40bfff84 	addi	r2,r8,-2
   2b74c:	bf2f883a 	add	r23,r23,fp
   2b750:	202d883a 	mov	r22,r4
   2b754:	003f9306 	br	2b5a4 <__divdf3+0x678>
   2b758:	013ff844 	movi	r4,-31
   2b75c:	2085c83a 	sub	r2,r4,r2
   2b760:	8888d83a 	srl	r4,r17,r2
   2b764:	00800804 	movi	r2,32
   2b768:	18802126 	beq	r3,r2,2b7f0 <__divdf3+0x8c4>
   2b76c:	00801004 	movi	r2,64
   2b770:	10c5c83a 	sub	r2,r2,r3
   2b774:	8884983a 	sll	r2,r17,r2
   2b778:	1204b03a 	or	r2,r2,r8
   2b77c:	1004c03a 	cmpne	r2,r2,zero
   2b780:	2084b03a 	or	r2,r4,r2
   2b784:	144001cc 	andi	r17,r2,7
   2b788:	88000d1e 	bne	r17,zero,2b7c0 <__divdf3+0x894>
   2b78c:	000b883a 	mov	r5,zero
   2b790:	1024d0fa 	srli	r18,r2,3
   2b794:	98c0004c 	andi	r3,r19,1
   2b798:	0005883a 	mov	r2,zero
   2b79c:	9464b03a 	or	r18,r18,r17
   2b7a0:	003e4106 	br	2b0a8 <__divdf3+0x17c>
   2b7a4:	1007883a 	mov	r3,r2
   2b7a8:	0023883a 	mov	r17,zero
   2b7ac:	880a927a 	slli	r5,r17,9
   2b7b0:	1805883a 	mov	r2,r3
   2b7b4:	8822977a 	slli	r17,r17,29
   2b7b8:	280ad33a 	srli	r5,r5,12
   2b7bc:	003ff406 	br	2b790 <__divdf3+0x864>
   2b7c0:	10c003cc 	andi	r3,r2,15
   2b7c4:	01000104 	movi	r4,4
   2b7c8:	193ff626 	beq	r3,r4,2b7a4 <__divdf3+0x878>
   2b7cc:	0023883a 	mov	r17,zero
   2b7d0:	003fca06 	br	2b6fc <__divdf3+0x7d0>
   2b7d4:	813fd336 	bltu	r16,r4,2b724 <__divdf3+0x7f8>
   2b7d8:	1023883a 	mov	r17,r2
   2b7dc:	003fa806 	br	2b680 <__divdf3+0x754>
   2b7e0:	b0ffd636 	bltu	r22,r3,2b73c <__divdf3+0x810>
   2b7e4:	1011883a 	mov	r8,r2
   2b7e8:	b0ff341e 	bne	r22,r3,2b4bc <__divdf3+0x590>
   2b7ec:	003f3406 	br	2b4c0 <__divdf3+0x594>
   2b7f0:	0005883a 	mov	r2,zero
   2b7f4:	003fe006 	br	2b778 <__divdf3+0x84c>
   2b7f8:	00800434 	movhi	r2,16
   2b7fc:	89400234 	orhi	r5,r17,8
   2b800:	10bfffc4 	addi	r2,r2,-1
   2b804:	b807883a 	mov	r3,r23
   2b808:	288a703a 	and	r5,r5,r2
   2b80c:	4025883a 	mov	r18,r8
   2b810:	003e8206 	br	2b21c <__divdf3+0x2f0>

0002b814 <__eqdf2>:
   2b814:	2804d53a 	srli	r2,r5,20
   2b818:	3806d53a 	srli	r3,r7,20
   2b81c:	02000434 	movhi	r8,16
   2b820:	423fffc4 	addi	r8,r8,-1
   2b824:	1081ffcc 	andi	r2,r2,2047
   2b828:	0281ffc4 	movi	r10,2047
   2b82c:	2a12703a 	and	r9,r5,r8
   2b830:	18c1ffcc 	andi	r3,r3,2047
   2b834:	3a10703a 	and	r8,r7,r8
   2b838:	280ad7fa 	srli	r5,r5,31
   2b83c:	380ed7fa 	srli	r7,r7,31
   2b840:	12801026 	beq	r2,r10,2b884 <__eqdf2+0x70>
   2b844:	0281ffc4 	movi	r10,2047
   2b848:	1a800a26 	beq	r3,r10,2b874 <__eqdf2+0x60>
   2b84c:	10c00226 	beq	r2,r3,2b858 <__eqdf2+0x44>
   2b850:	00800044 	movi	r2,1
   2b854:	f800283a 	ret
   2b858:	4a3ffd1e 	bne	r9,r8,2b850 <__eqdf2+0x3c>
   2b85c:	21bffc1e 	bne	r4,r6,2b850 <__eqdf2+0x3c>
   2b860:	29c00c26 	beq	r5,r7,2b894 <__eqdf2+0x80>
   2b864:	103ffa1e 	bne	r2,zero,2b850 <__eqdf2+0x3c>
   2b868:	2244b03a 	or	r2,r4,r9
   2b86c:	1004c03a 	cmpne	r2,r2,zero
   2b870:	f800283a 	ret
   2b874:	3214b03a 	or	r10,r6,r8
   2b878:	503ff426 	beq	r10,zero,2b84c <__eqdf2+0x38>
   2b87c:	00800044 	movi	r2,1
   2b880:	f800283a 	ret
   2b884:	2254b03a 	or	r10,r4,r9
   2b888:	503fee26 	beq	r10,zero,2b844 <__eqdf2+0x30>
   2b88c:	00800044 	movi	r2,1
   2b890:	f800283a 	ret
   2b894:	0005883a 	mov	r2,zero
   2b898:	f800283a 	ret

0002b89c <__gedf2>:
   2b89c:	2804d53a 	srli	r2,r5,20
   2b8a0:	3806d53a 	srli	r3,r7,20
   2b8a4:	02000434 	movhi	r8,16
   2b8a8:	423fffc4 	addi	r8,r8,-1
   2b8ac:	1081ffcc 	andi	r2,r2,2047
   2b8b0:	0241ffc4 	movi	r9,2047
   2b8b4:	2a14703a 	and	r10,r5,r8
   2b8b8:	18c1ffcc 	andi	r3,r3,2047
   2b8bc:	3a10703a 	and	r8,r7,r8
   2b8c0:	280ad7fa 	srli	r5,r5,31
   2b8c4:	380ed7fa 	srli	r7,r7,31
   2b8c8:	12401d26 	beq	r2,r9,2b940 <__gedf2+0xa4>
   2b8cc:	0241ffc4 	movi	r9,2047
   2b8d0:	1a401226 	beq	r3,r9,2b91c <__gedf2+0x80>
   2b8d4:	1000081e 	bne	r2,zero,2b8f8 <__gedf2+0x5c>
   2b8d8:	2296b03a 	or	r11,r4,r10
   2b8dc:	5813003a 	cmpeq	r9,r11,zero
   2b8e0:	1800091e 	bne	r3,zero,2b908 <__gedf2+0x6c>
   2b8e4:	3218b03a 	or	r12,r6,r8
   2b8e8:	6000071e 	bne	r12,zero,2b908 <__gedf2+0x6c>
   2b8ec:	0005883a 	mov	r2,zero
   2b8f0:	5800101e 	bne	r11,zero,2b934 <__gedf2+0x98>
   2b8f4:	f800283a 	ret
   2b8f8:	18000c1e 	bne	r3,zero,2b92c <__gedf2+0x90>
   2b8fc:	3212b03a 	or	r9,r6,r8
   2b900:	48000c26 	beq	r9,zero,2b934 <__gedf2+0x98>
   2b904:	0013883a 	mov	r9,zero
   2b908:	39c03fcc 	andi	r7,r7,255
   2b90c:	48000826 	beq	r9,zero,2b930 <__gedf2+0x94>
   2b910:	38000926 	beq	r7,zero,2b938 <__gedf2+0x9c>
   2b914:	00800044 	movi	r2,1
   2b918:	f800283a 	ret
   2b91c:	3212b03a 	or	r9,r6,r8
   2b920:	483fec26 	beq	r9,zero,2b8d4 <__gedf2+0x38>
   2b924:	00bfff84 	movi	r2,-2
   2b928:	f800283a 	ret
   2b92c:	39c03fcc 	andi	r7,r7,255
   2b930:	29c00626 	beq	r5,r7,2b94c <__gedf2+0xb0>
   2b934:	283ff726 	beq	r5,zero,2b914 <__gedf2+0x78>
   2b938:	00bfffc4 	movi	r2,-1
   2b93c:	f800283a 	ret
   2b940:	2292b03a 	or	r9,r4,r10
   2b944:	483fe126 	beq	r9,zero,2b8cc <__gedf2+0x30>
   2b948:	003ff606 	br	2b924 <__gedf2+0x88>
   2b94c:	18bff916 	blt	r3,r2,2b934 <__gedf2+0x98>
   2b950:	10c00316 	blt	r2,r3,2b960 <__gedf2+0xc4>
   2b954:	42bff736 	bltu	r8,r10,2b934 <__gedf2+0x98>
   2b958:	52000326 	beq	r10,r8,2b968 <__gedf2+0xcc>
   2b95c:	5200042e 	bgeu	r10,r8,2b970 <__gedf2+0xd4>
   2b960:	283fec1e 	bne	r5,zero,2b914 <__gedf2+0x78>
   2b964:	003ff406 	br	2b938 <__gedf2+0x9c>
   2b968:	313ff236 	bltu	r6,r4,2b934 <__gedf2+0x98>
   2b96c:	21bffc36 	bltu	r4,r6,2b960 <__gedf2+0xc4>
   2b970:	0005883a 	mov	r2,zero
   2b974:	f800283a 	ret

0002b978 <__ledf2>:
   2b978:	2804d53a 	srli	r2,r5,20
   2b97c:	3810d53a 	srli	r8,r7,20
   2b980:	00c00434 	movhi	r3,16
   2b984:	18ffffc4 	addi	r3,r3,-1
   2b988:	1081ffcc 	andi	r2,r2,2047
   2b98c:	0241ffc4 	movi	r9,2047
   2b990:	28d4703a 	and	r10,r5,r3
   2b994:	4201ffcc 	andi	r8,r8,2047
   2b998:	38c6703a 	and	r3,r7,r3
   2b99c:	280ad7fa 	srli	r5,r5,31
   2b9a0:	380ed7fa 	srli	r7,r7,31
   2b9a4:	12401f26 	beq	r2,r9,2ba24 <__ledf2+0xac>
   2b9a8:	0241ffc4 	movi	r9,2047
   2b9ac:	42401426 	beq	r8,r9,2ba00 <__ledf2+0x88>
   2b9b0:	1000091e 	bne	r2,zero,2b9d8 <__ledf2+0x60>
   2b9b4:	2296b03a 	or	r11,r4,r10
   2b9b8:	5813003a 	cmpeq	r9,r11,zero
   2b9bc:	29403fcc 	andi	r5,r5,255
   2b9c0:	40000a1e 	bne	r8,zero,2b9ec <__ledf2+0x74>
   2b9c4:	30d8b03a 	or	r12,r6,r3
   2b9c8:	6000081e 	bne	r12,zero,2b9ec <__ledf2+0x74>
   2b9cc:	0005883a 	mov	r2,zero
   2b9d0:	5800111e 	bne	r11,zero,2ba18 <__ledf2+0xa0>
   2b9d4:	f800283a 	ret
   2b9d8:	29403fcc 	andi	r5,r5,255
   2b9dc:	40000c1e 	bne	r8,zero,2ba10 <__ledf2+0x98>
   2b9e0:	30d2b03a 	or	r9,r6,r3
   2b9e4:	48000c26 	beq	r9,zero,2ba18 <__ledf2+0xa0>
   2b9e8:	0013883a 	mov	r9,zero
   2b9ec:	39c03fcc 	andi	r7,r7,255
   2b9f0:	48000826 	beq	r9,zero,2ba14 <__ledf2+0x9c>
   2b9f4:	38001126 	beq	r7,zero,2ba3c <__ledf2+0xc4>
   2b9f8:	00800044 	movi	r2,1
   2b9fc:	f800283a 	ret
   2ba00:	30d2b03a 	or	r9,r6,r3
   2ba04:	483fea26 	beq	r9,zero,2b9b0 <__ledf2+0x38>
   2ba08:	00800084 	movi	r2,2
   2ba0c:	f800283a 	ret
   2ba10:	39c03fcc 	andi	r7,r7,255
   2ba14:	39400726 	beq	r7,r5,2ba34 <__ledf2+0xbc>
   2ba18:	2800081e 	bne	r5,zero,2ba3c <__ledf2+0xc4>
   2ba1c:	00800044 	movi	r2,1
   2ba20:	f800283a 	ret
   2ba24:	2292b03a 	or	r9,r4,r10
   2ba28:	483fdf26 	beq	r9,zero,2b9a8 <__ledf2+0x30>
   2ba2c:	00800084 	movi	r2,2
   2ba30:	f800283a 	ret
   2ba34:	4080030e 	bge	r8,r2,2ba44 <__ledf2+0xcc>
   2ba38:	383fef26 	beq	r7,zero,2b9f8 <__ledf2+0x80>
   2ba3c:	00bfffc4 	movi	r2,-1
   2ba40:	f800283a 	ret
   2ba44:	123feb16 	blt	r2,r8,2b9f4 <__ledf2+0x7c>
   2ba48:	1abff336 	bltu	r3,r10,2ba18 <__ledf2+0xa0>
   2ba4c:	50c00326 	beq	r10,r3,2ba5c <__ledf2+0xe4>
   2ba50:	50c0042e 	bgeu	r10,r3,2ba64 <__ledf2+0xec>
   2ba54:	283fe81e 	bne	r5,zero,2b9f8 <__ledf2+0x80>
   2ba58:	003ff806 	br	2ba3c <__ledf2+0xc4>
   2ba5c:	313fee36 	bltu	r6,r4,2ba18 <__ledf2+0xa0>
   2ba60:	21bffc36 	bltu	r4,r6,2ba54 <__ledf2+0xdc>
   2ba64:	0005883a 	mov	r2,zero
   2ba68:	f800283a 	ret

0002ba6c <__muldf3>:
   2ba6c:	defff304 	addi	sp,sp,-52
   2ba70:	2804d53a 	srli	r2,r5,20
   2ba74:	dd800915 	stw	r22,36(sp)
   2ba78:	282cd7fa 	srli	r22,r5,31
   2ba7c:	dc000315 	stw	r16,12(sp)
   2ba80:	04000434 	movhi	r16,16
   2ba84:	dd400815 	stw	r21,32(sp)
   2ba88:	dc800515 	stw	r18,20(sp)
   2ba8c:	843fffc4 	addi	r16,r16,-1
   2ba90:	dfc00c15 	stw	ra,48(sp)
   2ba94:	df000b15 	stw	fp,44(sp)
   2ba98:	ddc00a15 	stw	r23,40(sp)
   2ba9c:	dd000715 	stw	r20,28(sp)
   2baa0:	dcc00615 	stw	r19,24(sp)
   2baa4:	dc400415 	stw	r17,16(sp)
   2baa8:	1481ffcc 	andi	r18,r2,2047
   2baac:	2c20703a 	and	r16,r5,r16
   2bab0:	b02b883a 	mov	r21,r22
   2bab4:	b2403fcc 	andi	r9,r22,255
   2bab8:	90006026 	beq	r18,zero,2bc3c <__muldf3+0x1d0>
   2babc:	0081ffc4 	movi	r2,2047
   2bac0:	2029883a 	mov	r20,r4
   2bac4:	90803626 	beq	r18,r2,2bba0 <__muldf3+0x134>
   2bac8:	80800434 	orhi	r2,r16,16
   2bacc:	100490fa 	slli	r2,r2,3
   2bad0:	2020d77a 	srli	r16,r4,29
   2bad4:	202890fa 	slli	r20,r4,3
   2bad8:	94bf0044 	addi	r18,r18,-1023
   2badc:	80a0b03a 	or	r16,r16,r2
   2bae0:	0027883a 	mov	r19,zero
   2bae4:	0039883a 	mov	fp,zero
   2bae8:	3804d53a 	srli	r2,r7,20
   2baec:	382ed7fa 	srli	r23,r7,31
   2baf0:	04400434 	movhi	r17,16
   2baf4:	8c7fffc4 	addi	r17,r17,-1
   2baf8:	1081ffcc 	andi	r2,r2,2047
   2bafc:	3011883a 	mov	r8,r6
   2bb00:	3c62703a 	and	r17,r7,r17
   2bb04:	ba803fcc 	andi	r10,r23,255
   2bb08:	10006d26 	beq	r2,zero,2bcc0 <__muldf3+0x254>
   2bb0c:	00c1ffc4 	movi	r3,2047
   2bb10:	10c06526 	beq	r2,r3,2bca8 <__muldf3+0x23c>
   2bb14:	88c00434 	orhi	r3,r17,16
   2bb18:	180690fa 	slli	r3,r3,3
   2bb1c:	3022d77a 	srli	r17,r6,29
   2bb20:	301090fa 	slli	r8,r6,3
   2bb24:	10bf0044 	addi	r2,r2,-1023
   2bb28:	88e2b03a 	or	r17,r17,r3
   2bb2c:	000b883a 	mov	r5,zero
   2bb30:	9085883a 	add	r2,r18,r2
   2bb34:	2cc8b03a 	or	r4,r5,r19
   2bb38:	00c003c4 	movi	r3,15
   2bb3c:	bdacf03a 	xor	r22,r23,r22
   2bb40:	12c00044 	addi	r11,r2,1
   2bb44:	19009936 	bltu	r3,r4,2bdac <__muldf3+0x340>
   2bb48:	200890ba 	slli	r4,r4,2
   2bb4c:	00c000f4 	movhi	r3,3
   2bb50:	18eed804 	addi	r3,r3,-17568
   2bb54:	20c9883a 	add	r4,r4,r3
   2bb58:	20c00017 	ldw	r3,0(r4)
   2bb5c:	1800683a 	jmp	r3
   2bb60:	0002bdac 	andhi	zero,zero,2806
   2bb64:	0002bbc0 	call	2bbc <__alt_heap_start+0xc6c>
   2bb68:	0002bbc0 	call	2bbc <__alt_heap_start+0xc6c>
   2bb6c:	0002bbbc 	xorhi	zero,zero,2798
   2bb70:	0002bd88 	cmpgei	zero,zero,2806
   2bb74:	0002bd88 	cmpgei	zero,zero,2806
   2bb78:	0002bd70 	cmpltui	zero,zero,2805
   2bb7c:	0002bbbc 	xorhi	zero,zero,2798
   2bb80:	0002bd88 	cmpgei	zero,zero,2806
   2bb84:	0002bd70 	cmpltui	zero,zero,2805
   2bb88:	0002bd88 	cmpgei	zero,zero,2806
   2bb8c:	0002bbbc 	xorhi	zero,zero,2798
   2bb90:	0002bd98 	cmpnei	zero,zero,2806
   2bb94:	0002bd98 	cmpnei	zero,zero,2806
   2bb98:	0002bd98 	cmpnei	zero,zero,2806
   2bb9c:	0002bfb4 	movhi	zero,2814
   2bba0:	2404b03a 	or	r2,r4,r16
   2bba4:	10006f1e 	bne	r2,zero,2bd64 <__muldf3+0x2f8>
   2bba8:	04c00204 	movi	r19,8
   2bbac:	0021883a 	mov	r16,zero
   2bbb0:	0029883a 	mov	r20,zero
   2bbb4:	07000084 	movi	fp,2
   2bbb8:	003fcb06 	br	2bae8 <__muldf3+0x7c>
   2bbbc:	502d883a 	mov	r22,r10
   2bbc0:	00800084 	movi	r2,2
   2bbc4:	28805726 	beq	r5,r2,2bd24 <__muldf3+0x2b8>
   2bbc8:	008000c4 	movi	r2,3
   2bbcc:	28816626 	beq	r5,r2,2c168 <__muldf3+0x6fc>
   2bbd0:	00800044 	movi	r2,1
   2bbd4:	2881411e 	bne	r5,r2,2c0dc <__muldf3+0x670>
   2bbd8:	b02b883a 	mov	r21,r22
   2bbdc:	0005883a 	mov	r2,zero
   2bbe0:	000b883a 	mov	r5,zero
   2bbe4:	0029883a 	mov	r20,zero
   2bbe8:	1004953a 	slli	r2,r2,20
   2bbec:	a8c03fcc 	andi	r3,r21,255
   2bbf0:	04400434 	movhi	r17,16
   2bbf4:	8c7fffc4 	addi	r17,r17,-1
   2bbf8:	180697fa 	slli	r3,r3,31
   2bbfc:	2c4a703a 	and	r5,r5,r17
   2bc00:	288ab03a 	or	r5,r5,r2
   2bc04:	28c6b03a 	or	r3,r5,r3
   2bc08:	a005883a 	mov	r2,r20
   2bc0c:	dfc00c17 	ldw	ra,48(sp)
   2bc10:	df000b17 	ldw	fp,44(sp)
   2bc14:	ddc00a17 	ldw	r23,40(sp)
   2bc18:	dd800917 	ldw	r22,36(sp)
   2bc1c:	dd400817 	ldw	r21,32(sp)
   2bc20:	dd000717 	ldw	r20,28(sp)
   2bc24:	dcc00617 	ldw	r19,24(sp)
   2bc28:	dc800517 	ldw	r18,20(sp)
   2bc2c:	dc400417 	ldw	r17,16(sp)
   2bc30:	dc000317 	ldw	r16,12(sp)
   2bc34:	dec00d04 	addi	sp,sp,52
   2bc38:	f800283a 	ret
   2bc3c:	2404b03a 	or	r2,r4,r16
   2bc40:	2027883a 	mov	r19,r4
   2bc44:	10004226 	beq	r2,zero,2bd50 <__muldf3+0x2e4>
   2bc48:	8000fc26 	beq	r16,zero,2c03c <__muldf3+0x5d0>
   2bc4c:	8009883a 	mov	r4,r16
   2bc50:	d9800215 	stw	r6,8(sp)
   2bc54:	d9c00015 	stw	r7,0(sp)
   2bc58:	da400115 	stw	r9,4(sp)
   2bc5c:	002cc840 	call	2cc84 <__clzsi2>
   2bc60:	d9800217 	ldw	r6,8(sp)
   2bc64:	d9c00017 	ldw	r7,0(sp)
   2bc68:	da400117 	ldw	r9,4(sp)
   2bc6c:	113ffd44 	addi	r4,r2,-11
   2bc70:	00c00704 	movi	r3,28
   2bc74:	1900ed16 	blt	r3,r4,2c02c <__muldf3+0x5c0>
   2bc78:	00c00744 	movi	r3,29
   2bc7c:	147ffe04 	addi	r17,r2,-8
   2bc80:	1907c83a 	sub	r3,r3,r4
   2bc84:	8460983a 	sll	r16,r16,r17
   2bc88:	98c6d83a 	srl	r3,r19,r3
   2bc8c:	9c68983a 	sll	r20,r19,r17
   2bc90:	1c20b03a 	or	r16,r3,r16
   2bc94:	1080fcc4 	addi	r2,r2,1011
   2bc98:	00a5c83a 	sub	r18,zero,r2
   2bc9c:	0027883a 	mov	r19,zero
   2bca0:	0039883a 	mov	fp,zero
   2bca4:	003f9006 	br	2bae8 <__muldf3+0x7c>
   2bca8:	3446b03a 	or	r3,r6,r17
   2bcac:	1800261e 	bne	r3,zero,2bd48 <__muldf3+0x2dc>
   2bcb0:	0023883a 	mov	r17,zero
   2bcb4:	0011883a 	mov	r8,zero
   2bcb8:	01400084 	movi	r5,2
   2bcbc:	003f9c06 	br	2bb30 <__muldf3+0xc4>
   2bcc0:	3446b03a 	or	r3,r6,r17
   2bcc4:	18001c26 	beq	r3,zero,2bd38 <__muldf3+0x2cc>
   2bcc8:	8800ce26 	beq	r17,zero,2c004 <__muldf3+0x598>
   2bccc:	8809883a 	mov	r4,r17
   2bcd0:	d9800215 	stw	r6,8(sp)
   2bcd4:	da400115 	stw	r9,4(sp)
   2bcd8:	da800015 	stw	r10,0(sp)
   2bcdc:	002cc840 	call	2cc84 <__clzsi2>
   2bce0:	d9800217 	ldw	r6,8(sp)
   2bce4:	da400117 	ldw	r9,4(sp)
   2bce8:	da800017 	ldw	r10,0(sp)
   2bcec:	113ffd44 	addi	r4,r2,-11
   2bcf0:	00c00704 	movi	r3,28
   2bcf4:	1900bf16 	blt	r3,r4,2bff4 <__muldf3+0x588>
   2bcf8:	00c00744 	movi	r3,29
   2bcfc:	123ffe04 	addi	r8,r2,-8
   2bd00:	1907c83a 	sub	r3,r3,r4
   2bd04:	8a22983a 	sll	r17,r17,r8
   2bd08:	30c6d83a 	srl	r3,r6,r3
   2bd0c:	3210983a 	sll	r8,r6,r8
   2bd10:	1c62b03a 	or	r17,r3,r17
   2bd14:	1080fcc4 	addi	r2,r2,1011
   2bd18:	0085c83a 	sub	r2,zero,r2
   2bd1c:	000b883a 	mov	r5,zero
   2bd20:	003f8306 	br	2bb30 <__muldf3+0xc4>
   2bd24:	b02b883a 	mov	r21,r22
   2bd28:	0081ffc4 	movi	r2,2047
   2bd2c:	000b883a 	mov	r5,zero
   2bd30:	0029883a 	mov	r20,zero
   2bd34:	003fac06 	br	2bbe8 <__muldf3+0x17c>
   2bd38:	0023883a 	mov	r17,zero
   2bd3c:	0011883a 	mov	r8,zero
   2bd40:	01400044 	movi	r5,1
   2bd44:	003f7a06 	br	2bb30 <__muldf3+0xc4>
   2bd48:	014000c4 	movi	r5,3
   2bd4c:	003f7806 	br	2bb30 <__muldf3+0xc4>
   2bd50:	04c00104 	movi	r19,4
   2bd54:	0021883a 	mov	r16,zero
   2bd58:	0029883a 	mov	r20,zero
   2bd5c:	07000044 	movi	fp,1
   2bd60:	003f6106 	br	2bae8 <__muldf3+0x7c>
   2bd64:	04c00304 	movi	r19,12
   2bd68:	070000c4 	movi	fp,3
   2bd6c:	003f5e06 	br	2bae8 <__muldf3+0x7c>
   2bd70:	01400434 	movhi	r5,16
   2bd74:	002b883a 	mov	r21,zero
   2bd78:	297fffc4 	addi	r5,r5,-1
   2bd7c:	053fffc4 	movi	r20,-1
   2bd80:	0081ffc4 	movi	r2,2047
   2bd84:	003f9806 	br	2bbe8 <__muldf3+0x17c>
   2bd88:	8023883a 	mov	r17,r16
   2bd8c:	a011883a 	mov	r8,r20
   2bd90:	e00b883a 	mov	r5,fp
   2bd94:	003f8a06 	br	2bbc0 <__muldf3+0x154>
   2bd98:	8023883a 	mov	r17,r16
   2bd9c:	a011883a 	mov	r8,r20
   2bda0:	482d883a 	mov	r22,r9
   2bda4:	e00b883a 	mov	r5,fp
   2bda8:	003f8506 	br	2bbc0 <__muldf3+0x154>
   2bdac:	a00ad43a 	srli	r5,r20,16
   2bdb0:	401ad43a 	srli	r13,r8,16
   2bdb4:	a53fffcc 	andi	r20,r20,65535
   2bdb8:	423fffcc 	andi	r8,r8,65535
   2bdbc:	4519383a 	mul	r12,r8,r20
   2bdc0:	4147383a 	mul	r3,r8,r5
   2bdc4:	6d09383a 	mul	r4,r13,r20
   2bdc8:	600cd43a 	srli	r6,r12,16
   2bdcc:	2b5d383a 	mul	r14,r5,r13
   2bdd0:	20c9883a 	add	r4,r4,r3
   2bdd4:	310d883a 	add	r6,r6,r4
   2bdd8:	30c0022e 	bgeu	r6,r3,2bde4 <__muldf3+0x378>
   2bddc:	00c00074 	movhi	r3,1
   2bde0:	70dd883a 	add	r14,r14,r3
   2bde4:	8826d43a 	srli	r19,r17,16
   2bde8:	8bffffcc 	andi	r15,r17,65535
   2bdec:	7d23383a 	mul	r17,r15,r20
   2bdf0:	7949383a 	mul	r4,r15,r5
   2bdf4:	9d29383a 	mul	r20,r19,r20
   2bdf8:	8814d43a 	srli	r10,r17,16
   2bdfc:	3012943a 	slli	r9,r6,16
   2be00:	a129883a 	add	r20,r20,r4
   2be04:	633fffcc 	andi	r12,r12,65535
   2be08:	5515883a 	add	r10,r10,r20
   2be0c:	3006d43a 	srli	r3,r6,16
   2be10:	4b13883a 	add	r9,r9,r12
   2be14:	2ccb383a 	mul	r5,r5,r19
   2be18:	5100022e 	bgeu	r10,r4,2be24 <__muldf3+0x3b8>
   2be1c:	01000074 	movhi	r4,1
   2be20:	290b883a 	add	r5,r5,r4
   2be24:	802ad43a 	srli	r21,r16,16
   2be28:	843fffcc 	andi	r16,r16,65535
   2be2c:	440d383a 	mul	r6,r8,r16
   2be30:	4565383a 	mul	r18,r8,r21
   2be34:	8349383a 	mul	r4,r16,r13
   2be38:	500e943a 	slli	r7,r10,16
   2be3c:	3010d43a 	srli	r8,r6,16
   2be40:	5028d43a 	srli	r20,r10,16
   2be44:	2489883a 	add	r4,r4,r18
   2be48:	8abfffcc 	andi	r10,r17,65535
   2be4c:	3a95883a 	add	r10,r7,r10
   2be50:	4119883a 	add	r12,r8,r4
   2be54:	a169883a 	add	r20,r20,r5
   2be58:	1a87883a 	add	r3,r3,r10
   2be5c:	6d5b383a 	mul	r13,r13,r21
   2be60:	6480022e 	bgeu	r12,r18,2be6c <__muldf3+0x400>
   2be64:	01000074 	movhi	r4,1
   2be68:	691b883a 	add	r13,r13,r4
   2be6c:	7c25383a 	mul	r18,r15,r16
   2be70:	7d4b383a 	mul	r5,r15,r21
   2be74:	84cf383a 	mul	r7,r16,r19
   2be78:	901ed43a 	srli	r15,r18,16
   2be7c:	6008d43a 	srli	r4,r12,16
   2be80:	6010943a 	slli	r8,r12,16
   2be84:	394f883a 	add	r7,r7,r5
   2be88:	333fffcc 	andi	r12,r6,65535
   2be8c:	79df883a 	add	r15,r15,r7
   2be90:	235b883a 	add	r13,r4,r13
   2be94:	9d63383a 	mul	r17,r19,r21
   2be98:	4309883a 	add	r4,r8,r12
   2be9c:	7940022e 	bgeu	r15,r5,2bea8 <__muldf3+0x43c>
   2bea0:	01400074 	movhi	r5,1
   2bea4:	8963883a 	add	r17,r17,r5
   2bea8:	780a943a 	slli	r5,r15,16
   2beac:	91bfffcc 	andi	r6,r18,65535
   2beb0:	70c7883a 	add	r3,r14,r3
   2beb4:	298d883a 	add	r6,r5,r6
   2beb8:	1a8f803a 	cmpltu	r7,r3,r10
   2bebc:	350b883a 	add	r5,r6,r20
   2bec0:	20c7883a 	add	r3,r4,r3
   2bec4:	3955883a 	add	r10,r7,r5
   2bec8:	1909803a 	cmpltu	r4,r3,r4
   2becc:	6a91883a 	add	r8,r13,r10
   2bed0:	780cd43a 	srli	r6,r15,16
   2bed4:	2219883a 	add	r12,r4,r8
   2bed8:	2d0b803a 	cmpltu	r5,r5,r20
   2bedc:	51cf803a 	cmpltu	r7,r10,r7
   2bee0:	29ceb03a 	or	r7,r5,r7
   2bee4:	4351803a 	cmpltu	r8,r8,r13
   2bee8:	610b803a 	cmpltu	r5,r12,r4
   2beec:	4148b03a 	or	r4,r8,r5
   2bef0:	398f883a 	add	r7,r7,r6
   2bef4:	3909883a 	add	r4,r7,r4
   2bef8:	1810927a 	slli	r8,r3,9
   2befc:	2449883a 	add	r4,r4,r17
   2bf00:	2008927a 	slli	r4,r4,9
   2bf04:	6022d5fa 	srli	r17,r12,23
   2bf08:	1806d5fa 	srli	r3,r3,23
   2bf0c:	4252b03a 	or	r9,r8,r9
   2bf10:	600a927a 	slli	r5,r12,9
   2bf14:	4810c03a 	cmpne	r8,r9,zero
   2bf18:	2462b03a 	or	r17,r4,r17
   2bf1c:	40c6b03a 	or	r3,r8,r3
   2bf20:	8900402c 	andhi	r4,r17,256
   2bf24:	1950b03a 	or	r8,r3,r5
   2bf28:	20000726 	beq	r4,zero,2bf48 <__muldf3+0x4dc>
   2bf2c:	4006d07a 	srli	r3,r8,1
   2bf30:	880497fa 	slli	r2,r17,31
   2bf34:	4200004c 	andi	r8,r8,1
   2bf38:	8822d07a 	srli	r17,r17,1
   2bf3c:	1a10b03a 	or	r8,r3,r8
   2bf40:	1210b03a 	or	r8,r2,r8
   2bf44:	5805883a 	mov	r2,r11
   2bf48:	1140ffc4 	addi	r5,r2,1023
   2bf4c:	0140440e 	bge	zero,r5,2c060 <__muldf3+0x5f4>
   2bf50:	40c001cc 	andi	r3,r8,7
   2bf54:	18000726 	beq	r3,zero,2bf74 <__muldf3+0x508>
   2bf58:	40c003cc 	andi	r3,r8,15
   2bf5c:	01000104 	movi	r4,4
   2bf60:	19000426 	beq	r3,r4,2bf74 <__muldf3+0x508>
   2bf64:	4107883a 	add	r3,r8,r4
   2bf68:	1a11803a 	cmpltu	r8,r3,r8
   2bf6c:	8a23883a 	add	r17,r17,r8
   2bf70:	1811883a 	mov	r8,r3
   2bf74:	88c0402c 	andhi	r3,r17,256
   2bf78:	18000426 	beq	r3,zero,2bf8c <__muldf3+0x520>
   2bf7c:	11410004 	addi	r5,r2,1024
   2bf80:	00bfc034 	movhi	r2,65280
   2bf84:	10bfffc4 	addi	r2,r2,-1
   2bf88:	88a2703a 	and	r17,r17,r2
   2bf8c:	0081ff84 	movi	r2,2046
   2bf90:	117f6416 	blt	r2,r5,2bd24 <__muldf3+0x2b8>
   2bf94:	8828977a 	slli	r20,r17,29
   2bf98:	4010d0fa 	srli	r8,r8,3
   2bf9c:	8822927a 	slli	r17,r17,9
   2bfa0:	2881ffcc 	andi	r2,r5,2047
   2bfa4:	a228b03a 	or	r20,r20,r8
   2bfa8:	880ad33a 	srli	r5,r17,12
   2bfac:	b02b883a 	mov	r21,r22
   2bfb0:	003f0d06 	br	2bbe8 <__muldf3+0x17c>
   2bfb4:	8080022c 	andhi	r2,r16,8
   2bfb8:	10000926 	beq	r2,zero,2bfe0 <__muldf3+0x574>
   2bfbc:	8880022c 	andhi	r2,r17,8
   2bfc0:	1000071e 	bne	r2,zero,2bfe0 <__muldf3+0x574>
   2bfc4:	00800434 	movhi	r2,16
   2bfc8:	89400234 	orhi	r5,r17,8
   2bfcc:	10bfffc4 	addi	r2,r2,-1
   2bfd0:	b82b883a 	mov	r21,r23
   2bfd4:	288a703a 	and	r5,r5,r2
   2bfd8:	4029883a 	mov	r20,r8
   2bfdc:	003f6806 	br	2bd80 <__muldf3+0x314>
   2bfe0:	00800434 	movhi	r2,16
   2bfe4:	81400234 	orhi	r5,r16,8
   2bfe8:	10bfffc4 	addi	r2,r2,-1
   2bfec:	288a703a 	and	r5,r5,r2
   2bff0:	003f6306 	br	2bd80 <__muldf3+0x314>
   2bff4:	147ff604 	addi	r17,r2,-40
   2bff8:	3462983a 	sll	r17,r6,r17
   2bffc:	0011883a 	mov	r8,zero
   2c000:	003f4406 	br	2bd14 <__muldf3+0x2a8>
   2c004:	3009883a 	mov	r4,r6
   2c008:	d9800215 	stw	r6,8(sp)
   2c00c:	da400115 	stw	r9,4(sp)
   2c010:	da800015 	stw	r10,0(sp)
   2c014:	002cc840 	call	2cc84 <__clzsi2>
   2c018:	10800804 	addi	r2,r2,32
   2c01c:	da800017 	ldw	r10,0(sp)
   2c020:	da400117 	ldw	r9,4(sp)
   2c024:	d9800217 	ldw	r6,8(sp)
   2c028:	003f3006 	br	2bcec <__muldf3+0x280>
   2c02c:	143ff604 	addi	r16,r2,-40
   2c030:	9c20983a 	sll	r16,r19,r16
   2c034:	0029883a 	mov	r20,zero
   2c038:	003f1606 	br	2bc94 <__muldf3+0x228>
   2c03c:	d9800215 	stw	r6,8(sp)
   2c040:	d9c00015 	stw	r7,0(sp)
   2c044:	da400115 	stw	r9,4(sp)
   2c048:	002cc840 	call	2cc84 <__clzsi2>
   2c04c:	10800804 	addi	r2,r2,32
   2c050:	da400117 	ldw	r9,4(sp)
   2c054:	d9c00017 	ldw	r7,0(sp)
   2c058:	d9800217 	ldw	r6,8(sp)
   2c05c:	003f0306 	br	2bc6c <__muldf3+0x200>
   2c060:	00c00044 	movi	r3,1
   2c064:	1947c83a 	sub	r3,r3,r5
   2c068:	00800e04 	movi	r2,56
   2c06c:	10feda16 	blt	r2,r3,2bbd8 <__muldf3+0x16c>
   2c070:	008007c4 	movi	r2,31
   2c074:	10c01b16 	blt	r2,r3,2c0e4 <__muldf3+0x678>
   2c078:	00800804 	movi	r2,32
   2c07c:	10c5c83a 	sub	r2,r2,r3
   2c080:	888a983a 	sll	r5,r17,r2
   2c084:	40c8d83a 	srl	r4,r8,r3
   2c088:	4084983a 	sll	r2,r8,r2
   2c08c:	88e2d83a 	srl	r17,r17,r3
   2c090:	2906b03a 	or	r3,r5,r4
   2c094:	1004c03a 	cmpne	r2,r2,zero
   2c098:	1886b03a 	or	r3,r3,r2
   2c09c:	188001cc 	andi	r2,r3,7
   2c0a0:	10000726 	beq	r2,zero,2c0c0 <__muldf3+0x654>
   2c0a4:	188003cc 	andi	r2,r3,15
   2c0a8:	01000104 	movi	r4,4
   2c0ac:	11000426 	beq	r2,r4,2c0c0 <__muldf3+0x654>
   2c0b0:	1805883a 	mov	r2,r3
   2c0b4:	10c00104 	addi	r3,r2,4
   2c0b8:	1885803a 	cmpltu	r2,r3,r2
   2c0bc:	88a3883a 	add	r17,r17,r2
   2c0c0:	8880202c 	andhi	r2,r17,128
   2c0c4:	10001c26 	beq	r2,zero,2c138 <__muldf3+0x6cc>
   2c0c8:	b02b883a 	mov	r21,r22
   2c0cc:	00800044 	movi	r2,1
   2c0d0:	000b883a 	mov	r5,zero
   2c0d4:	0029883a 	mov	r20,zero
   2c0d8:	003ec306 	br	2bbe8 <__muldf3+0x17c>
   2c0dc:	5805883a 	mov	r2,r11
   2c0e0:	003f9906 	br	2bf48 <__muldf3+0x4dc>
   2c0e4:	00bff844 	movi	r2,-31
   2c0e8:	1145c83a 	sub	r2,r2,r5
   2c0ec:	8888d83a 	srl	r4,r17,r2
   2c0f0:	00800804 	movi	r2,32
   2c0f4:	18801a26 	beq	r3,r2,2c160 <__muldf3+0x6f4>
   2c0f8:	00801004 	movi	r2,64
   2c0fc:	10c5c83a 	sub	r2,r2,r3
   2c100:	8884983a 	sll	r2,r17,r2
   2c104:	1204b03a 	or	r2,r2,r8
   2c108:	1004c03a 	cmpne	r2,r2,zero
   2c10c:	2084b03a 	or	r2,r4,r2
   2c110:	144001cc 	andi	r17,r2,7
   2c114:	88000d1e 	bne	r17,zero,2c14c <__muldf3+0x6e0>
   2c118:	000b883a 	mov	r5,zero
   2c11c:	1028d0fa 	srli	r20,r2,3
   2c120:	b02b883a 	mov	r21,r22
   2c124:	0005883a 	mov	r2,zero
   2c128:	a468b03a 	or	r20,r20,r17
   2c12c:	003eae06 	br	2bbe8 <__muldf3+0x17c>
   2c130:	1007883a 	mov	r3,r2
   2c134:	0023883a 	mov	r17,zero
   2c138:	880a927a 	slli	r5,r17,9
   2c13c:	1805883a 	mov	r2,r3
   2c140:	8822977a 	slli	r17,r17,29
   2c144:	280ad33a 	srli	r5,r5,12
   2c148:	003ff406 	br	2c11c <__muldf3+0x6b0>
   2c14c:	10c003cc 	andi	r3,r2,15
   2c150:	01000104 	movi	r4,4
   2c154:	193ff626 	beq	r3,r4,2c130 <__muldf3+0x6c4>
   2c158:	0023883a 	mov	r17,zero
   2c15c:	003fd506 	br	2c0b4 <__muldf3+0x648>
   2c160:	0005883a 	mov	r2,zero
   2c164:	003fe706 	br	2c104 <__muldf3+0x698>
   2c168:	00800434 	movhi	r2,16
   2c16c:	89400234 	orhi	r5,r17,8
   2c170:	10bfffc4 	addi	r2,r2,-1
   2c174:	b02b883a 	mov	r21,r22
   2c178:	288a703a 	and	r5,r5,r2
   2c17c:	4029883a 	mov	r20,r8
   2c180:	003eff06 	br	2bd80 <__muldf3+0x314>

0002c184 <__subdf3>:
   2c184:	02000434 	movhi	r8,16
   2c188:	423fffc4 	addi	r8,r8,-1
   2c18c:	defffb04 	addi	sp,sp,-20
   2c190:	2a14703a 	and	r10,r5,r8
   2c194:	3812d53a 	srli	r9,r7,20
   2c198:	3a10703a 	and	r8,r7,r8
   2c19c:	2006d77a 	srli	r3,r4,29
   2c1a0:	3004d77a 	srli	r2,r6,29
   2c1a4:	dc000015 	stw	r16,0(sp)
   2c1a8:	501490fa 	slli	r10,r10,3
   2c1ac:	2820d53a 	srli	r16,r5,20
   2c1b0:	401090fa 	slli	r8,r8,3
   2c1b4:	dc800215 	stw	r18,8(sp)
   2c1b8:	dc400115 	stw	r17,4(sp)
   2c1bc:	dfc00415 	stw	ra,16(sp)
   2c1c0:	202290fa 	slli	r17,r4,3
   2c1c4:	dcc00315 	stw	r19,12(sp)
   2c1c8:	4a41ffcc 	andi	r9,r9,2047
   2c1cc:	0101ffc4 	movi	r4,2047
   2c1d0:	2824d7fa 	srli	r18,r5,31
   2c1d4:	8401ffcc 	andi	r16,r16,2047
   2c1d8:	50c6b03a 	or	r3,r10,r3
   2c1dc:	380ed7fa 	srli	r7,r7,31
   2c1e0:	408ab03a 	or	r5,r8,r2
   2c1e4:	300c90fa 	slli	r6,r6,3
   2c1e8:	49009626 	beq	r9,r4,2c444 <__subdf3+0x2c0>
   2c1ec:	39c0005c 	xori	r7,r7,1
   2c1f0:	8245c83a 	sub	r2,r16,r9
   2c1f4:	3c807426 	beq	r7,r18,2c3c8 <__subdf3+0x244>
   2c1f8:	0080af0e 	bge	zero,r2,2c4b8 <__subdf3+0x334>
   2c1fc:	48002a1e 	bne	r9,zero,2c2a8 <__subdf3+0x124>
   2c200:	2988b03a 	or	r4,r5,r6
   2c204:	20009a1e 	bne	r4,zero,2c470 <__subdf3+0x2ec>
   2c208:	888001cc 	andi	r2,r17,7
   2c20c:	10000726 	beq	r2,zero,2c22c <__subdf3+0xa8>
   2c210:	888003cc 	andi	r2,r17,15
   2c214:	01000104 	movi	r4,4
   2c218:	11000426 	beq	r2,r4,2c22c <__subdf3+0xa8>
   2c21c:	890b883a 	add	r5,r17,r4
   2c220:	2c63803a 	cmpltu	r17,r5,r17
   2c224:	1c47883a 	add	r3,r3,r17
   2c228:	2823883a 	mov	r17,r5
   2c22c:	1880202c 	andhi	r2,r3,128
   2c230:	10005926 	beq	r2,zero,2c398 <__subdf3+0x214>
   2c234:	84000044 	addi	r16,r16,1
   2c238:	0081ffc4 	movi	r2,2047
   2c23c:	8080be26 	beq	r16,r2,2c538 <__subdf3+0x3b4>
   2c240:	017fe034 	movhi	r5,65408
   2c244:	297fffc4 	addi	r5,r5,-1
   2c248:	1946703a 	and	r3,r3,r5
   2c24c:	1804977a 	slli	r2,r3,29
   2c250:	1806927a 	slli	r3,r3,9
   2c254:	8822d0fa 	srli	r17,r17,3
   2c258:	8401ffcc 	andi	r16,r16,2047
   2c25c:	180ad33a 	srli	r5,r3,12
   2c260:	9100004c 	andi	r4,r18,1
   2c264:	1444b03a 	or	r2,r2,r17
   2c268:	80c1ffcc 	andi	r3,r16,2047
   2c26c:	1820953a 	slli	r16,r3,20
   2c270:	20c03fcc 	andi	r3,r4,255
   2c274:	180897fa 	slli	r4,r3,31
   2c278:	00c00434 	movhi	r3,16
   2c27c:	18ffffc4 	addi	r3,r3,-1
   2c280:	28c6703a 	and	r3,r5,r3
   2c284:	1c06b03a 	or	r3,r3,r16
   2c288:	1906b03a 	or	r3,r3,r4
   2c28c:	dfc00417 	ldw	ra,16(sp)
   2c290:	dcc00317 	ldw	r19,12(sp)
   2c294:	dc800217 	ldw	r18,8(sp)
   2c298:	dc400117 	ldw	r17,4(sp)
   2c29c:	dc000017 	ldw	r16,0(sp)
   2c2a0:	dec00504 	addi	sp,sp,20
   2c2a4:	f800283a 	ret
   2c2a8:	0101ffc4 	movi	r4,2047
   2c2ac:	813fd626 	beq	r16,r4,2c208 <__subdf3+0x84>
   2c2b0:	29402034 	orhi	r5,r5,128
   2c2b4:	01000e04 	movi	r4,56
   2c2b8:	2080a316 	blt	r4,r2,2c548 <__subdf3+0x3c4>
   2c2bc:	010007c4 	movi	r4,31
   2c2c0:	2080c616 	blt	r4,r2,2c5dc <__subdf3+0x458>
   2c2c4:	01000804 	movi	r4,32
   2c2c8:	2089c83a 	sub	r4,r4,r2
   2c2cc:	2910983a 	sll	r8,r5,r4
   2c2d0:	308ed83a 	srl	r7,r6,r2
   2c2d4:	3108983a 	sll	r4,r6,r4
   2c2d8:	2884d83a 	srl	r2,r5,r2
   2c2dc:	41ccb03a 	or	r6,r8,r7
   2c2e0:	2008c03a 	cmpne	r4,r4,zero
   2c2e4:	310cb03a 	or	r6,r6,r4
   2c2e8:	898dc83a 	sub	r6,r17,r6
   2c2ec:	89a3803a 	cmpltu	r17,r17,r6
   2c2f0:	1887c83a 	sub	r3,r3,r2
   2c2f4:	1c47c83a 	sub	r3,r3,r17
   2c2f8:	3023883a 	mov	r17,r6
   2c2fc:	1880202c 	andhi	r2,r3,128
   2c300:	10002326 	beq	r2,zero,2c390 <__subdf3+0x20c>
   2c304:	04c02034 	movhi	r19,128
   2c308:	9cffffc4 	addi	r19,r19,-1
   2c30c:	1ce6703a 	and	r19,r3,r19
   2c310:	98007a26 	beq	r19,zero,2c4fc <__subdf3+0x378>
   2c314:	9809883a 	mov	r4,r19
   2c318:	002cc840 	call	2cc84 <__clzsi2>
   2c31c:	113ffe04 	addi	r4,r2,-8
   2c320:	00c007c4 	movi	r3,31
   2c324:	19007b16 	blt	r3,r4,2c514 <__subdf3+0x390>
   2c328:	00800804 	movi	r2,32
   2c32c:	1105c83a 	sub	r2,r2,r4
   2c330:	8884d83a 	srl	r2,r17,r2
   2c334:	9906983a 	sll	r3,r19,r4
   2c338:	8922983a 	sll	r17,r17,r4
   2c33c:	10c4b03a 	or	r2,r2,r3
   2c340:	24007816 	blt	r4,r16,2c524 <__subdf3+0x3a0>
   2c344:	2421c83a 	sub	r16,r4,r16
   2c348:	80c00044 	addi	r3,r16,1
   2c34c:	010007c4 	movi	r4,31
   2c350:	20c09516 	blt	r4,r3,2c5a8 <__subdf3+0x424>
   2c354:	01400804 	movi	r5,32
   2c358:	28cbc83a 	sub	r5,r5,r3
   2c35c:	88c8d83a 	srl	r4,r17,r3
   2c360:	8962983a 	sll	r17,r17,r5
   2c364:	114a983a 	sll	r5,r2,r5
   2c368:	10c6d83a 	srl	r3,r2,r3
   2c36c:	8804c03a 	cmpne	r2,r17,zero
   2c370:	290ab03a 	or	r5,r5,r4
   2c374:	28a2b03a 	or	r17,r5,r2
   2c378:	0021883a 	mov	r16,zero
   2c37c:	003fa206 	br	2c208 <__subdf3+0x84>
   2c380:	2090b03a 	or	r8,r4,r2
   2c384:	40018e26 	beq	r8,zero,2c9c0 <__subdf3+0x83c>
   2c388:	1007883a 	mov	r3,r2
   2c38c:	2023883a 	mov	r17,r4
   2c390:	888001cc 	andi	r2,r17,7
   2c394:	103f9e1e 	bne	r2,zero,2c210 <__subdf3+0x8c>
   2c398:	1804977a 	slli	r2,r3,29
   2c39c:	8822d0fa 	srli	r17,r17,3
   2c3a0:	1810d0fa 	srli	r8,r3,3
   2c3a4:	9100004c 	andi	r4,r18,1
   2c3a8:	1444b03a 	or	r2,r2,r17
   2c3ac:	00c1ffc4 	movi	r3,2047
   2c3b0:	80c02826 	beq	r16,r3,2c454 <__subdf3+0x2d0>
   2c3b4:	01400434 	movhi	r5,16
   2c3b8:	297fffc4 	addi	r5,r5,-1
   2c3bc:	80e0703a 	and	r16,r16,r3
   2c3c0:	414a703a 	and	r5,r8,r5
   2c3c4:	003fa806 	br	2c268 <__subdf3+0xe4>
   2c3c8:	0080630e 	bge	zero,r2,2c558 <__subdf3+0x3d4>
   2c3cc:	48003026 	beq	r9,zero,2c490 <__subdf3+0x30c>
   2c3d0:	0101ffc4 	movi	r4,2047
   2c3d4:	813f8c26 	beq	r16,r4,2c208 <__subdf3+0x84>
   2c3d8:	29402034 	orhi	r5,r5,128
   2c3dc:	01000e04 	movi	r4,56
   2c3e0:	2080a90e 	bge	r4,r2,2c688 <__subdf3+0x504>
   2c3e4:	298cb03a 	or	r6,r5,r6
   2c3e8:	3012c03a 	cmpne	r9,r6,zero
   2c3ec:	0005883a 	mov	r2,zero
   2c3f0:	4c53883a 	add	r9,r9,r17
   2c3f4:	4c63803a 	cmpltu	r17,r9,r17
   2c3f8:	10c7883a 	add	r3,r2,r3
   2c3fc:	88c7883a 	add	r3,r17,r3
   2c400:	4823883a 	mov	r17,r9
   2c404:	1880202c 	andhi	r2,r3,128
   2c408:	1000d026 	beq	r2,zero,2c74c <__subdf3+0x5c8>
   2c40c:	84000044 	addi	r16,r16,1
   2c410:	0081ffc4 	movi	r2,2047
   2c414:	8080fe26 	beq	r16,r2,2c810 <__subdf3+0x68c>
   2c418:	00bfe034 	movhi	r2,65408
   2c41c:	10bfffc4 	addi	r2,r2,-1
   2c420:	1886703a 	and	r3,r3,r2
   2c424:	880ad07a 	srli	r5,r17,1
   2c428:	180497fa 	slli	r2,r3,31
   2c42c:	8900004c 	andi	r4,r17,1
   2c430:	2922b03a 	or	r17,r5,r4
   2c434:	1806d07a 	srli	r3,r3,1
   2c438:	1462b03a 	or	r17,r2,r17
   2c43c:	3825883a 	mov	r18,r7
   2c440:	003f7106 	br	2c208 <__subdf3+0x84>
   2c444:	2984b03a 	or	r2,r5,r6
   2c448:	103f6826 	beq	r2,zero,2c1ec <__subdf3+0x68>
   2c44c:	39c03fcc 	andi	r7,r7,255
   2c450:	003f6706 	br	2c1f0 <__subdf3+0x6c>
   2c454:	4086b03a 	or	r3,r8,r2
   2c458:	18015226 	beq	r3,zero,2c9a4 <__subdf3+0x820>
   2c45c:	00c00434 	movhi	r3,16
   2c460:	41400234 	orhi	r5,r8,8
   2c464:	18ffffc4 	addi	r3,r3,-1
   2c468:	28ca703a 	and	r5,r5,r3
   2c46c:	003f7e06 	br	2c268 <__subdf3+0xe4>
   2c470:	10bfffc4 	addi	r2,r2,-1
   2c474:	1000491e 	bne	r2,zero,2c59c <__subdf3+0x418>
   2c478:	898fc83a 	sub	r7,r17,r6
   2c47c:	89e3803a 	cmpltu	r17,r17,r7
   2c480:	1947c83a 	sub	r3,r3,r5
   2c484:	1c47c83a 	sub	r3,r3,r17
   2c488:	3823883a 	mov	r17,r7
   2c48c:	003f9b06 	br	2c2fc <__subdf3+0x178>
   2c490:	2988b03a 	or	r4,r5,r6
   2c494:	203f5c26 	beq	r4,zero,2c208 <__subdf3+0x84>
   2c498:	10bfffc4 	addi	r2,r2,-1
   2c49c:	1000931e 	bne	r2,zero,2c6ec <__subdf3+0x568>
   2c4a0:	898d883a 	add	r6,r17,r6
   2c4a4:	3463803a 	cmpltu	r17,r6,r17
   2c4a8:	1947883a 	add	r3,r3,r5
   2c4ac:	88c7883a 	add	r3,r17,r3
   2c4b0:	3023883a 	mov	r17,r6
   2c4b4:	003fd306 	br	2c404 <__subdf3+0x280>
   2c4b8:	1000541e 	bne	r2,zero,2c60c <__subdf3+0x488>
   2c4bc:	80800044 	addi	r2,r16,1
   2c4c0:	1081ffcc 	andi	r2,r2,2047
   2c4c4:	01000044 	movi	r4,1
   2c4c8:	2080a20e 	bge	r4,r2,2c754 <__subdf3+0x5d0>
   2c4cc:	8989c83a 	sub	r4,r17,r6
   2c4d0:	8905803a 	cmpltu	r2,r17,r4
   2c4d4:	1967c83a 	sub	r19,r3,r5
   2c4d8:	98a7c83a 	sub	r19,r19,r2
   2c4dc:	9880202c 	andhi	r2,r19,128
   2c4e0:	10006326 	beq	r2,zero,2c670 <__subdf3+0x4ec>
   2c4e4:	3463c83a 	sub	r17,r6,r17
   2c4e8:	28c7c83a 	sub	r3,r5,r3
   2c4ec:	344d803a 	cmpltu	r6,r6,r17
   2c4f0:	19a7c83a 	sub	r19,r3,r6
   2c4f4:	3825883a 	mov	r18,r7
   2c4f8:	983f861e 	bne	r19,zero,2c314 <__subdf3+0x190>
   2c4fc:	8809883a 	mov	r4,r17
   2c500:	002cc840 	call	2cc84 <__clzsi2>
   2c504:	10800804 	addi	r2,r2,32
   2c508:	113ffe04 	addi	r4,r2,-8
   2c50c:	00c007c4 	movi	r3,31
   2c510:	193f850e 	bge	r3,r4,2c328 <__subdf3+0x1a4>
   2c514:	10bff604 	addi	r2,r2,-40
   2c518:	8884983a 	sll	r2,r17,r2
   2c51c:	0023883a 	mov	r17,zero
   2c520:	243f880e 	bge	r4,r16,2c344 <__subdf3+0x1c0>
   2c524:	00ffe034 	movhi	r3,65408
   2c528:	18ffffc4 	addi	r3,r3,-1
   2c52c:	8121c83a 	sub	r16,r16,r4
   2c530:	10c6703a 	and	r3,r2,r3
   2c534:	003f3406 	br	2c208 <__subdf3+0x84>
   2c538:	9100004c 	andi	r4,r18,1
   2c53c:	000b883a 	mov	r5,zero
   2c540:	0005883a 	mov	r2,zero
   2c544:	003f4806 	br	2c268 <__subdf3+0xe4>
   2c548:	298cb03a 	or	r6,r5,r6
   2c54c:	300cc03a 	cmpne	r6,r6,zero
   2c550:	0005883a 	mov	r2,zero
   2c554:	003f6406 	br	2c2e8 <__subdf3+0x164>
   2c558:	10009a1e 	bne	r2,zero,2c7c4 <__subdf3+0x640>
   2c55c:	82400044 	addi	r9,r16,1
   2c560:	4881ffcc 	andi	r2,r9,2047
   2c564:	02800044 	movi	r10,1
   2c568:	5080670e 	bge	r10,r2,2c708 <__subdf3+0x584>
   2c56c:	0081ffc4 	movi	r2,2047
   2c570:	4880af26 	beq	r9,r2,2c830 <__subdf3+0x6ac>
   2c574:	898d883a 	add	r6,r17,r6
   2c578:	1945883a 	add	r2,r3,r5
   2c57c:	3447803a 	cmpltu	r3,r6,r17
   2c580:	1887883a 	add	r3,r3,r2
   2c584:	182297fa 	slli	r17,r3,31
   2c588:	300cd07a 	srli	r6,r6,1
   2c58c:	1806d07a 	srli	r3,r3,1
   2c590:	4821883a 	mov	r16,r9
   2c594:	89a2b03a 	or	r17,r17,r6
   2c598:	003f1b06 	br	2c208 <__subdf3+0x84>
   2c59c:	0101ffc4 	movi	r4,2047
   2c5a0:	813f441e 	bne	r16,r4,2c2b4 <__subdf3+0x130>
   2c5a4:	003f1806 	br	2c208 <__subdf3+0x84>
   2c5a8:	843ff844 	addi	r16,r16,-31
   2c5ac:	01400804 	movi	r5,32
   2c5b0:	1408d83a 	srl	r4,r2,r16
   2c5b4:	19405026 	beq	r3,r5,2c6f8 <__subdf3+0x574>
   2c5b8:	01401004 	movi	r5,64
   2c5bc:	28c7c83a 	sub	r3,r5,r3
   2c5c0:	10c4983a 	sll	r2,r2,r3
   2c5c4:	88a2b03a 	or	r17,r17,r2
   2c5c8:	8822c03a 	cmpne	r17,r17,zero
   2c5cc:	2462b03a 	or	r17,r4,r17
   2c5d0:	0007883a 	mov	r3,zero
   2c5d4:	0021883a 	mov	r16,zero
   2c5d8:	003f6d06 	br	2c390 <__subdf3+0x20c>
   2c5dc:	11fff804 	addi	r7,r2,-32
   2c5e0:	01000804 	movi	r4,32
   2c5e4:	29ced83a 	srl	r7,r5,r7
   2c5e8:	11004526 	beq	r2,r4,2c700 <__subdf3+0x57c>
   2c5ec:	01001004 	movi	r4,64
   2c5f0:	2089c83a 	sub	r4,r4,r2
   2c5f4:	2904983a 	sll	r2,r5,r4
   2c5f8:	118cb03a 	or	r6,r2,r6
   2c5fc:	300cc03a 	cmpne	r6,r6,zero
   2c600:	398cb03a 	or	r6,r7,r6
   2c604:	0005883a 	mov	r2,zero
   2c608:	003f3706 	br	2c2e8 <__subdf3+0x164>
   2c60c:	80002a26 	beq	r16,zero,2c6b8 <__subdf3+0x534>
   2c610:	0101ffc4 	movi	r4,2047
   2c614:	49006626 	beq	r9,r4,2c7b0 <__subdf3+0x62c>
   2c618:	0085c83a 	sub	r2,zero,r2
   2c61c:	18c02034 	orhi	r3,r3,128
   2c620:	01000e04 	movi	r4,56
   2c624:	20807e16 	blt	r4,r2,2c820 <__subdf3+0x69c>
   2c628:	010007c4 	movi	r4,31
   2c62c:	2080e716 	blt	r4,r2,2c9cc <__subdf3+0x848>
   2c630:	01000804 	movi	r4,32
   2c634:	2089c83a 	sub	r4,r4,r2
   2c638:	1914983a 	sll	r10,r3,r4
   2c63c:	8890d83a 	srl	r8,r17,r2
   2c640:	8908983a 	sll	r4,r17,r4
   2c644:	1884d83a 	srl	r2,r3,r2
   2c648:	5222b03a 	or	r17,r10,r8
   2c64c:	2006c03a 	cmpne	r3,r4,zero
   2c650:	88e2b03a 	or	r17,r17,r3
   2c654:	3463c83a 	sub	r17,r6,r17
   2c658:	2885c83a 	sub	r2,r5,r2
   2c65c:	344d803a 	cmpltu	r6,r6,r17
   2c660:	1187c83a 	sub	r3,r2,r6
   2c664:	4821883a 	mov	r16,r9
   2c668:	3825883a 	mov	r18,r7
   2c66c:	003f2306 	br	2c2fc <__subdf3+0x178>
   2c670:	24d0b03a 	or	r8,r4,r19
   2c674:	40001b1e 	bne	r8,zero,2c6e4 <__subdf3+0x560>
   2c678:	0005883a 	mov	r2,zero
   2c67c:	0009883a 	mov	r4,zero
   2c680:	0021883a 	mov	r16,zero
   2c684:	003f4906 	br	2c3ac <__subdf3+0x228>
   2c688:	010007c4 	movi	r4,31
   2c68c:	20803a16 	blt	r4,r2,2c778 <__subdf3+0x5f4>
   2c690:	01000804 	movi	r4,32
   2c694:	2089c83a 	sub	r4,r4,r2
   2c698:	2912983a 	sll	r9,r5,r4
   2c69c:	3090d83a 	srl	r8,r6,r2
   2c6a0:	3108983a 	sll	r4,r6,r4
   2c6a4:	2884d83a 	srl	r2,r5,r2
   2c6a8:	4a12b03a 	or	r9,r9,r8
   2c6ac:	2008c03a 	cmpne	r4,r4,zero
   2c6b0:	4912b03a 	or	r9,r9,r4
   2c6b4:	003f4e06 	br	2c3f0 <__subdf3+0x26c>
   2c6b8:	1c48b03a 	or	r4,r3,r17
   2c6bc:	20003c26 	beq	r4,zero,2c7b0 <__subdf3+0x62c>
   2c6c0:	0084303a 	nor	r2,zero,r2
   2c6c4:	1000381e 	bne	r2,zero,2c7a8 <__subdf3+0x624>
   2c6c8:	3463c83a 	sub	r17,r6,r17
   2c6cc:	28c5c83a 	sub	r2,r5,r3
   2c6d0:	344d803a 	cmpltu	r6,r6,r17
   2c6d4:	1187c83a 	sub	r3,r2,r6
   2c6d8:	4821883a 	mov	r16,r9
   2c6dc:	3825883a 	mov	r18,r7
   2c6e0:	003f0606 	br	2c2fc <__subdf3+0x178>
   2c6e4:	2023883a 	mov	r17,r4
   2c6e8:	003f0906 	br	2c310 <__subdf3+0x18c>
   2c6ec:	0101ffc4 	movi	r4,2047
   2c6f0:	813f3a1e 	bne	r16,r4,2c3dc <__subdf3+0x258>
   2c6f4:	003ec406 	br	2c208 <__subdf3+0x84>
   2c6f8:	0005883a 	mov	r2,zero
   2c6fc:	003fb106 	br	2c5c4 <__subdf3+0x440>
   2c700:	0005883a 	mov	r2,zero
   2c704:	003fbc06 	br	2c5f8 <__subdf3+0x474>
   2c708:	1c44b03a 	or	r2,r3,r17
   2c70c:	80008e1e 	bne	r16,zero,2c948 <__subdf3+0x7c4>
   2c710:	1000c826 	beq	r2,zero,2ca34 <__subdf3+0x8b0>
   2c714:	2984b03a 	or	r2,r5,r6
   2c718:	103ebb26 	beq	r2,zero,2c208 <__subdf3+0x84>
   2c71c:	8989883a 	add	r4,r17,r6
   2c720:	1945883a 	add	r2,r3,r5
   2c724:	2447803a 	cmpltu	r3,r4,r17
   2c728:	1887883a 	add	r3,r3,r2
   2c72c:	1880202c 	andhi	r2,r3,128
   2c730:	2023883a 	mov	r17,r4
   2c734:	103f1626 	beq	r2,zero,2c390 <__subdf3+0x20c>
   2c738:	00bfe034 	movhi	r2,65408
   2c73c:	10bfffc4 	addi	r2,r2,-1
   2c740:	5021883a 	mov	r16,r10
   2c744:	1886703a 	and	r3,r3,r2
   2c748:	003eaf06 	br	2c208 <__subdf3+0x84>
   2c74c:	3825883a 	mov	r18,r7
   2c750:	003f0f06 	br	2c390 <__subdf3+0x20c>
   2c754:	1c44b03a 	or	r2,r3,r17
   2c758:	8000251e 	bne	r16,zero,2c7f0 <__subdf3+0x66c>
   2c75c:	1000661e 	bne	r2,zero,2c8f8 <__subdf3+0x774>
   2c760:	2990b03a 	or	r8,r5,r6
   2c764:	40009626 	beq	r8,zero,2c9c0 <__subdf3+0x83c>
   2c768:	2807883a 	mov	r3,r5
   2c76c:	3023883a 	mov	r17,r6
   2c770:	3825883a 	mov	r18,r7
   2c774:	003ea406 	br	2c208 <__subdf3+0x84>
   2c778:	127ff804 	addi	r9,r2,-32
   2c77c:	01000804 	movi	r4,32
   2c780:	2a52d83a 	srl	r9,r5,r9
   2c784:	11008c26 	beq	r2,r4,2c9b8 <__subdf3+0x834>
   2c788:	01001004 	movi	r4,64
   2c78c:	2085c83a 	sub	r2,r4,r2
   2c790:	2884983a 	sll	r2,r5,r2
   2c794:	118cb03a 	or	r6,r2,r6
   2c798:	300cc03a 	cmpne	r6,r6,zero
   2c79c:	4992b03a 	or	r9,r9,r6
   2c7a0:	0005883a 	mov	r2,zero
   2c7a4:	003f1206 	br	2c3f0 <__subdf3+0x26c>
   2c7a8:	0101ffc4 	movi	r4,2047
   2c7ac:	493f9c1e 	bne	r9,r4,2c620 <__subdf3+0x49c>
   2c7b0:	2807883a 	mov	r3,r5
   2c7b4:	3023883a 	mov	r17,r6
   2c7b8:	4821883a 	mov	r16,r9
   2c7bc:	3825883a 	mov	r18,r7
   2c7c0:	003e9106 	br	2c208 <__subdf3+0x84>
   2c7c4:	80001f1e 	bne	r16,zero,2c844 <__subdf3+0x6c0>
   2c7c8:	1c48b03a 	or	r4,r3,r17
   2c7cc:	20005a26 	beq	r4,zero,2c938 <__subdf3+0x7b4>
   2c7d0:	0084303a 	nor	r2,zero,r2
   2c7d4:	1000561e 	bne	r2,zero,2c930 <__subdf3+0x7ac>
   2c7d8:	89a3883a 	add	r17,r17,r6
   2c7dc:	1945883a 	add	r2,r3,r5
   2c7e0:	898d803a 	cmpltu	r6,r17,r6
   2c7e4:	3087883a 	add	r3,r6,r2
   2c7e8:	4821883a 	mov	r16,r9
   2c7ec:	003f0506 	br	2c404 <__subdf3+0x280>
   2c7f0:	10002b1e 	bne	r2,zero,2c8a0 <__subdf3+0x71c>
   2c7f4:	2984b03a 	or	r2,r5,r6
   2c7f8:	10008026 	beq	r2,zero,2c9fc <__subdf3+0x878>
   2c7fc:	2807883a 	mov	r3,r5
   2c800:	3023883a 	mov	r17,r6
   2c804:	3825883a 	mov	r18,r7
   2c808:	0401ffc4 	movi	r16,2047
   2c80c:	003e7e06 	br	2c208 <__subdf3+0x84>
   2c810:	3809883a 	mov	r4,r7
   2c814:	0011883a 	mov	r8,zero
   2c818:	0005883a 	mov	r2,zero
   2c81c:	003ee306 	br	2c3ac <__subdf3+0x228>
   2c820:	1c62b03a 	or	r17,r3,r17
   2c824:	8822c03a 	cmpne	r17,r17,zero
   2c828:	0005883a 	mov	r2,zero
   2c82c:	003f8906 	br	2c654 <__subdf3+0x4d0>
   2c830:	3809883a 	mov	r4,r7
   2c834:	4821883a 	mov	r16,r9
   2c838:	0011883a 	mov	r8,zero
   2c83c:	0005883a 	mov	r2,zero
   2c840:	003eda06 	br	2c3ac <__subdf3+0x228>
   2c844:	0101ffc4 	movi	r4,2047
   2c848:	49003b26 	beq	r9,r4,2c938 <__subdf3+0x7b4>
   2c84c:	0085c83a 	sub	r2,zero,r2
   2c850:	18c02034 	orhi	r3,r3,128
   2c854:	01000e04 	movi	r4,56
   2c858:	20806e16 	blt	r4,r2,2ca14 <__subdf3+0x890>
   2c85c:	010007c4 	movi	r4,31
   2c860:	20807716 	blt	r4,r2,2ca40 <__subdf3+0x8bc>
   2c864:	01000804 	movi	r4,32
   2c868:	2089c83a 	sub	r4,r4,r2
   2c86c:	1914983a 	sll	r10,r3,r4
   2c870:	8890d83a 	srl	r8,r17,r2
   2c874:	8908983a 	sll	r4,r17,r4
   2c878:	1884d83a 	srl	r2,r3,r2
   2c87c:	5222b03a 	or	r17,r10,r8
   2c880:	2006c03a 	cmpne	r3,r4,zero
   2c884:	88e2b03a 	or	r17,r17,r3
   2c888:	89a3883a 	add	r17,r17,r6
   2c88c:	1145883a 	add	r2,r2,r5
   2c890:	898d803a 	cmpltu	r6,r17,r6
   2c894:	3087883a 	add	r3,r6,r2
   2c898:	4821883a 	mov	r16,r9
   2c89c:	003ed906 	br	2c404 <__subdf3+0x280>
   2c8a0:	2984b03a 	or	r2,r5,r6
   2c8a4:	10004226 	beq	r2,zero,2c9b0 <__subdf3+0x82c>
   2c8a8:	1808d0fa 	srli	r4,r3,3
   2c8ac:	8822d0fa 	srli	r17,r17,3
   2c8b0:	1806977a 	slli	r3,r3,29
   2c8b4:	2080022c 	andhi	r2,r4,8
   2c8b8:	1c62b03a 	or	r17,r3,r17
   2c8bc:	10000826 	beq	r2,zero,2c8e0 <__subdf3+0x75c>
   2c8c0:	2812d0fa 	srli	r9,r5,3
   2c8c4:	4880022c 	andhi	r2,r9,8
   2c8c8:	1000051e 	bne	r2,zero,2c8e0 <__subdf3+0x75c>
   2c8cc:	300cd0fa 	srli	r6,r6,3
   2c8d0:	2804977a 	slli	r2,r5,29
   2c8d4:	4809883a 	mov	r4,r9
   2c8d8:	3825883a 	mov	r18,r7
   2c8dc:	11a2b03a 	or	r17,r2,r6
   2c8e0:	8806d77a 	srli	r3,r17,29
   2c8e4:	200890fa 	slli	r4,r4,3
   2c8e8:	882290fa 	slli	r17,r17,3
   2c8ec:	0401ffc4 	movi	r16,2047
   2c8f0:	1906b03a 	or	r3,r3,r4
   2c8f4:	003e4406 	br	2c208 <__subdf3+0x84>
   2c8f8:	2984b03a 	or	r2,r5,r6
   2c8fc:	103e4226 	beq	r2,zero,2c208 <__subdf3+0x84>
   2c900:	8989c83a 	sub	r4,r17,r6
   2c904:	8911803a 	cmpltu	r8,r17,r4
   2c908:	1945c83a 	sub	r2,r3,r5
   2c90c:	1205c83a 	sub	r2,r2,r8
   2c910:	1200202c 	andhi	r8,r2,128
   2c914:	403e9a26 	beq	r8,zero,2c380 <__subdf3+0x1fc>
   2c918:	3463c83a 	sub	r17,r6,r17
   2c91c:	28c5c83a 	sub	r2,r5,r3
   2c920:	344d803a 	cmpltu	r6,r6,r17
   2c924:	1187c83a 	sub	r3,r2,r6
   2c928:	3825883a 	mov	r18,r7
   2c92c:	003e3606 	br	2c208 <__subdf3+0x84>
   2c930:	0101ffc4 	movi	r4,2047
   2c934:	493fc71e 	bne	r9,r4,2c854 <__subdf3+0x6d0>
   2c938:	2807883a 	mov	r3,r5
   2c93c:	3023883a 	mov	r17,r6
   2c940:	4821883a 	mov	r16,r9
   2c944:	003e3006 	br	2c208 <__subdf3+0x84>
   2c948:	10003626 	beq	r2,zero,2ca24 <__subdf3+0x8a0>
   2c94c:	2984b03a 	or	r2,r5,r6
   2c950:	10001726 	beq	r2,zero,2c9b0 <__subdf3+0x82c>
   2c954:	1808d0fa 	srli	r4,r3,3
   2c958:	8822d0fa 	srli	r17,r17,3
   2c95c:	1806977a 	slli	r3,r3,29
   2c960:	2080022c 	andhi	r2,r4,8
   2c964:	1c62b03a 	or	r17,r3,r17
   2c968:	10000726 	beq	r2,zero,2c988 <__subdf3+0x804>
   2c96c:	2812d0fa 	srli	r9,r5,3
   2c970:	4880022c 	andhi	r2,r9,8
   2c974:	1000041e 	bne	r2,zero,2c988 <__subdf3+0x804>
   2c978:	300cd0fa 	srli	r6,r6,3
   2c97c:	2804977a 	slli	r2,r5,29
   2c980:	4809883a 	mov	r4,r9
   2c984:	11a2b03a 	or	r17,r2,r6
   2c988:	8806d77a 	srli	r3,r17,29
   2c98c:	200890fa 	slli	r4,r4,3
   2c990:	882290fa 	slli	r17,r17,3
   2c994:	3825883a 	mov	r18,r7
   2c998:	1906b03a 	or	r3,r3,r4
   2c99c:	0401ffc4 	movi	r16,2047
   2c9a0:	003e1906 	br	2c208 <__subdf3+0x84>
   2c9a4:	000b883a 	mov	r5,zero
   2c9a8:	0005883a 	mov	r2,zero
   2c9ac:	003e2e06 	br	2c268 <__subdf3+0xe4>
   2c9b0:	0401ffc4 	movi	r16,2047
   2c9b4:	003e1406 	br	2c208 <__subdf3+0x84>
   2c9b8:	0005883a 	mov	r2,zero
   2c9bc:	003f7506 	br	2c794 <__subdf3+0x610>
   2c9c0:	0005883a 	mov	r2,zero
   2c9c4:	0009883a 	mov	r4,zero
   2c9c8:	003e7806 	br	2c3ac <__subdf3+0x228>
   2c9cc:	123ff804 	addi	r8,r2,-32
   2c9d0:	01000804 	movi	r4,32
   2c9d4:	1a10d83a 	srl	r8,r3,r8
   2c9d8:	11002526 	beq	r2,r4,2ca70 <__subdf3+0x8ec>
   2c9dc:	01001004 	movi	r4,64
   2c9e0:	2085c83a 	sub	r2,r4,r2
   2c9e4:	1884983a 	sll	r2,r3,r2
   2c9e8:	1444b03a 	or	r2,r2,r17
   2c9ec:	1004c03a 	cmpne	r2,r2,zero
   2c9f0:	40a2b03a 	or	r17,r8,r2
   2c9f4:	0005883a 	mov	r2,zero
   2c9f8:	003f1606 	br	2c654 <__subdf3+0x4d0>
   2c9fc:	02000434 	movhi	r8,16
   2ca00:	0009883a 	mov	r4,zero
   2ca04:	423fffc4 	addi	r8,r8,-1
   2ca08:	00bfffc4 	movi	r2,-1
   2ca0c:	0401ffc4 	movi	r16,2047
   2ca10:	003e6606 	br	2c3ac <__subdf3+0x228>
   2ca14:	1c62b03a 	or	r17,r3,r17
   2ca18:	8822c03a 	cmpne	r17,r17,zero
   2ca1c:	0005883a 	mov	r2,zero
   2ca20:	003f9906 	br	2c888 <__subdf3+0x704>
   2ca24:	2807883a 	mov	r3,r5
   2ca28:	3023883a 	mov	r17,r6
   2ca2c:	0401ffc4 	movi	r16,2047
   2ca30:	003df506 	br	2c208 <__subdf3+0x84>
   2ca34:	2807883a 	mov	r3,r5
   2ca38:	3023883a 	mov	r17,r6
   2ca3c:	003df206 	br	2c208 <__subdf3+0x84>
   2ca40:	123ff804 	addi	r8,r2,-32
   2ca44:	01000804 	movi	r4,32
   2ca48:	1a10d83a 	srl	r8,r3,r8
   2ca4c:	11000a26 	beq	r2,r4,2ca78 <__subdf3+0x8f4>
   2ca50:	01001004 	movi	r4,64
   2ca54:	2085c83a 	sub	r2,r4,r2
   2ca58:	1884983a 	sll	r2,r3,r2
   2ca5c:	1444b03a 	or	r2,r2,r17
   2ca60:	1004c03a 	cmpne	r2,r2,zero
   2ca64:	40a2b03a 	or	r17,r8,r2
   2ca68:	0005883a 	mov	r2,zero
   2ca6c:	003f8606 	br	2c888 <__subdf3+0x704>
   2ca70:	0005883a 	mov	r2,zero
   2ca74:	003fdc06 	br	2c9e8 <__subdf3+0x864>
   2ca78:	0005883a 	mov	r2,zero
   2ca7c:	003ff706 	br	2ca5c <__subdf3+0x8d8>

0002ca80 <__fixdfsi>:
   2ca80:	280cd53a 	srli	r6,r5,20
   2ca84:	00c00434 	movhi	r3,16
   2ca88:	18ffffc4 	addi	r3,r3,-1
   2ca8c:	3181ffcc 	andi	r6,r6,2047
   2ca90:	01c0ff84 	movi	r7,1022
   2ca94:	28c6703a 	and	r3,r5,r3
   2ca98:	280ad7fa 	srli	r5,r5,31
   2ca9c:	3980120e 	bge	r7,r6,2cae8 <__fixdfsi+0x68>
   2caa0:	00810744 	movi	r2,1053
   2caa4:	11800c16 	blt	r2,r6,2cad8 <__fixdfsi+0x58>
   2caa8:	00810cc4 	movi	r2,1075
   2caac:	1185c83a 	sub	r2,r2,r6
   2cab0:	01c007c4 	movi	r7,31
   2cab4:	18c00434 	orhi	r3,r3,16
   2cab8:	38800d16 	blt	r7,r2,2caf0 <__fixdfsi+0x70>
   2cabc:	31befb44 	addi	r6,r6,-1043
   2cac0:	2084d83a 	srl	r2,r4,r2
   2cac4:	1986983a 	sll	r3,r3,r6
   2cac8:	1884b03a 	or	r2,r3,r2
   2cacc:	28000726 	beq	r5,zero,2caec <__fixdfsi+0x6c>
   2cad0:	0085c83a 	sub	r2,zero,r2
   2cad4:	f800283a 	ret
   2cad8:	00a00034 	movhi	r2,32768
   2cadc:	10bfffc4 	addi	r2,r2,-1
   2cae0:	2885883a 	add	r2,r5,r2
   2cae4:	f800283a 	ret
   2cae8:	0005883a 	mov	r2,zero
   2caec:	f800283a 	ret
   2caf0:	008104c4 	movi	r2,1043
   2caf4:	1185c83a 	sub	r2,r2,r6
   2caf8:	1884d83a 	srl	r2,r3,r2
   2cafc:	003ff306 	br	2cacc <__fixdfsi+0x4c>

0002cb00 <__floatsidf>:
   2cb00:	defffd04 	addi	sp,sp,-12
   2cb04:	dfc00215 	stw	ra,8(sp)
   2cb08:	dc400115 	stw	r17,4(sp)
   2cb0c:	dc000015 	stw	r16,0(sp)
   2cb10:	20002b26 	beq	r4,zero,2cbc0 <__floatsidf+0xc0>
   2cb14:	2023883a 	mov	r17,r4
   2cb18:	2020d7fa 	srli	r16,r4,31
   2cb1c:	20002d16 	blt	r4,zero,2cbd4 <__floatsidf+0xd4>
   2cb20:	8809883a 	mov	r4,r17
   2cb24:	002cc840 	call	2cc84 <__clzsi2>
   2cb28:	01410784 	movi	r5,1054
   2cb2c:	288bc83a 	sub	r5,r5,r2
   2cb30:	01010cc4 	movi	r4,1075
   2cb34:	2149c83a 	sub	r4,r4,r5
   2cb38:	00c007c4 	movi	r3,31
   2cb3c:	1900160e 	bge	r3,r4,2cb98 <__floatsidf+0x98>
   2cb40:	00c104c4 	movi	r3,1043
   2cb44:	1947c83a 	sub	r3,r3,r5
   2cb48:	88c6983a 	sll	r3,r17,r3
   2cb4c:	00800434 	movhi	r2,16
   2cb50:	10bfffc4 	addi	r2,r2,-1
   2cb54:	1886703a 	and	r3,r3,r2
   2cb58:	2941ffcc 	andi	r5,r5,2047
   2cb5c:	800d883a 	mov	r6,r16
   2cb60:	0005883a 	mov	r2,zero
   2cb64:	280a953a 	slli	r5,r5,20
   2cb68:	31803fcc 	andi	r6,r6,255
   2cb6c:	01000434 	movhi	r4,16
   2cb70:	300c97fa 	slli	r6,r6,31
   2cb74:	213fffc4 	addi	r4,r4,-1
   2cb78:	1906703a 	and	r3,r3,r4
   2cb7c:	1946b03a 	or	r3,r3,r5
   2cb80:	1986b03a 	or	r3,r3,r6
   2cb84:	dfc00217 	ldw	ra,8(sp)
   2cb88:	dc400117 	ldw	r17,4(sp)
   2cb8c:	dc000017 	ldw	r16,0(sp)
   2cb90:	dec00304 	addi	sp,sp,12
   2cb94:	f800283a 	ret
   2cb98:	00c002c4 	movi	r3,11
   2cb9c:	1887c83a 	sub	r3,r3,r2
   2cba0:	88c6d83a 	srl	r3,r17,r3
   2cba4:	8904983a 	sll	r2,r17,r4
   2cba8:	01000434 	movhi	r4,16
   2cbac:	213fffc4 	addi	r4,r4,-1
   2cbb0:	2941ffcc 	andi	r5,r5,2047
   2cbb4:	1906703a 	and	r3,r3,r4
   2cbb8:	800d883a 	mov	r6,r16
   2cbbc:	003fe906 	br	2cb64 <__floatsidf+0x64>
   2cbc0:	000d883a 	mov	r6,zero
   2cbc4:	000b883a 	mov	r5,zero
   2cbc8:	0007883a 	mov	r3,zero
   2cbcc:	0005883a 	mov	r2,zero
   2cbd0:	003fe406 	br	2cb64 <__floatsidf+0x64>
   2cbd4:	0123c83a 	sub	r17,zero,r4
   2cbd8:	003fd106 	br	2cb20 <__floatsidf+0x20>

0002cbdc <__floatunsidf>:
   2cbdc:	defffe04 	addi	sp,sp,-8
   2cbe0:	dc000015 	stw	r16,0(sp)
   2cbe4:	dfc00115 	stw	ra,4(sp)
   2cbe8:	2021883a 	mov	r16,r4
   2cbec:	20002226 	beq	r4,zero,2cc78 <__floatunsidf+0x9c>
   2cbf0:	002cc840 	call	2cc84 <__clzsi2>
   2cbf4:	01010784 	movi	r4,1054
   2cbf8:	2089c83a 	sub	r4,r4,r2
   2cbfc:	01810cc4 	movi	r6,1075
   2cc00:	310dc83a 	sub	r6,r6,r4
   2cc04:	00c007c4 	movi	r3,31
   2cc08:	1980120e 	bge	r3,r6,2cc54 <__floatunsidf+0x78>
   2cc0c:	00c104c4 	movi	r3,1043
   2cc10:	1907c83a 	sub	r3,r3,r4
   2cc14:	80ca983a 	sll	r5,r16,r3
   2cc18:	00800434 	movhi	r2,16
   2cc1c:	10bfffc4 	addi	r2,r2,-1
   2cc20:	2101ffcc 	andi	r4,r4,2047
   2cc24:	0021883a 	mov	r16,zero
   2cc28:	288a703a 	and	r5,r5,r2
   2cc2c:	2008953a 	slli	r4,r4,20
   2cc30:	00c00434 	movhi	r3,16
   2cc34:	18ffffc4 	addi	r3,r3,-1
   2cc38:	28c6703a 	and	r3,r5,r3
   2cc3c:	8005883a 	mov	r2,r16
   2cc40:	1906b03a 	or	r3,r3,r4
   2cc44:	dfc00117 	ldw	ra,4(sp)
   2cc48:	dc000017 	ldw	r16,0(sp)
   2cc4c:	dec00204 	addi	sp,sp,8
   2cc50:	f800283a 	ret
   2cc54:	00c002c4 	movi	r3,11
   2cc58:	188bc83a 	sub	r5,r3,r2
   2cc5c:	814ad83a 	srl	r5,r16,r5
   2cc60:	00c00434 	movhi	r3,16
   2cc64:	18ffffc4 	addi	r3,r3,-1
   2cc68:	81a0983a 	sll	r16,r16,r6
   2cc6c:	2101ffcc 	andi	r4,r4,2047
   2cc70:	28ca703a 	and	r5,r5,r3
   2cc74:	003fed06 	br	2cc2c <__floatunsidf+0x50>
   2cc78:	0009883a 	mov	r4,zero
   2cc7c:	000b883a 	mov	r5,zero
   2cc80:	003fea06 	br	2cc2c <__floatunsidf+0x50>

0002cc84 <__clzsi2>:
   2cc84:	00bfffd4 	movui	r2,65535
   2cc88:	11000536 	bltu	r2,r4,2cca0 <__clzsi2+0x1c>
   2cc8c:	00803fc4 	movi	r2,255
   2cc90:	11000f36 	bltu	r2,r4,2ccd0 <__clzsi2+0x4c>
   2cc94:	00800804 	movi	r2,32
   2cc98:	0007883a 	mov	r3,zero
   2cc9c:	00000506 	br	2ccb4 <__clzsi2+0x30>
   2cca0:	00804034 	movhi	r2,256
   2cca4:	10bfffc4 	addi	r2,r2,-1
   2cca8:	11000c2e 	bgeu	r2,r4,2ccdc <__clzsi2+0x58>
   2ccac:	00800204 	movi	r2,8
   2ccb0:	00c00604 	movi	r3,24
   2ccb4:	20c8d83a 	srl	r4,r4,r3
   2ccb8:	00c00034 	movhi	r3,0
   2ccbc:	18c07204 	addi	r3,r3,456
   2ccc0:	1909883a 	add	r4,r3,r4
   2ccc4:	20c00003 	ldbu	r3,0(r4)
   2ccc8:	10c5c83a 	sub	r2,r2,r3
   2cccc:	f800283a 	ret
   2ccd0:	00800604 	movi	r2,24
   2ccd4:	00c00204 	movi	r3,8
   2ccd8:	003ff606 	br	2ccb4 <__clzsi2+0x30>
   2ccdc:	00800404 	movi	r2,16
   2cce0:	1007883a 	mov	r3,r2
   2cce4:	003ff306 	br	2ccb4 <__clzsi2+0x30>

0002cce8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2cce8:	defffe04 	addi	sp,sp,-8
   2ccec:	dfc00115 	stw	ra,4(sp)
   2ccf0:	df000015 	stw	fp,0(sp)
   2ccf4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ccf8:	d0a00b17 	ldw	r2,-32724(gp)
   2ccfc:	10000326 	beq	r2,zero,2cd0c <alt_get_errno+0x24>
   2cd00:	d0a00b17 	ldw	r2,-32724(gp)
   2cd04:	103ee83a 	callr	r2
   2cd08:	00000106 	br	2cd10 <alt_get_errno+0x28>
   2cd0c:	d0a01804 	addi	r2,gp,-32672
}
   2cd10:	e037883a 	mov	sp,fp
   2cd14:	dfc00117 	ldw	ra,4(sp)
   2cd18:	df000017 	ldw	fp,0(sp)
   2cd1c:	dec00204 	addi	sp,sp,8
   2cd20:	f800283a 	ret

0002cd24 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
   2cd24:	defffb04 	addi	sp,sp,-20
   2cd28:	dfc00415 	stw	ra,16(sp)
   2cd2c:	df000315 	stw	fp,12(sp)
   2cd30:	df000304 	addi	fp,sp,12
   2cd34:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
   2cd38:	e0bfff17 	ldw	r2,-4(fp)
   2cd3c:	10000616 	blt	r2,zero,2cd58 <close+0x34>
   2cd40:	e0bfff17 	ldw	r2,-4(fp)
   2cd44:	10c00324 	muli	r3,r2,12
   2cd48:	00800034 	movhi	r2,0
   2cd4c:	1082f204 	addi	r2,r2,3016
   2cd50:	1885883a 	add	r2,r3,r2
   2cd54:	00000106 	br	2cd5c <close+0x38>
   2cd58:	0005883a 	mov	r2,zero
   2cd5c:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
   2cd60:	e0bffd17 	ldw	r2,-12(fp)
   2cd64:	10001926 	beq	r2,zero,2cdcc <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
   2cd68:	e0bffd17 	ldw	r2,-12(fp)
   2cd6c:	10800017 	ldw	r2,0(r2)
   2cd70:	10800417 	ldw	r2,16(r2)
   2cd74:	10000626 	beq	r2,zero,2cd90 <close+0x6c>
   2cd78:	e0bffd17 	ldw	r2,-12(fp)
   2cd7c:	10800017 	ldw	r2,0(r2)
   2cd80:	10800417 	ldw	r2,16(r2)
   2cd84:	e13ffd17 	ldw	r4,-12(fp)
   2cd88:	103ee83a 	callr	r2
   2cd8c:	00000106 	br	2cd94 <close+0x70>
   2cd90:	0005883a 	mov	r2,zero
   2cd94:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
   2cd98:	e13fff17 	ldw	r4,-4(fp)
   2cd9c:	002d5640 	call	2d564 <alt_release_fd>
    if (rval < 0)
   2cda0:	e0bffe17 	ldw	r2,-8(fp)
   2cda4:	1000070e 	bge	r2,zero,2cdc4 <close+0xa0>
    {
      ALT_ERRNO = -rval;
   2cda8:	002cce80 	call	2cce8 <alt_get_errno>
   2cdac:	1007883a 	mov	r3,r2
   2cdb0:	e0bffe17 	ldw	r2,-8(fp)
   2cdb4:	0085c83a 	sub	r2,zero,r2
   2cdb8:	18800015 	stw	r2,0(r3)
      return -1;
   2cdbc:	00bfffc4 	movi	r2,-1
   2cdc0:	00000706 	br	2cde0 <close+0xbc>
    }
    return 0;
   2cdc4:	0005883a 	mov	r2,zero
   2cdc8:	00000506 	br	2cde0 <close+0xbc>
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2cdcc:	002cce80 	call	2cce8 <alt_get_errno>
   2cdd0:	1007883a 	mov	r3,r2
   2cdd4:	00801444 	movi	r2,81
   2cdd8:	18800015 	stw	r2,0(r3)
    return -1;
   2cddc:	00bfffc4 	movi	r2,-1
  }
}
   2cde0:	e037883a 	mov	sp,fp
   2cde4:	dfc00117 	ldw	ra,4(sp)
   2cde8:	df000017 	ldw	fp,0(sp)
   2cdec:	dec00204 	addi	sp,sp,8
   2cdf0:	f800283a 	ret

0002cdf4 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
   2cdf4:	defffc04 	addi	sp,sp,-16
   2cdf8:	df000315 	stw	fp,12(sp)
   2cdfc:	df000304 	addi	fp,sp,12
   2ce00:	e13ffd15 	stw	r4,-12(fp)
   2ce04:	e17ffe15 	stw	r5,-8(fp)
   2ce08:	e1bfff15 	stw	r6,-4(fp)
  return len;
   2ce0c:	e0bfff17 	ldw	r2,-4(fp)
}
   2ce10:	e037883a 	mov	sp,fp
   2ce14:	df000017 	ldw	fp,0(sp)
   2ce18:	dec00104 	addi	sp,sp,4
   2ce1c:	f800283a 	ret

0002ce20 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2ce20:	defffe04 	addi	sp,sp,-8
   2ce24:	dfc00115 	stw	ra,4(sp)
   2ce28:	df000015 	stw	fp,0(sp)
   2ce2c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2ce30:	d0a00b17 	ldw	r2,-32724(gp)
   2ce34:	10000326 	beq	r2,zero,2ce44 <alt_get_errno+0x24>
   2ce38:	d0a00b17 	ldw	r2,-32724(gp)
   2ce3c:	103ee83a 	callr	r2
   2ce40:	00000106 	br	2ce48 <alt_get_errno+0x28>
   2ce44:	d0a01804 	addi	r2,gp,-32672
}
   2ce48:	e037883a 	mov	sp,fp
   2ce4c:	dfc00117 	ldw	ra,4(sp)
   2ce50:	df000017 	ldw	fp,0(sp)
   2ce54:	dec00204 	addi	sp,sp,8
   2ce58:	f800283a 	ret

0002ce5c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
   2ce5c:	defffb04 	addi	sp,sp,-20
   2ce60:	dfc00415 	stw	ra,16(sp)
   2ce64:	df000315 	stw	fp,12(sp)
   2ce68:	df000304 	addi	fp,sp,12
   2ce6c:	e13ffe15 	stw	r4,-8(fp)
   2ce70:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2ce74:	e0bffe17 	ldw	r2,-8(fp)
   2ce78:	10000616 	blt	r2,zero,2ce94 <fstat+0x38>
   2ce7c:	e0bffe17 	ldw	r2,-8(fp)
   2ce80:	10c00324 	muli	r3,r2,12
   2ce84:	00800034 	movhi	r2,0
   2ce88:	1082f204 	addi	r2,r2,3016
   2ce8c:	1885883a 	add	r2,r3,r2
   2ce90:	00000106 	br	2ce98 <fstat+0x3c>
   2ce94:	0005883a 	mov	r2,zero
   2ce98:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
   2ce9c:	e0bffd17 	ldw	r2,-12(fp)
   2cea0:	10001026 	beq	r2,zero,2cee4 <fstat+0x88>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
   2cea4:	e0bffd17 	ldw	r2,-12(fp)
   2cea8:	10800017 	ldw	r2,0(r2)
   2ceac:	10800817 	ldw	r2,32(r2)
   2ceb0:	10000726 	beq	r2,zero,2ced0 <fstat+0x74>
    {
      return fd->dev->fstat(fd, st);
   2ceb4:	e0bffd17 	ldw	r2,-12(fp)
   2ceb8:	10800017 	ldw	r2,0(r2)
   2cebc:	10800817 	ldw	r2,32(r2)
   2cec0:	e17fff17 	ldw	r5,-4(fp)
   2cec4:	e13ffd17 	ldw	r4,-12(fp)
   2cec8:	103ee83a 	callr	r2
   2cecc:	00000a06 	br	2cef8 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
   2ced0:	e0bfff17 	ldw	r2,-4(fp)
   2ced4:	00c80004 	movi	r3,8192
   2ced8:	10c00115 	stw	r3,4(r2)
      return 0;
   2cedc:	0005883a 	mov	r2,zero
   2cee0:	00000506 	br	2cef8 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2cee4:	002ce200 	call	2ce20 <alt_get_errno>
   2cee8:	1007883a 	mov	r3,r2
   2ceec:	00801444 	movi	r2,81
   2cef0:	18800015 	stw	r2,0(r3)
    return -1;
   2cef4:	00bfffc4 	movi	r2,-1
  }
}
   2cef8:	e037883a 	mov	sp,fp
   2cefc:	dfc00117 	ldw	ra,4(sp)
   2cf00:	df000017 	ldw	fp,0(sp)
   2cf04:	dec00204 	addi	sp,sp,8
   2cf08:	f800283a 	ret

0002cf0c <alt_irq_register>:
 */
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
   2cf0c:	defff004 	addi	sp,sp,-64
   2cf10:	df000f15 	stw	fp,60(sp)
   2cf14:	df000f04 	addi	fp,sp,60
   2cf18:	e13ffd15 	stw	r4,-12(fp)
   2cf1c:	e17ffe15 	stw	r5,-8(fp)
   2cf20:	e1bfff15 	stw	r6,-4(fp)
  int rc = -EINVAL;  
   2cf24:	00bffa84 	movi	r2,-22
   2cf28:	e0bff115 	stw	r2,-60(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2cf2c:	e0bffd17 	ldw	r2,-12(fp)
   2cf30:	10800828 	cmpgeui	r2,r2,32
   2cf34:	1000501e 	bne	r2,zero,2d078 <alt_irq_register+0x16c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2cf38:	0005303a 	rdctl	r2,status
   2cf3c:	e0bff615 	stw	r2,-40(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2cf40:	e0fff617 	ldw	r3,-40(fp)
   2cf44:	00bfff84 	movi	r2,-2
   2cf48:	1884703a 	and	r2,r3,r2
   2cf4c:	1001703a 	wrctl	status,r2
  
  return context;
   2cf50:	e0bff617 	ldw	r2,-40(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all ();
   2cf54:	e0bff315 	stw	r2,-52(fp)

    alt_irq[id].handler = handler;
   2cf58:	00800034 	movhi	r2,0
   2cf5c:	10879404 	addi	r2,r2,7760
   2cf60:	e0fffd17 	ldw	r3,-12(fp)
   2cf64:	180690fa 	slli	r3,r3,3
   2cf68:	10c5883a 	add	r2,r2,r3
   2cf6c:	e0ffff17 	ldw	r3,-4(fp)
   2cf70:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = context;
   2cf74:	00800034 	movhi	r2,0
   2cf78:	10879404 	addi	r2,r2,7760
   2cf7c:	e0fffd17 	ldw	r3,-12(fp)
   2cf80:	180690fa 	slli	r3,r3,3
   2cf84:	10c5883a 	add	r2,r2,r3
   2cf88:	10800104 	addi	r2,r2,4
   2cf8c:	e0fffe17 	ldw	r3,-8(fp)
   2cf90:	10c00015 	stw	r3,0(r2)

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   2cf94:	e0bfff17 	ldw	r2,-4(fp)
   2cf98:	10001926 	beq	r2,zero,2d000 <alt_irq_register+0xf4>
   2cf9c:	e0bffd17 	ldw	r2,-12(fp)
   2cfa0:	e0bff215 	stw	r2,-56(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2cfa4:	0005303a 	rdctl	r2,status
   2cfa8:	e0bff715 	stw	r2,-36(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2cfac:	e0fff717 	ldw	r3,-36(fp)
   2cfb0:	00bfff84 	movi	r2,-2
   2cfb4:	1884703a 	and	r2,r3,r2
   2cfb8:	1001703a 	wrctl	status,r2
  
  return context;
   2cfbc:	e0bff717 	ldw	r2,-36(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2cfc0:	e0bff815 	stw	r2,-32(fp)

  alt_irq_active |= (1 << id);
   2cfc4:	00c00044 	movi	r3,1
   2cfc8:	e0bff217 	ldw	r2,-56(fp)
   2cfcc:	1884983a 	sll	r2,r3,r2
   2cfd0:	1007883a 	mov	r3,r2
   2cfd4:	d0a01917 	ldw	r2,-32668(gp)
   2cfd8:	1884b03a 	or	r2,r3,r2
   2cfdc:	d0a01915 	stw	r2,-32668(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2cfe0:	d0a01917 	ldw	r2,-32668(gp)
   2cfe4:	100170fa 	wrctl	ienable,r2
   2cfe8:	e0bff817 	ldw	r2,-32(fp)
   2cfec:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2cff0:	e0bff917 	ldw	r2,-28(fp)
   2cff4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2cff8:	0005883a 	mov	r2,zero
   2cffc:	00001906 	br	2d064 <alt_irq_register+0x158>
   2d000:	e0bffd17 	ldw	r2,-12(fp)
   2d004:	e0bff415 	stw	r2,-48(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2d008:	0005303a 	rdctl	r2,status
   2d00c:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d010:	e0fffa17 	ldw	r3,-24(fp)
   2d014:	00bfff84 	movi	r2,-2
   2d018:	1884703a 	and	r2,r3,r2
   2d01c:	1001703a 	wrctl	status,r2
  
  return context;
   2d020:	e0bffa17 	ldw	r2,-24(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2d024:	e0bffb15 	stw	r2,-20(fp)

  alt_irq_active &= ~(1 << id);
   2d028:	00c00044 	movi	r3,1
   2d02c:	e0bff417 	ldw	r2,-48(fp)
   2d030:	1884983a 	sll	r2,r3,r2
   2d034:	0084303a 	nor	r2,zero,r2
   2d038:	1007883a 	mov	r3,r2
   2d03c:	d0a01917 	ldw	r2,-32668(gp)
   2d040:	1884703a 	and	r2,r3,r2
   2d044:	d0a01915 	stw	r2,-32668(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2d048:	d0a01917 	ldw	r2,-32668(gp)
   2d04c:	100170fa 	wrctl	ienable,r2
   2d050:	e0bffb17 	ldw	r2,-20(fp)
   2d054:	e0bffc15 	stw	r2,-16(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2d058:	e0bffc17 	ldw	r2,-16(fp)
   2d05c:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2d060:	0005883a 	mov	r2,zero
   2d064:	e0bff115 	stw	r2,-60(fp)
   2d068:	e0bff317 	ldw	r2,-52(fp)
   2d06c:	e0bff515 	stw	r2,-44(fp)
   2d070:	e0bff517 	ldw	r2,-44(fp)
   2d074:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }
  return rc; 
   2d078:	e0bff117 	ldw	r2,-60(fp)
}
   2d07c:	e037883a 	mov	sp,fp
   2d080:	df000017 	ldw	fp,0(sp)
   2d084:	dec00104 	addi	sp,sp,4
   2d088:	f800283a 	ret

0002d08c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d08c:	defffe04 	addi	sp,sp,-8
   2d090:	dfc00115 	stw	ra,4(sp)
   2d094:	df000015 	stw	fp,0(sp)
   2d098:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d09c:	d0a00b17 	ldw	r2,-32724(gp)
   2d0a0:	10000326 	beq	r2,zero,2d0b0 <alt_get_errno+0x24>
   2d0a4:	d0a00b17 	ldw	r2,-32724(gp)
   2d0a8:	103ee83a 	callr	r2
   2d0ac:	00000106 	br	2d0b4 <alt_get_errno+0x28>
   2d0b0:	d0a01804 	addi	r2,gp,-32672
}
   2d0b4:	e037883a 	mov	sp,fp
   2d0b8:	dfc00117 	ldw	ra,4(sp)
   2d0bc:	df000017 	ldw	fp,0(sp)
   2d0c0:	dec00204 	addi	sp,sp,8
   2d0c4:	f800283a 	ret

0002d0c8 <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
   2d0c8:	deffed04 	addi	sp,sp,-76
   2d0cc:	dfc01215 	stw	ra,72(sp)
   2d0d0:	df001115 	stw	fp,68(sp)
   2d0d4:	df001104 	addi	fp,sp,68
   2d0d8:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d0dc:	e0bfff17 	ldw	r2,-4(fp)
   2d0e0:	10000616 	blt	r2,zero,2d0fc <isatty+0x34>
   2d0e4:	e0bfff17 	ldw	r2,-4(fp)
   2d0e8:	10c00324 	muli	r3,r2,12
   2d0ec:	00800034 	movhi	r2,0
   2d0f0:	1082f204 	addi	r2,r2,3016
   2d0f4:	1885883a 	add	r2,r3,r2
   2d0f8:	00000106 	br	2d100 <isatty+0x38>
   2d0fc:	0005883a 	mov	r2,zero
   2d100:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
   2d104:	e0bfef17 	ldw	r2,-68(fp)
   2d108:	10000e26 	beq	r2,zero,2d144 <isatty+0x7c>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
   2d10c:	e0bfef17 	ldw	r2,-68(fp)
   2d110:	10800017 	ldw	r2,0(r2)
   2d114:	10800817 	ldw	r2,32(r2)
   2d118:	1000021e 	bne	r2,zero,2d124 <isatty+0x5c>
    {
      return 1;
   2d11c:	00800044 	movi	r2,1
   2d120:	00000d06 	br	2d158 <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
   2d124:	e0bff004 	addi	r2,fp,-64
   2d128:	100b883a 	mov	r5,r2
   2d12c:	e13fff17 	ldw	r4,-4(fp)
   2d130:	002ce5c0 	call	2ce5c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
   2d134:	e0bff117 	ldw	r2,-60(fp)
   2d138:	10880020 	cmpeqi	r2,r2,8192
   2d13c:	10803fcc 	andi	r2,r2,255
   2d140:	00000506 	br	2d158 <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
   2d144:	002d08c0 	call	2d08c <alt_get_errno>
   2d148:	1007883a 	mov	r3,r2
   2d14c:	00801444 	movi	r2,81
   2d150:	18800015 	stw	r2,0(r3)
    return 0;
   2d154:	0005883a 	mov	r2,zero
  }
}
   2d158:	e037883a 	mov	sp,fp
   2d15c:	dfc00117 	ldw	ra,4(sp)
   2d160:	df000017 	ldw	fp,0(sp)
   2d164:	dec00204 	addi	sp,sp,8
   2d168:	f800283a 	ret

0002d16c <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
   2d16c:	defffc04 	addi	sp,sp,-16
   2d170:	df000315 	stw	fp,12(sp)
   2d174:	df000304 	addi	fp,sp,12
   2d178:	e13ffd15 	stw	r4,-12(fp)
   2d17c:	e17ffe15 	stw	r5,-8(fp)
   2d180:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
   2d184:	e0fffe17 	ldw	r3,-8(fp)
   2d188:	e0bffd17 	ldw	r2,-12(fp)
   2d18c:	18800c26 	beq	r3,r2,2d1c0 <alt_load_section+0x54>
  {
    while( to != end )
   2d190:	00000806 	br	2d1b4 <alt_load_section+0x48>
    {
      *to++ = *from++;
   2d194:	e0bffe17 	ldw	r2,-8(fp)
   2d198:	10c00104 	addi	r3,r2,4
   2d19c:	e0fffe15 	stw	r3,-8(fp)
   2d1a0:	e0fffd17 	ldw	r3,-12(fp)
   2d1a4:	19000104 	addi	r4,r3,4
   2d1a8:	e13ffd15 	stw	r4,-12(fp)
   2d1ac:	18c00017 	ldw	r3,0(r3)
   2d1b0:	10c00015 	stw	r3,0(r2)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
   2d1b4:	e0fffe17 	ldw	r3,-8(fp)
   2d1b8:	e0bfff17 	ldw	r2,-4(fp)
   2d1bc:	18bff51e 	bne	r3,r2,2d194 <alt_load_section+0x28>
    {
      *to++ = *from++;
    }
  }
}
   2d1c0:	0001883a 	nop
   2d1c4:	e037883a 	mov	sp,fp
   2d1c8:	df000017 	ldw	fp,0(sp)
   2d1cc:	dec00104 	addi	sp,sp,4
   2d1d0:	f800283a 	ret

0002d1d4 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   2d1d4:	defffe04 	addi	sp,sp,-8
   2d1d8:	dfc00115 	stw	ra,4(sp)
   2d1dc:	df000015 	stw	fp,0(sp)
   2d1e0:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
   2d1e4:	01800034 	movhi	r6,0
   2d1e8:	31877a04 	addi	r6,r6,7656
   2d1ec:	01400034 	movhi	r5,0
   2d1f0:	2940bf04 	addi	r5,r5,764
   2d1f4:	010000f4 	movhi	r4,3
   2d1f8:	213e6304 	addi	r4,r4,-1652
   2d1fc:	002d16c0 	call	2d16c <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
   2d200:	018000b4 	movhi	r6,2
   2d204:	31809104 	addi	r6,r6,580
   2d208:	014000b4 	movhi	r5,2
   2d20c:	29400804 	addi	r5,r5,32
   2d210:	010000b4 	movhi	r4,2
   2d214:	21000804 	addi	r4,r4,32
   2d218:	002d16c0 	call	2d16c <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
   2d21c:	01800034 	movhi	r6,0
   2d220:	3180bf04 	addi	r6,r6,764
   2d224:	01400034 	movhi	r5,0
   2d228:	29400004 	addi	r5,r5,0
   2d22c:	010000f4 	movhi	r4,3
   2d230:	213da404 	addi	r4,r4,-2416
   2d234:	002d16c0 	call	2d16c <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   2d238:	002e57c0 	call	2e57c <alt_dcache_flush_all>
  alt_icache_flush_all();
   2d23c:	002e7640 	call	2e764 <alt_icache_flush_all>
}
   2d240:	0001883a 	nop
   2d244:	e037883a 	mov	sp,fp
   2d248:	dfc00117 	ldw	ra,4(sp)
   2d24c:	df000017 	ldw	fp,0(sp)
   2d250:	dec00204 	addi	sp,sp,8
   2d254:	f800283a 	ret

0002d258 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d258:	defffe04 	addi	sp,sp,-8
   2d25c:	dfc00115 	stw	ra,4(sp)
   2d260:	df000015 	stw	fp,0(sp)
   2d264:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d268:	d0a00b17 	ldw	r2,-32724(gp)
   2d26c:	10000326 	beq	r2,zero,2d27c <alt_get_errno+0x24>
   2d270:	d0a00b17 	ldw	r2,-32724(gp)
   2d274:	103ee83a 	callr	r2
   2d278:	00000106 	br	2d280 <alt_get_errno+0x28>
   2d27c:	d0a01804 	addi	r2,gp,-32672
}
   2d280:	e037883a 	mov	sp,fp
   2d284:	dfc00117 	ldw	ra,4(sp)
   2d288:	df000017 	ldw	fp,0(sp)
   2d28c:	dec00204 	addi	sp,sp,8
   2d290:	f800283a 	ret

0002d294 <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
   2d294:	defff904 	addi	sp,sp,-28
   2d298:	dfc00615 	stw	ra,24(sp)
   2d29c:	df000515 	stw	fp,20(sp)
   2d2a0:	df000504 	addi	fp,sp,20
   2d2a4:	e13ffd15 	stw	r4,-12(fp)
   2d2a8:	e17ffe15 	stw	r5,-8(fp)
   2d2ac:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
   2d2b0:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d2b4:	e0bffd17 	ldw	r2,-12(fp)
   2d2b8:	10000616 	blt	r2,zero,2d2d4 <lseek+0x40>
   2d2bc:	e0bffd17 	ldw	r2,-12(fp)
   2d2c0:	10c00324 	muli	r3,r2,12
   2d2c4:	00800034 	movhi	r2,0
   2d2c8:	1082f204 	addi	r2,r2,3016
   2d2cc:	1885883a 	add	r2,r3,r2
   2d2d0:	00000106 	br	2d2d8 <lseek+0x44>
   2d2d4:	0005883a 	mov	r2,zero
   2d2d8:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
   2d2dc:	e0bffc17 	ldw	r2,-16(fp)
   2d2e0:	10001026 	beq	r2,zero,2d324 <lseek+0x90>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
   2d2e4:	e0bffc17 	ldw	r2,-16(fp)
   2d2e8:	10800017 	ldw	r2,0(r2)
   2d2ec:	10800717 	ldw	r2,28(r2)
   2d2f0:	10000926 	beq	r2,zero,2d318 <lseek+0x84>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
   2d2f4:	e0bffc17 	ldw	r2,-16(fp)
   2d2f8:	10800017 	ldw	r2,0(r2)
   2d2fc:	10800717 	ldw	r2,28(r2)
   2d300:	e1bfff17 	ldw	r6,-4(fp)
   2d304:	e17ffe17 	ldw	r5,-8(fp)
   2d308:	e13ffc17 	ldw	r4,-16(fp)
   2d30c:	103ee83a 	callr	r2
   2d310:	e0bffb15 	stw	r2,-20(fp)
   2d314:	00000506 	br	2d32c <lseek+0x98>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
   2d318:	00bfde84 	movi	r2,-134
   2d31c:	e0bffb15 	stw	r2,-20(fp)
   2d320:	00000206 	br	2d32c <lseek+0x98>
    }
  }
  else  
  {
    rc = -EBADFD;
   2d324:	00bfebc4 	movi	r2,-81
   2d328:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
   2d32c:	e0bffb17 	ldw	r2,-20(fp)
   2d330:	1000070e 	bge	r2,zero,2d350 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
   2d334:	002d2580 	call	2d258 <alt_get_errno>
   2d338:	1007883a 	mov	r3,r2
   2d33c:	e0bffb17 	ldw	r2,-20(fp)
   2d340:	0085c83a 	sub	r2,zero,r2
   2d344:	18800015 	stw	r2,0(r3)
    rc = -1;
   2d348:	00bfffc4 	movi	r2,-1
   2d34c:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
   2d350:	e0bffb17 	ldw	r2,-20(fp)
}
   2d354:	e037883a 	mov	sp,fp
   2d358:	dfc00117 	ldw	ra,4(sp)
   2d35c:	df000017 	ldw	fp,0(sp)
   2d360:	dec00204 	addi	sp,sp,8
   2d364:	f800283a 	ret

0002d368 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   2d368:	defffd04 	addi	sp,sp,-12
   2d36c:	dfc00215 	stw	ra,8(sp)
   2d370:	df000115 	stw	fp,4(sp)
   2d374:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   2d378:	0009883a 	mov	r4,zero
   2d37c:	002d8100 	call	2d810 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
   2d380:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   2d384:	002d8480 	call	2d848 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
   2d388:	01800034 	movhi	r6,0
   2d38c:	3180b504 	addi	r6,r6,724
   2d390:	01400034 	movhi	r5,0
   2d394:	2940b504 	addi	r5,r5,724
   2d398:	01000034 	movhi	r4,0
   2d39c:	2100b504 	addi	r4,r4,724
   2d3a0:	002eafc0 	call	2eafc <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
   2d3a4:	002e6a40 	call	2e6a4 <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
   2d3a8:	010000f4 	movhi	r4,3
   2d3ac:	2139c104 	addi	r4,r4,-6396
   2d3b0:	002f2fc0 	call	2f2fc <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
   2d3b4:	d0a01a17 	ldw	r2,-32664(gp)
   2d3b8:	d0e01b17 	ldw	r3,-32660(gp)
   2d3bc:	d1201c17 	ldw	r4,-32656(gp)
   2d3c0:	200d883a 	mov	r6,r4
   2d3c4:	180b883a 	mov	r5,r3
   2d3c8:	1009883a 	mov	r4,r2
   2d3cc:	00203980 	call	20398 <main>
   2d3d0:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
   2d3d4:	01000044 	movi	r4,1
   2d3d8:	002cd240 	call	2cd24 <close>
  exit (result);
   2d3dc:	e13fff17 	ldw	r4,-4(fp)
   2d3e0:	002f3100 	call	2f310 <exit>

0002d3e4 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
   2d3e4:	defffe04 	addi	sp,sp,-8
   2d3e8:	df000115 	stw	fp,4(sp)
   2d3ec:	df000104 	addi	fp,sp,4
   2d3f0:	e13fff15 	stw	r4,-4(fp)
}
   2d3f4:	0001883a 	nop
   2d3f8:	e037883a 	mov	sp,fp
   2d3fc:	df000017 	ldw	fp,0(sp)
   2d400:	dec00104 	addi	sp,sp,4
   2d404:	f800283a 	ret

0002d408 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   2d408:	defffe04 	addi	sp,sp,-8
   2d40c:	df000115 	stw	fp,4(sp)
   2d410:	df000104 	addi	fp,sp,4
   2d414:	e13fff15 	stw	r4,-4(fp)
}
   2d418:	0001883a 	nop
   2d41c:	e037883a 	mov	sp,fp
   2d420:	df000017 	ldw	fp,0(sp)
   2d424:	dec00104 	addi	sp,sp,4
   2d428:	f800283a 	ret

0002d42c <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d42c:	defffe04 	addi	sp,sp,-8
   2d430:	dfc00115 	stw	ra,4(sp)
   2d434:	df000015 	stw	fp,0(sp)
   2d438:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d43c:	d0a00b17 	ldw	r2,-32724(gp)
   2d440:	10000326 	beq	r2,zero,2d450 <alt_get_errno+0x24>
   2d444:	d0a00b17 	ldw	r2,-32724(gp)
   2d448:	103ee83a 	callr	r2
   2d44c:	00000106 	br	2d454 <alt_get_errno+0x28>
   2d450:	d0a01804 	addi	r2,gp,-32672
}
   2d454:	e037883a 	mov	sp,fp
   2d458:	dfc00117 	ldw	ra,4(sp)
   2d45c:	df000017 	ldw	fp,0(sp)
   2d460:	dec00204 	addi	sp,sp,8
   2d464:	f800283a 	ret

0002d468 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
   2d468:	defff904 	addi	sp,sp,-28
   2d46c:	dfc00615 	stw	ra,24(sp)
   2d470:	df000515 	stw	fp,20(sp)
   2d474:	df000504 	addi	fp,sp,20
   2d478:	e13ffd15 	stw	r4,-12(fp)
   2d47c:	e17ffe15 	stw	r5,-8(fp)
   2d480:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d484:	e0bffd17 	ldw	r2,-12(fp)
   2d488:	10000616 	blt	r2,zero,2d4a4 <read+0x3c>
   2d48c:	e0bffd17 	ldw	r2,-12(fp)
   2d490:	10c00324 	muli	r3,r2,12
   2d494:	00800034 	movhi	r2,0
   2d498:	1082f204 	addi	r2,r2,3016
   2d49c:	1885883a 	add	r2,r3,r2
   2d4a0:	00000106 	br	2d4a8 <read+0x40>
   2d4a4:	0005883a 	mov	r2,zero
   2d4a8:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d4ac:	e0bffb17 	ldw	r2,-20(fp)
   2d4b0:	10002226 	beq	r2,zero,2d53c <read+0xd4>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2d4b4:	e0bffb17 	ldw	r2,-20(fp)
   2d4b8:	10800217 	ldw	r2,8(r2)
   2d4bc:	108000cc 	andi	r2,r2,3
   2d4c0:	10800060 	cmpeqi	r2,r2,1
   2d4c4:	1000181e 	bne	r2,zero,2d528 <read+0xc0>
        (fd->dev->read))
   2d4c8:	e0bffb17 	ldw	r2,-20(fp)
   2d4cc:	10800017 	ldw	r2,0(r2)
   2d4d0:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
   2d4d4:	10001426 	beq	r2,zero,2d528 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
   2d4d8:	e0bffb17 	ldw	r2,-20(fp)
   2d4dc:	10800017 	ldw	r2,0(r2)
   2d4e0:	10800517 	ldw	r2,20(r2)
   2d4e4:	e0ffff17 	ldw	r3,-4(fp)
   2d4e8:	180d883a 	mov	r6,r3
   2d4ec:	e17ffe17 	ldw	r5,-8(fp)
   2d4f0:	e13ffb17 	ldw	r4,-20(fp)
   2d4f4:	103ee83a 	callr	r2
   2d4f8:	e0bffc15 	stw	r2,-16(fp)
   2d4fc:	e0bffc17 	ldw	r2,-16(fp)
   2d500:	1000070e 	bge	r2,zero,2d520 <read+0xb8>
        {
          ALT_ERRNO = -rval;
   2d504:	002d42c0 	call	2d42c <alt_get_errno>
   2d508:	1007883a 	mov	r3,r2
   2d50c:	e0bffc17 	ldw	r2,-16(fp)
   2d510:	0085c83a 	sub	r2,zero,r2
   2d514:	18800015 	stw	r2,0(r3)
          return -1;
   2d518:	00bfffc4 	movi	r2,-1
   2d51c:	00000c06 	br	2d550 <read+0xe8>
        }
        return rval;
   2d520:	e0bffc17 	ldw	r2,-16(fp)
   2d524:	00000a06 	br	2d550 <read+0xe8>
      }
      else
      {
        ALT_ERRNO = EACCES;
   2d528:	002d42c0 	call	2d42c <alt_get_errno>
   2d52c:	1007883a 	mov	r3,r2
   2d530:	00800344 	movi	r2,13
   2d534:	18800015 	stw	r2,0(r3)
   2d538:	00000406 	br	2d54c <read+0xe4>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
   2d53c:	002d42c0 	call	2d42c <alt_get_errno>
   2d540:	1007883a 	mov	r3,r2
   2d544:	00801444 	movi	r2,81
   2d548:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2d54c:	00bfffc4 	movi	r2,-1
}
   2d550:	e037883a 	mov	sp,fp
   2d554:	dfc00117 	ldw	ra,4(sp)
   2d558:	df000017 	ldw	fp,0(sp)
   2d55c:	dec00204 	addi	sp,sp,8
   2d560:	f800283a 	ret

0002d564 <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
   2d564:	defffe04 	addi	sp,sp,-8
   2d568:	df000115 	stw	fp,4(sp)
   2d56c:	df000104 	addi	fp,sp,4
   2d570:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
   2d574:	e0bfff17 	ldw	r2,-4(fp)
   2d578:	108000d0 	cmplti	r2,r2,3
   2d57c:	10000d1e 	bne	r2,zero,2d5b4 <alt_release_fd+0x50>
  {
    alt_fd_list[fd].fd_flags = 0;
   2d580:	00800034 	movhi	r2,0
   2d584:	1082f204 	addi	r2,r2,3016
   2d588:	e0ffff17 	ldw	r3,-4(fp)
   2d58c:	18c00324 	muli	r3,r3,12
   2d590:	10c5883a 	add	r2,r2,r3
   2d594:	10800204 	addi	r2,r2,8
   2d598:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
   2d59c:	00800034 	movhi	r2,0
   2d5a0:	1082f204 	addi	r2,r2,3016
   2d5a4:	e0ffff17 	ldw	r3,-4(fp)
   2d5a8:	18c00324 	muli	r3,r3,12
   2d5ac:	10c5883a 	add	r2,r2,r3
   2d5b0:	10000015 	stw	zero,0(r2)
  }
}
   2d5b4:	0001883a 	nop
   2d5b8:	e037883a 	mov	sp,fp
   2d5bc:	df000017 	ldw	fp,0(sp)
   2d5c0:	dec00104 	addi	sp,sp,4
   2d5c4:	f800283a 	ret

0002d5c8 <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
   2d5c8:	defff904 	addi	sp,sp,-28
   2d5cc:	df000615 	stw	fp,24(sp)
   2d5d0:	df000604 	addi	fp,sp,24
   2d5d4:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2d5d8:	0005303a 	rdctl	r2,status
   2d5dc:	e0bffe15 	stw	r2,-8(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2d5e0:	e0fffe17 	ldw	r3,-8(fp)
   2d5e4:	00bfff84 	movi	r2,-2
   2d5e8:	1884703a 	and	r2,r3,r2
   2d5ec:	1001703a 	wrctl	status,r2
  
  return context;
   2d5f0:	e0bffe17 	ldw	r2,-8(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
   2d5f4:	e0bffb15 	stw	r2,-20(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   2d5f8:	d0a00d17 	ldw	r2,-32716(gp)
   2d5fc:	10c000c4 	addi	r3,r2,3
   2d600:	00bfff04 	movi	r2,-4
   2d604:	1884703a 	and	r2,r3,r2
   2d608:	d0a00d15 	stw	r2,-32716(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   2d60c:	d0e00d17 	ldw	r3,-32716(gp)
   2d610:	e0bfff17 	ldw	r2,-4(fp)
   2d614:	1887883a 	add	r3,r3,r2
   2d618:	008000b4 	movhi	r2,2
   2d61c:	10b53004 	addi	r2,r2,-11072
   2d620:	10c0062e 	bgeu	r2,r3,2d63c <sbrk+0x74>
   2d624:	e0bffb17 	ldw	r2,-20(fp)
   2d628:	e0bffa15 	stw	r2,-24(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2d62c:	e0bffa17 	ldw	r2,-24(fp)
   2d630:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   2d634:	00bfffc4 	movi	r2,-1
   2d638:	00000b06 	br	2d668 <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
   2d63c:	d0a00d17 	ldw	r2,-32716(gp)
   2d640:	e0bffd15 	stw	r2,-12(fp)
  heap_end += incr; 
   2d644:	d0e00d17 	ldw	r3,-32716(gp)
   2d648:	e0bfff17 	ldw	r2,-4(fp)
   2d64c:	1885883a 	add	r2,r3,r2
   2d650:	d0a00d15 	stw	r2,-32716(gp)
   2d654:	e0bffb17 	ldw	r2,-20(fp)
   2d658:	e0bffc15 	stw	r2,-16(fp)
   2d65c:	e0bffc17 	ldw	r2,-16(fp)
   2d660:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
   2d664:	e0bffd17 	ldw	r2,-12(fp)
} 
   2d668:	e037883a 	mov	sp,fp
   2d66c:	df000017 	ldw	fp,0(sp)
   2d670:	dec00104 	addi	sp,sp,4
   2d674:	f800283a 	ret

0002d678 <usleep>:
#if defined (__GNUC__) && __GNUC__ >= 4
int ALT_USLEEP (useconds_t us)
#else
unsigned int ALT_USLEEP (unsigned int us)
#endif
{
   2d678:	defffd04 	addi	sp,sp,-12
   2d67c:	dfc00215 	stw	ra,8(sp)
   2d680:	df000115 	stw	fp,4(sp)
   2d684:	df000104 	addi	fp,sp,4
   2d688:	e13fff15 	stw	r4,-4(fp)
  return alt_busy_sleep(us);
   2d68c:	e13fff17 	ldw	r4,-4(fp)
   2d690:	002e4240 	call	2e424 <alt_busy_sleep>
}
   2d694:	e037883a 	mov	sp,fp
   2d698:	dfc00117 	ldw	ra,4(sp)
   2d69c:	df000017 	ldw	fp,0(sp)
   2d6a0:	dec00204 	addi	sp,sp,8
   2d6a4:	f800283a 	ret

0002d6a8 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2d6a8:	defffe04 	addi	sp,sp,-8
   2d6ac:	dfc00115 	stw	ra,4(sp)
   2d6b0:	df000015 	stw	fp,0(sp)
   2d6b4:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2d6b8:	d0a00b17 	ldw	r2,-32724(gp)
   2d6bc:	10000326 	beq	r2,zero,2d6cc <alt_get_errno+0x24>
   2d6c0:	d0a00b17 	ldw	r2,-32724(gp)
   2d6c4:	103ee83a 	callr	r2
   2d6c8:	00000106 	br	2d6d0 <alt_get_errno+0x28>
   2d6cc:	d0a01804 	addi	r2,gp,-32672
}
   2d6d0:	e037883a 	mov	sp,fp
   2d6d4:	dfc00117 	ldw	ra,4(sp)
   2d6d8:	df000017 	ldw	fp,0(sp)
   2d6dc:	dec00204 	addi	sp,sp,8
   2d6e0:	f800283a 	ret

0002d6e4 <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
   2d6e4:	defff904 	addi	sp,sp,-28
   2d6e8:	dfc00615 	stw	ra,24(sp)
   2d6ec:	df000515 	stw	fp,20(sp)
   2d6f0:	df000504 	addi	fp,sp,20
   2d6f4:	e13ffd15 	stw	r4,-12(fp)
   2d6f8:	e17ffe15 	stw	r5,-8(fp)
   2d6fc:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
   2d700:	e0bffd17 	ldw	r2,-12(fp)
   2d704:	10000616 	blt	r2,zero,2d720 <write+0x3c>
   2d708:	e0bffd17 	ldw	r2,-12(fp)
   2d70c:	10c00324 	muli	r3,r2,12
   2d710:	00800034 	movhi	r2,0
   2d714:	1082f204 	addi	r2,r2,3016
   2d718:	1885883a 	add	r2,r3,r2
   2d71c:	00000106 	br	2d724 <write+0x40>
   2d720:	0005883a 	mov	r2,zero
   2d724:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
   2d728:	e0bffb17 	ldw	r2,-20(fp)
   2d72c:	10002126 	beq	r2,zero,2d7b4 <write+0xd0>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
   2d730:	e0bffb17 	ldw	r2,-20(fp)
   2d734:	10800217 	ldw	r2,8(r2)
   2d738:	108000cc 	andi	r2,r2,3
   2d73c:	10001826 	beq	r2,zero,2d7a0 <write+0xbc>
   2d740:	e0bffb17 	ldw	r2,-20(fp)
   2d744:	10800017 	ldw	r2,0(r2)
   2d748:	10800617 	ldw	r2,24(r2)
   2d74c:	10001426 	beq	r2,zero,2d7a0 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
   2d750:	e0bffb17 	ldw	r2,-20(fp)
   2d754:	10800017 	ldw	r2,0(r2)
   2d758:	10800617 	ldw	r2,24(r2)
   2d75c:	e0ffff17 	ldw	r3,-4(fp)
   2d760:	180d883a 	mov	r6,r3
   2d764:	e17ffe17 	ldw	r5,-8(fp)
   2d768:	e13ffb17 	ldw	r4,-20(fp)
   2d76c:	103ee83a 	callr	r2
   2d770:	e0bffc15 	stw	r2,-16(fp)
   2d774:	e0bffc17 	ldw	r2,-16(fp)
   2d778:	1000070e 	bge	r2,zero,2d798 <write+0xb4>
      {
        ALT_ERRNO = -rval;
   2d77c:	002d6a80 	call	2d6a8 <alt_get_errno>
   2d780:	1007883a 	mov	r3,r2
   2d784:	e0bffc17 	ldw	r2,-16(fp)
   2d788:	0085c83a 	sub	r2,zero,r2
   2d78c:	18800015 	stw	r2,0(r3)
        return -1;
   2d790:	00bfffc4 	movi	r2,-1
   2d794:	00000c06 	br	2d7c8 <write+0xe4>
      }
      return rval;
   2d798:	e0bffc17 	ldw	r2,-16(fp)
   2d79c:	00000a06 	br	2d7c8 <write+0xe4>
    }
    else
    {
      ALT_ERRNO = EACCES;
   2d7a0:	002d6a80 	call	2d6a8 <alt_get_errno>
   2d7a4:	1007883a 	mov	r3,r2
   2d7a8:	00800344 	movi	r2,13
   2d7ac:	18800015 	stw	r2,0(r3)
   2d7b0:	00000406 	br	2d7c4 <write+0xe0>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
   2d7b4:	002d6a80 	call	2d6a8 <alt_get_errno>
   2d7b8:	1007883a 	mov	r3,r2
   2d7bc:	00801444 	movi	r2,81
   2d7c0:	18800015 	stw	r2,0(r3)
  }
  return -1;
   2d7c4:	00bfffc4 	movi	r2,-1
}
   2d7c8:	e037883a 	mov	sp,fp
   2d7cc:	dfc00117 	ldw	ra,4(sp)
   2d7d0:	df000017 	ldw	fp,0(sp)
   2d7d4:	dec00204 	addi	sp,sp,8
   2d7d8:	f800283a 	ret

0002d7dc <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
   2d7dc:	defffd04 	addi	sp,sp,-12
   2d7e0:	dfc00215 	stw	ra,8(sp)
   2d7e4:	df000115 	stw	fp,4(sp)
   2d7e8:	df000104 	addi	fp,sp,4
   2d7ec:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   2d7f0:	d1600804 	addi	r5,gp,-32736
   2d7f4:	e13fff17 	ldw	r4,-4(fp)
   2d7f8:	002e6000 	call	2e600 <alt_dev_llist_insert>
}
   2d7fc:	e037883a 	mov	sp,fp
   2d800:	dfc00117 	ldw	ra,4(sp)
   2d804:	df000017 	ldw	fp,0(sp)
   2d808:	dec00204 	addi	sp,sp,8
   2d80c:	f800283a 	ret

0002d810 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   2d810:	defffd04 	addi	sp,sp,-12
   2d814:	dfc00215 	stw	ra,8(sp)
   2d818:	df000115 	stw	fp,4(sp)
   2d81c:	df000104 	addi	fp,sp,4
   2d820:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( NIOS2_GEN2_0, nios2_gen2_0);
   2d824:	002ef700 	call	2ef70 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   2d828:	00800044 	movi	r2,1
   2d82c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   2d830:	0001883a 	nop
   2d834:	e037883a 	mov	sp,fp
   2d838:	dfc00117 	ldw	ra,4(sp)
   2d83c:	df000017 	ldw	fp,0(sp)
   2d840:	dec00204 	addi	sp,sp,8
   2d844:	f800283a 	ret

0002d848 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   2d848:	defffe04 	addi	sp,sp,-8
   2d84c:	dfc00115 	stw	ra,4(sp)
   2d850:	df000015 	stw	fp,0(sp)
   2d854:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
   2d858:	000d883a 	mov	r6,zero
   2d85c:	000b883a 	mov	r5,zero
   2d860:	01000034 	movhi	r4,0
   2d864:	21035c04 	addi	r4,r4,3440
   2d868:	002d9f40 	call	2d9f4 <altera_avalon_jtag_uart_init>
   2d86c:	01000034 	movhi	r4,0
   2d870:	21035204 	addi	r4,r4,3400
   2d874:	002d7dc0 	call	2d7dc <alt_dev_reg>
}
   2d878:	0001883a 	nop
   2d87c:	e037883a 	mov	sp,fp
   2d880:	dfc00117 	ldw	ra,4(sp)
   2d884:	df000017 	ldw	fp,0(sp)
   2d888:	dec00204 	addi	sp,sp,8
   2d88c:	f800283a 	ret

0002d890 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
   2d890:	defffa04 	addi	sp,sp,-24
   2d894:	dfc00515 	stw	ra,20(sp)
   2d898:	df000415 	stw	fp,16(sp)
   2d89c:	df000404 	addi	fp,sp,16
   2d8a0:	e13ffd15 	stw	r4,-12(fp)
   2d8a4:	e17ffe15 	stw	r5,-8(fp)
   2d8a8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d8ac:	e0bffd17 	ldw	r2,-12(fp)
   2d8b0:	10800017 	ldw	r2,0(r2)
   2d8b4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
   2d8b8:	e0bffc17 	ldw	r2,-16(fp)
   2d8bc:	10c00a04 	addi	r3,r2,40
   2d8c0:	e0bffd17 	ldw	r2,-12(fp)
   2d8c4:	10800217 	ldw	r2,8(r2)
   2d8c8:	100f883a 	mov	r7,r2
   2d8cc:	e1bfff17 	ldw	r6,-4(fp)
   2d8d0:	e17ffe17 	ldw	r5,-8(fp)
   2d8d4:	1809883a 	mov	r4,r3
   2d8d8:	002deb80 	call	2deb8 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
   2d8dc:	e037883a 	mov	sp,fp
   2d8e0:	dfc00117 	ldw	ra,4(sp)
   2d8e4:	df000017 	ldw	fp,0(sp)
   2d8e8:	dec00204 	addi	sp,sp,8
   2d8ec:	f800283a 	ret

0002d8f0 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
   2d8f0:	defffa04 	addi	sp,sp,-24
   2d8f4:	dfc00515 	stw	ra,20(sp)
   2d8f8:	df000415 	stw	fp,16(sp)
   2d8fc:	df000404 	addi	fp,sp,16
   2d900:	e13ffd15 	stw	r4,-12(fp)
   2d904:	e17ffe15 	stw	r5,-8(fp)
   2d908:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d90c:	e0bffd17 	ldw	r2,-12(fp)
   2d910:	10800017 	ldw	r2,0(r2)
   2d914:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
   2d918:	e0bffc17 	ldw	r2,-16(fp)
   2d91c:	10c00a04 	addi	r3,r2,40
   2d920:	e0bffd17 	ldw	r2,-12(fp)
   2d924:	10800217 	ldw	r2,8(r2)
   2d928:	100f883a 	mov	r7,r2
   2d92c:	e1bfff17 	ldw	r6,-4(fp)
   2d930:	e17ffe17 	ldw	r5,-8(fp)
   2d934:	1809883a 	mov	r4,r3
   2d938:	002e0d40 	call	2e0d4 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
   2d93c:	e037883a 	mov	sp,fp
   2d940:	dfc00117 	ldw	ra,4(sp)
   2d944:	df000017 	ldw	fp,0(sp)
   2d948:	dec00204 	addi	sp,sp,8
   2d94c:	f800283a 	ret

0002d950 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
   2d950:	defffc04 	addi	sp,sp,-16
   2d954:	dfc00315 	stw	ra,12(sp)
   2d958:	df000215 	stw	fp,8(sp)
   2d95c:	df000204 	addi	fp,sp,8
   2d960:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
   2d964:	e0bfff17 	ldw	r2,-4(fp)
   2d968:	10800017 	ldw	r2,0(r2)
   2d96c:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
   2d970:	e0bffe17 	ldw	r2,-8(fp)
   2d974:	10c00a04 	addi	r3,r2,40
   2d978:	e0bfff17 	ldw	r2,-4(fp)
   2d97c:	10800217 	ldw	r2,8(r2)
   2d980:	100b883a 	mov	r5,r2
   2d984:	1809883a 	mov	r4,r3
   2d988:	002dd600 	call	2dd60 <altera_avalon_jtag_uart_close>
}
   2d98c:	e037883a 	mov	sp,fp
   2d990:	dfc00117 	ldw	ra,4(sp)
   2d994:	df000017 	ldw	fp,0(sp)
   2d998:	dec00204 	addi	sp,sp,8
   2d99c:	f800283a 	ret

0002d9a0 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
   2d9a0:	defffa04 	addi	sp,sp,-24
   2d9a4:	dfc00515 	stw	ra,20(sp)
   2d9a8:	df000415 	stw	fp,16(sp)
   2d9ac:	df000404 	addi	fp,sp,16
   2d9b0:	e13ffd15 	stw	r4,-12(fp)
   2d9b4:	e17ffe15 	stw	r5,-8(fp)
   2d9b8:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
   2d9bc:	e0bffd17 	ldw	r2,-12(fp)
   2d9c0:	10800017 	ldw	r2,0(r2)
   2d9c4:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
   2d9c8:	e0bffc17 	ldw	r2,-16(fp)
   2d9cc:	10800a04 	addi	r2,r2,40
   2d9d0:	e1bfff17 	ldw	r6,-4(fp)
   2d9d4:	e17ffe17 	ldw	r5,-8(fp)
   2d9d8:	1009883a 	mov	r4,r2
   2d9dc:	002ddc80 	call	2ddc8 <altera_avalon_jtag_uart_ioctl>
}
   2d9e0:	e037883a 	mov	sp,fp
   2d9e4:	dfc00117 	ldw	ra,4(sp)
   2d9e8:	df000017 	ldw	fp,0(sp)
   2d9ec:	dec00204 	addi	sp,sp,8
   2d9f0:	f800283a 	ret

0002d9f4 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
   2d9f4:	defffa04 	addi	sp,sp,-24
   2d9f8:	dfc00515 	stw	ra,20(sp)
   2d9fc:	df000415 	stw	fp,16(sp)
   2da00:	df000404 	addi	fp,sp,16
   2da04:	e13ffd15 	stw	r4,-12(fp)
   2da08:	e17ffe15 	stw	r5,-8(fp)
   2da0c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2da10:	e0bffd17 	ldw	r2,-12(fp)
   2da14:	00c00044 	movi	r3,1
   2da18:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
   2da1c:	e0bffd17 	ldw	r2,-12(fp)
   2da20:	10800017 	ldw	r2,0(r2)
   2da24:	10800104 	addi	r2,r2,4
   2da28:	1007883a 	mov	r3,r2
   2da2c:	e0bffd17 	ldw	r2,-12(fp)
   2da30:	10800817 	ldw	r2,32(r2)
   2da34:	18800035 	stwio	r2,0(r3)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
   2da38:	e0bffe17 	ldw	r2,-8(fp)
   2da3c:	e0ffff17 	ldw	r3,-4(fp)
   2da40:	d8000015 	stw	zero,0(sp)
   2da44:	e1fffd17 	ldw	r7,-12(fp)
   2da48:	018000f4 	movhi	r6,3
   2da4c:	31b6ad04 	addi	r6,r6,-9548
   2da50:	180b883a 	mov	r5,r3
   2da54:	1009883a 	mov	r4,r2
   2da58:	002e7980 	call	2e798 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
   2da5c:	e0bffd17 	ldw	r2,-12(fp)
   2da60:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
   2da64:	e0bffd17 	ldw	r2,-12(fp)
   2da68:	10800204 	addi	r2,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
   2da6c:	d0e01d17 	ldw	r3,-32652(gp)
   2da70:	e1fffd17 	ldw	r7,-12(fp)
   2da74:	018000f4 	movhi	r6,3
   2da78:	31b73004 	addi	r6,r6,-9024
   2da7c:	180b883a 	mov	r5,r3
   2da80:	1009883a 	mov	r4,r2
   2da84:	002e2f80 	call	2e2f8 <alt_alarm_start>
   2da88:	1000040e 	bge	r2,zero,2da9c <altera_avalon_jtag_uart_init+0xa8>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
   2da8c:	e0fffd17 	ldw	r3,-12(fp)
   2da90:	00a00034 	movhi	r2,32768
   2da94:	10bfffc4 	addi	r2,r2,-1
   2da98:	18800115 	stw	r2,4(r3)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
   2da9c:	0001883a 	nop
   2daa0:	e037883a 	mov	sp,fp
   2daa4:	dfc00117 	ldw	ra,4(sp)
   2daa8:	df000017 	ldw	fp,0(sp)
   2daac:	dec00204 	addi	sp,sp,8
   2dab0:	f800283a 	ret

0002dab4 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
   2dab4:	defff804 	addi	sp,sp,-32
   2dab8:	df000715 	stw	fp,28(sp)
   2dabc:	df000704 	addi	fp,sp,28
   2dac0:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
   2dac4:	e0bfff17 	ldw	r2,-4(fp)
   2dac8:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
   2dacc:	e0bffb17 	ldw	r2,-20(fp)
   2dad0:	10800017 	ldw	r2,0(r2)
   2dad4:	e0bffc15 	stw	r2,-16(fp)
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2dad8:	e0bffc17 	ldw	r2,-16(fp)
   2dadc:	10800104 	addi	r2,r2,4
   2dae0:	10800037 	ldwio	r2,0(r2)
   2dae4:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
   2dae8:	e0bffd17 	ldw	r2,-12(fp)
   2daec:	1080c00c 	andi	r2,r2,768
   2daf0:	10006d26 	beq	r2,zero,2dca8 <altera_avalon_jtag_uart_irq+0x1f4>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
   2daf4:	e0bffd17 	ldw	r2,-12(fp)
   2daf8:	1080400c 	andi	r2,r2,256
   2dafc:	10003526 	beq	r2,zero,2dbd4 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
   2db00:	00800074 	movhi	r2,1
   2db04:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2db08:	e0bffb17 	ldw	r2,-20(fp)
   2db0c:	10800a17 	ldw	r2,40(r2)
   2db10:	10800044 	addi	r2,r2,1
   2db14:	1081ffcc 	andi	r2,r2,2047
   2db18:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
   2db1c:	e0bffb17 	ldw	r2,-20(fp)
   2db20:	10c00b17 	ldw	r3,44(r2)
   2db24:	e0bffe17 	ldw	r2,-8(fp)
   2db28:	18801526 	beq	r3,r2,2db80 <altera_avalon_jtag_uart_irq+0xcc>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   2db2c:	e0bffc17 	ldw	r2,-16(fp)
   2db30:	10800037 	ldwio	r2,0(r2)
   2db34:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
   2db38:	e0bff917 	ldw	r2,-28(fp)
   2db3c:	10a0000c 	andi	r2,r2,32768
   2db40:	10001126 	beq	r2,zero,2db88 <altera_avalon_jtag_uart_irq+0xd4>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   2db44:	e0bffb17 	ldw	r2,-20(fp)
   2db48:	10800a17 	ldw	r2,40(r2)
   2db4c:	e0fff917 	ldw	r3,-28(fp)
   2db50:	1809883a 	mov	r4,r3
   2db54:	e0fffb17 	ldw	r3,-20(fp)
   2db58:	1885883a 	add	r2,r3,r2
   2db5c:	10800e04 	addi	r2,r2,56
   2db60:	11000005 	stb	r4,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2db64:	e0bffb17 	ldw	r2,-20(fp)
   2db68:	10800a17 	ldw	r2,40(r2)
   2db6c:	10800044 	addi	r2,r2,1
   2db70:	10c1ffcc 	andi	r3,r2,2047
   2db74:	e0bffb17 	ldw	r2,-20(fp)
   2db78:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
   2db7c:	003fe206 	br	2db08 <altera_avalon_jtag_uart_irq+0x54>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
   2db80:	0001883a 	nop
   2db84:	00000106 	br	2db8c <altera_avalon_jtag_uart_irq+0xd8>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
   2db88:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
   2db8c:	e0bff917 	ldw	r2,-28(fp)
   2db90:	10bfffec 	andhi	r2,r2,65535
   2db94:	10000f26 	beq	r2,zero,2dbd4 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2db98:	e0bffb17 	ldw	r2,-20(fp)
   2db9c:	10c00817 	ldw	r3,32(r2)
   2dba0:	00bfff84 	movi	r2,-2
   2dba4:	1886703a 	and	r3,r3,r2
   2dba8:	e0bffb17 	ldw	r2,-20(fp)
   2dbac:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
   2dbb0:	e0bffc17 	ldw	r2,-16(fp)
   2dbb4:	10800104 	addi	r2,r2,4
   2dbb8:	1007883a 	mov	r3,r2
   2dbbc:	e0bffb17 	ldw	r2,-20(fp)
   2dbc0:	10800817 	ldw	r2,32(r2)
   2dbc4:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2dbc8:	e0bffc17 	ldw	r2,-16(fp)
   2dbcc:	10800104 	addi	r2,r2,4
   2dbd0:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
   2dbd4:	e0bffd17 	ldw	r2,-12(fp)
   2dbd8:	1080800c 	andi	r2,r2,512
   2dbdc:	103fbe26 	beq	r2,zero,2dad8 <altera_avalon_jtag_uart_irq+0x24>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
   2dbe0:	e0bffd17 	ldw	r2,-12(fp)
   2dbe4:	1004d43a 	srli	r2,r2,16
   2dbe8:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
   2dbec:	00001406 	br	2dc40 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
   2dbf0:	e0bffc17 	ldw	r2,-16(fp)
   2dbf4:	e0fffb17 	ldw	r3,-20(fp)
   2dbf8:	18c00d17 	ldw	r3,52(r3)
   2dbfc:	e13ffb17 	ldw	r4,-20(fp)
   2dc00:	20c7883a 	add	r3,r4,r3
   2dc04:	18c20e04 	addi	r3,r3,2104
   2dc08:	18c00003 	ldbu	r3,0(r3)
   2dc0c:	18c03fcc 	andi	r3,r3,255
   2dc10:	18c0201c 	xori	r3,r3,128
   2dc14:	18ffe004 	addi	r3,r3,-128
   2dc18:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2dc1c:	e0bffb17 	ldw	r2,-20(fp)
   2dc20:	10800d17 	ldw	r2,52(r2)
   2dc24:	10800044 	addi	r2,r2,1
   2dc28:	10c1ffcc 	andi	r3,r2,2047
   2dc2c:	e0bffb17 	ldw	r2,-20(fp)
   2dc30:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
   2dc34:	e0bffa17 	ldw	r2,-24(fp)
   2dc38:	10bfffc4 	addi	r2,r2,-1
   2dc3c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
   2dc40:	e0bffa17 	ldw	r2,-24(fp)
   2dc44:	10000526 	beq	r2,zero,2dc5c <altera_avalon_jtag_uart_irq+0x1a8>
   2dc48:	e0bffb17 	ldw	r2,-20(fp)
   2dc4c:	10c00d17 	ldw	r3,52(r2)
   2dc50:	e0bffb17 	ldw	r2,-20(fp)
   2dc54:	10800c17 	ldw	r2,48(r2)
   2dc58:	18bfe51e 	bne	r3,r2,2dbf0 <altera_avalon_jtag_uart_irq+0x13c>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
   2dc5c:	e0bffa17 	ldw	r2,-24(fp)
   2dc60:	103f9d26 	beq	r2,zero,2dad8 <altera_avalon_jtag_uart_irq+0x24>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2dc64:	e0bffb17 	ldw	r2,-20(fp)
   2dc68:	10c00817 	ldw	r3,32(r2)
   2dc6c:	00bfff44 	movi	r2,-3
   2dc70:	1886703a 	and	r3,r3,r2
   2dc74:	e0bffb17 	ldw	r2,-20(fp)
   2dc78:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2dc7c:	e0bffb17 	ldw	r2,-20(fp)
   2dc80:	10800017 	ldw	r2,0(r2)
   2dc84:	10800104 	addi	r2,r2,4
   2dc88:	1007883a 	mov	r3,r2
   2dc8c:	e0bffb17 	ldw	r2,-20(fp)
   2dc90:	10800817 	ldw	r2,32(r2)
   2dc94:	18800035 	stwio	r2,0(r3)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
   2dc98:	e0bffc17 	ldw	r2,-16(fp)
   2dc9c:	10800104 	addi	r2,r2,4
   2dca0:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
   2dca4:	003f8c06 	br	2dad8 <altera_avalon_jtag_uart_irq+0x24>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
   2dca8:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
   2dcac:	0001883a 	nop
   2dcb0:	e037883a 	mov	sp,fp
   2dcb4:	df000017 	ldw	fp,0(sp)
   2dcb8:	dec00104 	addi	sp,sp,4
   2dcbc:	f800283a 	ret

0002dcc0 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
   2dcc0:	defff804 	addi	sp,sp,-32
   2dcc4:	df000715 	stw	fp,28(sp)
   2dcc8:	df000704 	addi	fp,sp,28
   2dccc:	e13ffb15 	stw	r4,-20(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
   2dcd0:	e0bffb17 	ldw	r2,-20(fp)
   2dcd4:	e0bff915 	stw	r2,-28(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
   2dcd8:	e0bff917 	ldw	r2,-28(fp)
   2dcdc:	10800017 	ldw	r2,0(r2)
   2dce0:	10800104 	addi	r2,r2,4
   2dce4:	10800037 	ldwio	r2,0(r2)
   2dce8:	e0bffa15 	stw	r2,-24(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
   2dcec:	e0bffa17 	ldw	r2,-24(fp)
   2dcf0:	1081000c 	andi	r2,r2,1024
   2dcf4:	10000b26 	beq	r2,zero,2dd24 <altera_avalon_jtag_uart_timeout+0x64>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
   2dcf8:	e0bff917 	ldw	r2,-28(fp)
   2dcfc:	10800017 	ldw	r2,0(r2)
   2dd00:	10800104 	addi	r2,r2,4
   2dd04:	1007883a 	mov	r3,r2
   2dd08:	e0bff917 	ldw	r2,-28(fp)
   2dd0c:	10800817 	ldw	r2,32(r2)
   2dd10:	10810014 	ori	r2,r2,1024
   2dd14:	18800035 	stwio	r2,0(r3)
    sp->host_inactive = 0;
   2dd18:	e0bff917 	ldw	r2,-28(fp)
   2dd1c:	10000915 	stw	zero,36(r2)
   2dd20:	00000a06 	br	2dd4c <altera_avalon_jtag_uart_timeout+0x8c>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
   2dd24:	e0bff917 	ldw	r2,-28(fp)
   2dd28:	10c00917 	ldw	r3,36(r2)
   2dd2c:	00a00034 	movhi	r2,32768
   2dd30:	10bfff04 	addi	r2,r2,-4
   2dd34:	10c00536 	bltu	r2,r3,2dd4c <altera_avalon_jtag_uart_timeout+0x8c>
    sp->host_inactive++;
   2dd38:	e0bff917 	ldw	r2,-28(fp)
   2dd3c:	10800917 	ldw	r2,36(r2)
   2dd40:	10c00044 	addi	r3,r2,1
   2dd44:	e0bff917 	ldw	r2,-28(fp)
   2dd48:	10c00915 	stw	r3,36(r2)
   2dd4c:	d0a01d17 	ldw	r2,-32652(gp)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
   2dd50:	e037883a 	mov	sp,fp
   2dd54:	df000017 	ldw	fp,0(sp)
   2dd58:	dec00104 	addi	sp,sp,4
   2dd5c:	f800283a 	ret

0002dd60 <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
   2dd60:	defffd04 	addi	sp,sp,-12
   2dd64:	df000215 	stw	fp,8(sp)
   2dd68:	df000204 	addi	fp,sp,8
   2dd6c:	e13ffe15 	stw	r4,-8(fp)
   2dd70:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2dd74:	00000506 	br	2dd8c <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
   2dd78:	e0bfff17 	ldw	r2,-4(fp)
   2dd7c:	1090000c 	andi	r2,r2,16384
   2dd80:	10000226 	beq	r2,zero,2dd8c <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
   2dd84:	00bffd44 	movi	r2,-11
   2dd88:	00000b06 	br	2ddb8 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
   2dd8c:	e0bffe17 	ldw	r2,-8(fp)
   2dd90:	10c00d17 	ldw	r3,52(r2)
   2dd94:	e0bffe17 	ldw	r2,-8(fp)
   2dd98:	10800c17 	ldw	r2,48(r2)
   2dd9c:	18800526 	beq	r3,r2,2ddb4 <altera_avalon_jtag_uart_close+0x54>
   2dda0:	e0bffe17 	ldw	r2,-8(fp)
   2dda4:	10c00917 	ldw	r3,36(r2)
   2dda8:	e0bffe17 	ldw	r2,-8(fp)
   2ddac:	10800117 	ldw	r2,4(r2)
   2ddb0:	18bff136 	bltu	r3,r2,2dd78 <altera_avalon_jtag_uart_close+0x18>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
   2ddb4:	0005883a 	mov	r2,zero
}
   2ddb8:	e037883a 	mov	sp,fp
   2ddbc:	df000017 	ldw	fp,0(sp)
   2ddc0:	dec00104 	addi	sp,sp,4
   2ddc4:	f800283a 	ret

0002ddc8 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
   2ddc8:	defffa04 	addi	sp,sp,-24
   2ddcc:	df000515 	stw	fp,20(sp)
   2ddd0:	df000504 	addi	fp,sp,20
   2ddd4:	e13ffd15 	stw	r4,-12(fp)
   2ddd8:	e17ffe15 	stw	r5,-8(fp)
   2dddc:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
   2dde0:	00bff9c4 	movi	r2,-25
   2dde4:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
   2dde8:	e0bffe17 	ldw	r2,-8(fp)
   2ddec:	10da8060 	cmpeqi	r3,r2,27137
   2ddf0:	1800031e 	bne	r3,zero,2de00 <altera_avalon_jtag_uart_ioctl+0x38>
   2ddf4:	109a80a0 	cmpeqi	r2,r2,27138
   2ddf8:	1000181e 	bne	r2,zero,2de5c <altera_avalon_jtag_uart_ioctl+0x94>
      rc = 0;
    }
    break;

  default:
    break;
   2ddfc:	00002906 	br	2dea4 <altera_avalon_jtag_uart_ioctl+0xdc>

  switch (req)
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
   2de00:	e0bffd17 	ldw	r2,-12(fp)
   2de04:	10c00117 	ldw	r3,4(r2)
   2de08:	00a00034 	movhi	r2,32768
   2de0c:	10bfffc4 	addi	r2,r2,-1
   2de10:	18802126 	beq	r3,r2,2de98 <altera_avalon_jtag_uart_ioctl+0xd0>
    {
      int timeout = *((int *)arg);
   2de14:	e0bfff17 	ldw	r2,-4(fp)
   2de18:	10800017 	ldw	r2,0(r2)
   2de1c:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
   2de20:	e0bffc17 	ldw	r2,-16(fp)
   2de24:	10800090 	cmplti	r2,r2,2
   2de28:	1000061e 	bne	r2,zero,2de44 <altera_avalon_jtag_uart_ioctl+0x7c>
   2de2c:	e0fffc17 	ldw	r3,-16(fp)
   2de30:	00a00034 	movhi	r2,32768
   2de34:	10bfffc4 	addi	r2,r2,-1
   2de38:	18800226 	beq	r3,r2,2de44 <altera_avalon_jtag_uart_ioctl+0x7c>
   2de3c:	e0bffc17 	ldw	r2,-16(fp)
   2de40:	00000206 	br	2de4c <altera_avalon_jtag_uart_ioctl+0x84>
   2de44:	00a00034 	movhi	r2,32768
   2de48:	10bfff84 	addi	r2,r2,-2
   2de4c:	e0fffd17 	ldw	r3,-12(fp)
   2de50:	18800115 	stw	r2,4(r3)
      rc = 0;
   2de54:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2de58:	00000f06 	br	2de98 <altera_avalon_jtag_uart_ioctl+0xd0>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
   2de5c:	e0bffd17 	ldw	r2,-12(fp)
   2de60:	10c00117 	ldw	r3,4(r2)
   2de64:	00a00034 	movhi	r2,32768
   2de68:	10bfffc4 	addi	r2,r2,-1
   2de6c:	18800c26 	beq	r3,r2,2dea0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
   2de70:	e0bffd17 	ldw	r2,-12(fp)
   2de74:	10c00917 	ldw	r3,36(r2)
   2de78:	e0bffd17 	ldw	r2,-12(fp)
   2de7c:	10800117 	ldw	r2,4(r2)
   2de80:	1885803a 	cmpltu	r2,r3,r2
   2de84:	10c03fcc 	andi	r3,r2,255
   2de88:	e0bfff17 	ldw	r2,-4(fp)
   2de8c:	10c00015 	stw	r3,0(r2)
      rc = 0;
   2de90:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
   2de94:	00000206 	br	2dea0 <altera_avalon_jtag_uart_ioctl+0xd8>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
   2de98:	0001883a 	nop
   2de9c:	00000106 	br	2dea4 <altera_avalon_jtag_uart_ioctl+0xdc>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
   2dea0:	0001883a 	nop

  default:
    break;
  }

  return rc;
   2dea4:	e0bffb17 	ldw	r2,-20(fp)
}
   2dea8:	e037883a 	mov	sp,fp
   2deac:	df000017 	ldw	fp,0(sp)
   2deb0:	dec00104 	addi	sp,sp,4
   2deb4:	f800283a 	ret

0002deb8 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
   2deb8:	defff304 	addi	sp,sp,-52
   2debc:	dfc00c15 	stw	ra,48(sp)
   2dec0:	df000b15 	stw	fp,44(sp)
   2dec4:	df000b04 	addi	fp,sp,44
   2dec8:	e13ffc15 	stw	r4,-16(fp)
   2decc:	e17ffd15 	stw	r5,-12(fp)
   2ded0:	e1bffe15 	stw	r6,-8(fp)
   2ded4:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
   2ded8:	e0bffd17 	ldw	r2,-12(fp)
   2dedc:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2dee0:	00004706 	br	2e000 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
   2dee4:	e0bffc17 	ldw	r2,-16(fp)
   2dee8:	10800a17 	ldw	r2,40(r2)
   2deec:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
   2def0:	e0bffc17 	ldw	r2,-16(fp)
   2def4:	10800b17 	ldw	r2,44(r2)
   2def8:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
   2defc:	e0fff717 	ldw	r3,-36(fp)
   2df00:	e0bff817 	ldw	r2,-32(fp)
   2df04:	18800536 	bltu	r3,r2,2df1c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
   2df08:	e0fff717 	ldw	r3,-36(fp)
   2df0c:	e0bff817 	ldw	r2,-32(fp)
   2df10:	1885c83a 	sub	r2,r3,r2
   2df14:	e0bff615 	stw	r2,-40(fp)
   2df18:	00000406 	br	2df2c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
   2df1c:	00c20004 	movi	r3,2048
   2df20:	e0bff817 	ldw	r2,-32(fp)
   2df24:	1885c83a 	sub	r2,r3,r2
   2df28:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2df2c:	e0bff617 	ldw	r2,-40(fp)
   2df30:	10001e26 	beq	r2,zero,2dfac <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
   2df34:	e0fffe17 	ldw	r3,-8(fp)
   2df38:	e0bff617 	ldw	r2,-40(fp)
   2df3c:	1880022e 	bgeu	r3,r2,2df48 <altera_avalon_jtag_uart_read+0x90>
        n = space;
   2df40:	e0bffe17 	ldw	r2,-8(fp)
   2df44:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
   2df48:	e0bffc17 	ldw	r2,-16(fp)
   2df4c:	10c00e04 	addi	r3,r2,56
   2df50:	e0bff817 	ldw	r2,-32(fp)
   2df54:	1885883a 	add	r2,r3,r2
   2df58:	e1bff617 	ldw	r6,-40(fp)
   2df5c:	100b883a 	mov	r5,r2
   2df60:	e13ff517 	ldw	r4,-44(fp)
   2df64:	00259400 	call	25940 <memcpy>
      ptr   += n;
   2df68:	e0fff517 	ldw	r3,-44(fp)
   2df6c:	e0bff617 	ldw	r2,-40(fp)
   2df70:	1885883a 	add	r2,r3,r2
   2df74:	e0bff515 	stw	r2,-44(fp)
      space -= n;
   2df78:	e0fffe17 	ldw	r3,-8(fp)
   2df7c:	e0bff617 	ldw	r2,-40(fp)
   2df80:	1885c83a 	sub	r2,r3,r2
   2df84:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2df88:	e0fff817 	ldw	r3,-32(fp)
   2df8c:	e0bff617 	ldw	r2,-40(fp)
   2df90:	1885883a 	add	r2,r3,r2
   2df94:	10c1ffcc 	andi	r3,r2,2047
   2df98:	e0bffc17 	ldw	r2,-16(fp)
   2df9c:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
   2dfa0:	e0bffe17 	ldw	r2,-8(fp)
   2dfa4:	00bfcf16 	blt	zero,r2,2dee4 <altera_avalon_jtag_uart_read+0x2c>
   2dfa8:	00000106 	br	2dfb0 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
   2dfac:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
   2dfb0:	e0fff517 	ldw	r3,-44(fp)
   2dfb4:	e0bffd17 	ldw	r2,-12(fp)
   2dfb8:	1880141e 	bne	r3,r2,2e00c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
   2dfbc:	e0bfff17 	ldw	r2,-4(fp)
   2dfc0:	1090000c 	andi	r2,r2,16384
   2dfc4:	1000131e 	bne	r2,zero,2e014 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
   2dfc8:	0001883a 	nop
   2dfcc:	e0bffc17 	ldw	r2,-16(fp)
   2dfd0:	10c00a17 	ldw	r3,40(r2)
   2dfd4:	e0bff717 	ldw	r2,-36(fp)
   2dfd8:	1880051e 	bne	r3,r2,2dff0 <altera_avalon_jtag_uart_read+0x138>
   2dfdc:	e0bffc17 	ldw	r2,-16(fp)
   2dfe0:	10c00917 	ldw	r3,36(r2)
   2dfe4:	e0bffc17 	ldw	r2,-16(fp)
   2dfe8:	10800117 	ldw	r2,4(r2)
   2dfec:	18bff736 	bltu	r3,r2,2dfcc <altera_avalon_jtag_uart_read+0x114>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
   2dff0:	e0bffc17 	ldw	r2,-16(fp)
   2dff4:	10c00a17 	ldw	r3,40(r2)
   2dff8:	e0bff717 	ldw	r2,-36(fp)
   2dffc:	18800726 	beq	r3,r2,2e01c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
   2e000:	e0bffe17 	ldw	r2,-8(fp)
   2e004:	00bfb716 	blt	zero,r2,2dee4 <altera_avalon_jtag_uart_read+0x2c>
   2e008:	00000506 	br	2e020 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
   2e00c:	0001883a 	nop
   2e010:	00000306 	br	2e020 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
   2e014:	0001883a 	nop
   2e018:	00000106 	br	2e020 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
   2e01c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
   2e020:	e0fff517 	ldw	r3,-44(fp)
   2e024:	e0bffd17 	ldw	r2,-12(fp)
   2e028:	18801826 	beq	r3,r2,2e08c <altera_avalon_jtag_uart_read+0x1d4>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e02c:	0005303a 	rdctl	r2,status
   2e030:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e034:	e0fffb17 	ldw	r3,-20(fp)
   2e038:	00bfff84 	movi	r2,-2
   2e03c:	1884703a 	and	r2,r3,r2
   2e040:	1001703a 	wrctl	status,r2
  
  return context;
   2e044:	e0bffb17 	ldw	r2,-20(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
   2e048:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
   2e04c:	e0bffc17 	ldw	r2,-16(fp)
   2e050:	10800817 	ldw	r2,32(r2)
   2e054:	10c00054 	ori	r3,r2,1
   2e058:	e0bffc17 	ldw	r2,-16(fp)
   2e05c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e060:	e0bffc17 	ldw	r2,-16(fp)
   2e064:	10800017 	ldw	r2,0(r2)
   2e068:	10800104 	addi	r2,r2,4
   2e06c:	1007883a 	mov	r3,r2
   2e070:	e0bffc17 	ldw	r2,-16(fp)
   2e074:	10800817 	ldw	r2,32(r2)
   2e078:	18800035 	stwio	r2,0(r3)
   2e07c:	e0bffa17 	ldw	r2,-24(fp)
   2e080:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e084:	e0bff917 	ldw	r2,-28(fp)
   2e088:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
   2e08c:	e0fff517 	ldw	r3,-44(fp)
   2e090:	e0bffd17 	ldw	r2,-12(fp)
   2e094:	18800426 	beq	r3,r2,2e0a8 <altera_avalon_jtag_uart_read+0x1f0>
    return ptr - buffer;
   2e098:	e0fff517 	ldw	r3,-44(fp)
   2e09c:	e0bffd17 	ldw	r2,-12(fp)
   2e0a0:	1885c83a 	sub	r2,r3,r2
   2e0a4:	00000606 	br	2e0c0 <altera_avalon_jtag_uart_read+0x208>
  else if (flags & O_NONBLOCK)
   2e0a8:	e0bfff17 	ldw	r2,-4(fp)
   2e0ac:	1090000c 	andi	r2,r2,16384
   2e0b0:	10000226 	beq	r2,zero,2e0bc <altera_avalon_jtag_uart_read+0x204>
    return -EWOULDBLOCK;
   2e0b4:	00bffd44 	movi	r2,-11
   2e0b8:	00000106 	br	2e0c0 <altera_avalon_jtag_uart_read+0x208>
  else
    return -EIO;
   2e0bc:	00bffec4 	movi	r2,-5
}
   2e0c0:	e037883a 	mov	sp,fp
   2e0c4:	dfc00117 	ldw	ra,4(sp)
   2e0c8:	df000017 	ldw	fp,0(sp)
   2e0cc:	dec00204 	addi	sp,sp,8
   2e0d0:	f800283a 	ret

0002e0d4 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   2e0d4:	defff304 	addi	sp,sp,-52
   2e0d8:	dfc00c15 	stw	ra,48(sp)
   2e0dc:	df000b15 	stw	fp,44(sp)
   2e0e0:	df000b04 	addi	fp,sp,44
   2e0e4:	e13ffc15 	stw	r4,-16(fp)
   2e0e8:	e17ffd15 	stw	r5,-12(fp)
   2e0ec:	e1bffe15 	stw	r6,-8(fp)
   2e0f0:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
   2e0f4:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
   2e0f8:	e0bffd17 	ldw	r2,-12(fp)
   2e0fc:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e100:	00003706 	br	2e1e0 <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
   2e104:	e0bffc17 	ldw	r2,-16(fp)
   2e108:	10800c17 	ldw	r2,48(r2)
   2e10c:	e0bff915 	stw	r2,-28(fp)
      out = sp->tx_out;
   2e110:	e0bffc17 	ldw	r2,-16(fp)
   2e114:	10800d17 	ldw	r2,52(r2)
   2e118:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
   2e11c:	e0fff917 	ldw	r3,-28(fp)
   2e120:	e0bff517 	ldw	r2,-44(fp)
   2e124:	1880062e 	bgeu	r3,r2,2e140 <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
   2e128:	e0fff517 	ldw	r3,-44(fp)
   2e12c:	e0bff917 	ldw	r2,-28(fp)
   2e130:	1885c83a 	sub	r2,r3,r2
   2e134:	10bfffc4 	addi	r2,r2,-1
   2e138:	e0bff615 	stw	r2,-40(fp)
   2e13c:	00000b06 	br	2e16c <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
   2e140:	e0bff517 	ldw	r2,-44(fp)
   2e144:	10000526 	beq	r2,zero,2e15c <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
   2e148:	00c20004 	movi	r3,2048
   2e14c:	e0bff917 	ldw	r2,-28(fp)
   2e150:	1885c83a 	sub	r2,r3,r2
   2e154:	e0bff615 	stw	r2,-40(fp)
   2e158:	00000406 	br	2e16c <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
   2e15c:	00c1ffc4 	movi	r3,2047
   2e160:	e0bff917 	ldw	r2,-28(fp)
   2e164:	1885c83a 	sub	r2,r3,r2
   2e168:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
   2e16c:	e0bff617 	ldw	r2,-40(fp)
   2e170:	10001e26 	beq	r2,zero,2e1ec <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
   2e174:	e0fffe17 	ldw	r3,-8(fp)
   2e178:	e0bff617 	ldw	r2,-40(fp)
   2e17c:	1880022e 	bgeu	r3,r2,2e188 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
   2e180:	e0bffe17 	ldw	r2,-8(fp)
   2e184:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
   2e188:	e0bffc17 	ldw	r2,-16(fp)
   2e18c:	10c20e04 	addi	r3,r2,2104
   2e190:	e0bff917 	ldw	r2,-28(fp)
   2e194:	1885883a 	add	r2,r3,r2
   2e198:	e1bff617 	ldw	r6,-40(fp)
   2e19c:	e17ffd17 	ldw	r5,-12(fp)
   2e1a0:	1009883a 	mov	r4,r2
   2e1a4:	00259400 	call	25940 <memcpy>
      ptr   += n;
   2e1a8:	e0fffd17 	ldw	r3,-12(fp)
   2e1ac:	e0bff617 	ldw	r2,-40(fp)
   2e1b0:	1885883a 	add	r2,r3,r2
   2e1b4:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
   2e1b8:	e0fffe17 	ldw	r3,-8(fp)
   2e1bc:	e0bff617 	ldw	r2,-40(fp)
   2e1c0:	1885c83a 	sub	r2,r3,r2
   2e1c4:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
   2e1c8:	e0fff917 	ldw	r3,-28(fp)
   2e1cc:	e0bff617 	ldw	r2,-40(fp)
   2e1d0:	1885883a 	add	r2,r3,r2
   2e1d4:	10c1ffcc 	andi	r3,r2,2047
   2e1d8:	e0bffc17 	ldw	r2,-16(fp)
   2e1dc:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
   2e1e0:	e0bffe17 	ldw	r2,-8(fp)
   2e1e4:	00bfc716 	blt	zero,r2,2e104 <altera_avalon_jtag_uart_write+0x30>
   2e1e8:	00000106 	br	2e1f0 <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
   2e1ec:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e1f0:	0005303a 	rdctl	r2,status
   2e1f4:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e1f8:	e0fffb17 	ldw	r3,-20(fp)
   2e1fc:	00bfff84 	movi	r2,-2
   2e200:	1884703a 	and	r2,r3,r2
   2e204:	1001703a 	wrctl	status,r2
  
  return context;
   2e208:	e0bffb17 	ldw	r2,-20(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
   2e20c:	e0bffa15 	stw	r2,-24(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
   2e210:	e0bffc17 	ldw	r2,-16(fp)
   2e214:	10800817 	ldw	r2,32(r2)
   2e218:	10c00094 	ori	r3,r2,2
   2e21c:	e0bffc17 	ldw	r2,-16(fp)
   2e220:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
   2e224:	e0bffc17 	ldw	r2,-16(fp)
   2e228:	10800017 	ldw	r2,0(r2)
   2e22c:	10800104 	addi	r2,r2,4
   2e230:	1007883a 	mov	r3,r2
   2e234:	e0bffc17 	ldw	r2,-16(fp)
   2e238:	10800817 	ldw	r2,32(r2)
   2e23c:	18800035 	stwio	r2,0(r3)
   2e240:	e0bffa17 	ldw	r2,-24(fp)
   2e244:	e0bff815 	stw	r2,-32(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e248:	e0bff817 	ldw	r2,-32(fp)
   2e24c:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
   2e250:	e0bffe17 	ldw	r2,-8(fp)
   2e254:	0080100e 	bge	zero,r2,2e298 <altera_avalon_jtag_uart_write+0x1c4>
    {
      if (flags & O_NONBLOCK)
   2e258:	e0bfff17 	ldw	r2,-4(fp)
   2e25c:	1090000c 	andi	r2,r2,16384
   2e260:	1000101e 	bne	r2,zero,2e2a4 <altera_avalon_jtag_uart_write+0x1d0>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
   2e264:	0001883a 	nop
   2e268:	e0bffc17 	ldw	r2,-16(fp)
   2e26c:	10c00d17 	ldw	r3,52(r2)
   2e270:	e0bff517 	ldw	r2,-44(fp)
   2e274:	1880051e 	bne	r3,r2,2e28c <altera_avalon_jtag_uart_write+0x1b8>
   2e278:	e0bffc17 	ldw	r2,-16(fp)
   2e27c:	10c00917 	ldw	r3,36(r2)
   2e280:	e0bffc17 	ldw	r2,-16(fp)
   2e284:	10800117 	ldw	r2,4(r2)
   2e288:	18bff736 	bltu	r3,r2,2e268 <altera_avalon_jtag_uart_write+0x194>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
   2e28c:	e0bffc17 	ldw	r2,-16(fp)
   2e290:	10800917 	ldw	r2,36(r2)
   2e294:	1000051e 	bne	r2,zero,2e2ac <altera_avalon_jtag_uart_write+0x1d8>
         break;
    }
  }
  while (count > 0);
   2e298:	e0bffe17 	ldw	r2,-8(fp)
   2e29c:	00bfd016 	blt	zero,r2,2e1e0 <altera_avalon_jtag_uart_write+0x10c>
   2e2a0:	00000306 	br	2e2b0 <altera_avalon_jtag_uart_write+0x1dc>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
   2e2a4:	0001883a 	nop
   2e2a8:	00000106 	br	2e2b0 <altera_avalon_jtag_uart_write+0x1dc>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
   2e2ac:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
   2e2b0:	e0fffd17 	ldw	r3,-12(fp)
   2e2b4:	e0bff717 	ldw	r2,-36(fp)
   2e2b8:	18800426 	beq	r3,r2,2e2cc <altera_avalon_jtag_uart_write+0x1f8>
    return ptr - start;
   2e2bc:	e0fffd17 	ldw	r3,-12(fp)
   2e2c0:	e0bff717 	ldw	r2,-36(fp)
   2e2c4:	1885c83a 	sub	r2,r3,r2
   2e2c8:	00000606 	br	2e2e4 <altera_avalon_jtag_uart_write+0x210>
  else if (flags & O_NONBLOCK)
   2e2cc:	e0bfff17 	ldw	r2,-4(fp)
   2e2d0:	1090000c 	andi	r2,r2,16384
   2e2d4:	10000226 	beq	r2,zero,2e2e0 <altera_avalon_jtag_uart_write+0x20c>
    return -EWOULDBLOCK;
   2e2d8:	00bffd44 	movi	r2,-11
   2e2dc:	00000106 	br	2e2e4 <altera_avalon_jtag_uart_write+0x210>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
   2e2e0:	00bffec4 	movi	r2,-5
}
   2e2e4:	e037883a 	mov	sp,fp
   2e2e8:	dfc00117 	ldw	ra,4(sp)
   2e2ec:	df000017 	ldw	fp,0(sp)
   2e2f0:	dec00204 	addi	sp,sp,8
   2e2f4:	f800283a 	ret

0002e2f8 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
   2e2f8:	defff504 	addi	sp,sp,-44
   2e2fc:	df000a15 	stw	fp,40(sp)
   2e300:	df000a04 	addi	fp,sp,40
   2e304:	e13ffc15 	stw	r4,-16(fp)
   2e308:	e17ffd15 	stw	r5,-12(fp)
   2e30c:	e1bffe15 	stw	r6,-8(fp)
   2e310:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
   2e314:	e03ff615 	stw	zero,-40(fp)
   2e318:	d0a01d17 	ldw	r2,-32652(gp)
  
  if (alt_ticks_per_second ())
   2e31c:	10003c26 	beq	r2,zero,2e410 <alt_alarm_start+0x118>
  {
    if (alarm)
   2e320:	e0bffc17 	ldw	r2,-16(fp)
   2e324:	10003826 	beq	r2,zero,2e408 <alt_alarm_start+0x110>
    {
      alarm->callback = callback;
   2e328:	e0bffc17 	ldw	r2,-16(fp)
   2e32c:	e0fffe17 	ldw	r3,-8(fp)
   2e330:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
   2e334:	e0bffc17 	ldw	r2,-16(fp)
   2e338:	e0ffff17 	ldw	r3,-4(fp)
   2e33c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e340:	0005303a 	rdctl	r2,status
   2e344:	e0bff915 	stw	r2,-28(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e348:	e0fff917 	ldw	r3,-28(fp)
   2e34c:	00bfff84 	movi	r2,-2
   2e350:	1884703a 	and	r2,r3,r2
   2e354:	1001703a 	wrctl	status,r2
  
  return context;
   2e358:	e0bff917 	ldw	r2,-28(fp)
 
      irq_context = alt_irq_disable_all ();
   2e35c:	e0bff815 	stw	r2,-32(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
   2e360:	d0a01e17 	ldw	r2,-32648(gp)
      
      current_nticks = alt_nticks();
   2e364:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
   2e368:	e0fffd17 	ldw	r3,-12(fp)
   2e36c:	e0bff617 	ldw	r2,-40(fp)
   2e370:	1885883a 	add	r2,r3,r2
   2e374:	10c00044 	addi	r3,r2,1
   2e378:	e0bffc17 	ldw	r2,-16(fp)
   2e37c:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
   2e380:	e0bffc17 	ldw	r2,-16(fp)
   2e384:	10c00217 	ldw	r3,8(r2)
   2e388:	e0bff617 	ldw	r2,-40(fp)
   2e38c:	1880042e 	bgeu	r3,r2,2e3a0 <alt_alarm_start+0xa8>
      {
        alarm->rollover = 1;
   2e390:	e0bffc17 	ldw	r2,-16(fp)
   2e394:	00c00044 	movi	r3,1
   2e398:	10c00405 	stb	r3,16(r2)
   2e39c:	00000206 	br	2e3a8 <alt_alarm_start+0xb0>
      }
      else
      {
        alarm->rollover = 0;
   2e3a0:	e0bffc17 	ldw	r2,-16(fp)
   2e3a4:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
   2e3a8:	e0bffc17 	ldw	r2,-16(fp)
   2e3ac:	d0e00e04 	addi	r3,gp,-32712
   2e3b0:	e0fffa15 	stw	r3,-24(fp)
   2e3b4:	e0bffb15 	stw	r2,-20(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e3b8:	e0bffb17 	ldw	r2,-20(fp)
   2e3bc:	e0fffa17 	ldw	r3,-24(fp)
   2e3c0:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e3c4:	e0bffa17 	ldw	r2,-24(fp)
   2e3c8:	10c00017 	ldw	r3,0(r2)
   2e3cc:	e0bffb17 	ldw	r2,-20(fp)
   2e3d0:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e3d4:	e0bffa17 	ldw	r2,-24(fp)
   2e3d8:	10800017 	ldw	r2,0(r2)
   2e3dc:	e0fffb17 	ldw	r3,-20(fp)
   2e3e0:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e3e4:	e0bffa17 	ldw	r2,-24(fp)
   2e3e8:	e0fffb17 	ldw	r3,-20(fp)
   2e3ec:	10c00015 	stw	r3,0(r2)
   2e3f0:	e0bff817 	ldw	r2,-32(fp)
   2e3f4:	e0bff715 	stw	r2,-36(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e3f8:	e0bff717 	ldw	r2,-36(fp)
   2e3fc:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
   2e400:	0005883a 	mov	r2,zero
   2e404:	00000306 	br	2e414 <alt_alarm_start+0x11c>
    }
    else
    {
      return -EINVAL;
   2e408:	00bffa84 	movi	r2,-22
   2e40c:	00000106 	br	2e414 <alt_alarm_start+0x11c>
    }
  }
  else
  {
    return -ENOTSUP;
   2e410:	00bfde84 	movi	r2,-134
  }
}
   2e414:	e037883a 	mov	sp,fp
   2e418:	df000017 	ldw	fp,0(sp)
   2e41c:	dec00104 	addi	sp,sp,4
   2e420:	f800283a 	ret

0002e424 <alt_busy_sleep>:
#include "alt_types.h"

#include "priv/alt_busy_sleep.h"

unsigned int alt_busy_sleep (unsigned int us)
{
   2e424:	defffa04 	addi	sp,sp,-24
   2e428:	dfc00515 	stw	ra,20(sp)
   2e42c:	df000415 	stw	fp,16(sp)
   2e430:	df000404 	addi	fp,sp,16
   2e434:	e13fff15 	stw	r4,-4(fp)
  {
    cycles_per_loop = 9;
  }
  else  
  {
    cycles_per_loop = 3;
   2e438:	008000c4 	movi	r2,3
   2e43c:	e0bffd15 	stw	r2,-12(fp)
  }
  

  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));
   2e440:	e0fffd17 	ldw	r3,-12(fp)
   2e444:	008003f4 	movhi	r2,15
   2e448:	10909004 	addi	r2,r2,16960
   2e44c:	1885383a 	mul	r2,r3,r2
   2e450:	100b883a 	mov	r5,r2
   2e454:	0100bef4 	movhi	r4,763
   2e458:	213c2004 	addi	r4,r4,-3968
   2e45c:	002a5c40 	call	2a5c4 <__udivsi3>
  {
    cycles_per_loop = 3;
  }
  

  big_loops = us / (INT_MAX/
   2e460:	100b883a 	mov	r5,r2
   2e464:	01200034 	movhi	r4,32768
   2e468:	213fffc4 	addi	r4,r4,-1
   2e46c:	002a5c40 	call	2a5c4 <__udivsi3>
   2e470:	100b883a 	mov	r5,r2
   2e474:	e13fff17 	ldw	r4,-4(fp)
   2e478:	002a5c40 	call	2a5c4 <__udivsi3>
   2e47c:	e0bffe15 	stw	r2,-8(fp)
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
   2e480:	e0bffe17 	ldw	r2,-8(fp)
   2e484:	10002a26 	beq	r2,zero,2e530 <alt_busy_sleep+0x10c>
  {
    for(i=0;i<big_loops;i++)
   2e488:	e03ffc15 	stw	zero,-16(fp)
   2e48c:	00001706 	br	2e4ec <alt_busy_sleep+0xc8>
      /*
      * Do NOT Try to single step the asm statement below 
      * (single step will never return)
      * Step out of this function or set a breakpoint after the asm statements
      */
      __asm__ volatile (
   2e490:	00a00034 	movhi	r2,32768
   2e494:	10bfffc4 	addi	r2,r2,-1
   2e498:	10bfffc4 	addi	r2,r2,-1
   2e49c:	103ffe1e 	bne	r2,zero,2e498 <alt_busy_sleep+0x74>
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
      (cycles_per_loop * 1000000)));
   2e4a0:	e0fffd17 	ldw	r3,-12(fp)
   2e4a4:	008003f4 	movhi	r2,15
   2e4a8:	10909004 	addi	r2,r2,16960
   2e4ac:	1885383a 	mul	r2,r3,r2
        "\n1:"
        "\n\t.pushsection .debug_alt_sim_info"
        "\n\t.int 4, 0, 0b, 1b"
        "\n\t.popsection"
        :: "r" (INT_MAX));
      us -= (INT_MAX/(ALT_CPU_FREQ/
   2e4b0:	100b883a 	mov	r5,r2
   2e4b4:	0100bef4 	movhi	r4,763
   2e4b8:	213c2004 	addi	r4,r4,-3968
   2e4bc:	002a5c40 	call	2a5c4 <__udivsi3>
   2e4c0:	100b883a 	mov	r5,r2
   2e4c4:	01200034 	movhi	r4,32768
   2e4c8:	213fffc4 	addi	r4,r4,-1
   2e4cc:	002a5c40 	call	2a5c4 <__udivsi3>
   2e4d0:	1007883a 	mov	r3,r2
   2e4d4:	e0bfff17 	ldw	r2,-4(fp)
   2e4d8:	10c5c83a 	sub	r2,r2,r3
   2e4dc:	e0bfff15 	stw	r2,-4(fp)
  big_loops = us / (INT_MAX/
  (ALT_CPU_FREQ/(cycles_per_loop * 1000000)));

  if (big_loops)
  {
    for(i=0;i<big_loops;i++)
   2e4e0:	e0bffc17 	ldw	r2,-16(fp)
   2e4e4:	10800044 	addi	r2,r2,1
   2e4e8:	e0bffc15 	stw	r2,-16(fp)
   2e4ec:	e0fffc17 	ldw	r3,-16(fp)
   2e4f0:	e0bffe17 	ldw	r2,-8(fp)
   2e4f4:	18bfe616 	blt	r3,r2,2e490 <alt_busy_sleep+0x6c>
      "\n\tbne %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   2e4f8:	e0fffd17 	ldw	r3,-12(fp)
   2e4fc:	008003f4 	movhi	r2,15
   2e500:	10909004 	addi	r2,r2,16960
   2e504:	1885383a 	mul	r2,r3,r2
   2e508:	100b883a 	mov	r5,r2
   2e50c:	0100bef4 	movhi	r4,763
   2e510:	213c2004 	addi	r4,r4,-3968
   2e514:	002a5c40 	call	2a5c4 <__udivsi3>
   2e518:	1007883a 	mov	r3,r2
   2e51c:	e0bfff17 	ldw	r2,-4(fp)
   2e520:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   2e524:	10bfffc4 	addi	r2,r2,-1
   2e528:	103ffe1e 	bne	r2,zero,2e524 <alt_busy_sleep+0x100>
   2e52c:	00000d06 	br	2e564 <alt_busy_sleep+0x140>
      "\n\tbgt %0,zero,0b"
      "\n1:"
      "\n\t.pushsection .debug_alt_sim_info"
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
   2e530:	e0fffd17 	ldw	r3,-12(fp)
   2e534:	008003f4 	movhi	r2,15
   2e538:	10909004 	addi	r2,r2,16960
   2e53c:	1885383a 	mul	r2,r3,r2
   2e540:	100b883a 	mov	r5,r2
   2e544:	0100bef4 	movhi	r4,763
   2e548:	213c2004 	addi	r4,r4,-3968
   2e54c:	002a5c40 	call	2a5c4 <__udivsi3>
   2e550:	1007883a 	mov	r3,r2
   2e554:	e0bfff17 	ldw	r2,-4(fp)
   2e558:	1885383a 	mul	r2,r3,r2
    /*
    * Do NOT Try to single step the asm statement below 
    * (single step will never return)
    * Step out of this function or set a breakpoint after the asm statements
    */
    __asm__ volatile (
   2e55c:	10bfffc4 	addi	r2,r2,-1
   2e560:	00bffe16 	blt	zero,r2,2e55c <alt_busy_sleep+0x138>
      "\n\t.int 4, 0, 0b, 1b"
      "\n\t.popsection"
      :: "r" (us*(ALT_CPU_FREQ/(cycles_per_loop * 1000000))));
  }
#endif /* #ifndef ALT_SIM_OPTIMIZE */
  return 0;
   2e564:	0005883a 	mov	r2,zero
}
   2e568:	e037883a 	mov	sp,fp
   2e56c:	dfc00117 	ldw	ra,4(sp)
   2e570:	df000017 	ldw	fp,0(sp)
   2e574:	dec00204 	addi	sp,sp,8
   2e578:	f800283a 	ret

0002e57c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   2e57c:	defffe04 	addi	sp,sp,-8
   2e580:	df000115 	stw	fp,4(sp)
   2e584:	df000104 	addi	fp,sp,4
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e588:	e03fff15 	stw	zero,-4(fp)
   2e58c:	00000506 	br	2e5a4 <alt_dcache_flush_all+0x28>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
   2e590:	e0bfff17 	ldw	r2,-4(fp)
   2e594:	1000003b 	flushd	0(r2)
void alt_dcache_flush_all (void)
{
#if NIOS2_DCACHE_SIZE > 0
  char* i;
  
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
   2e598:	e0bfff17 	ldw	r2,-4(fp)
   2e59c:	10800804 	addi	r2,r2,32
   2e5a0:	e0bfff15 	stw	r2,-4(fp)
   2e5a4:	e0bfff17 	ldw	r2,-4(fp)
   2e5a8:	10820030 	cmpltui	r2,r2,2048
   2e5ac:	103ff81e 	bne	r2,zero,2e590 <alt_dcache_flush_all+0x14>
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
   2e5b0:	0001883a 	nop
   2e5b4:	e037883a 	mov	sp,fp
   2e5b8:	df000017 	ldw	fp,0(sp)
   2e5bc:	dec00104 	addi	sp,sp,4
   2e5c0:	f800283a 	ret

0002e5c4 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2e5c4:	defffe04 	addi	sp,sp,-8
   2e5c8:	dfc00115 	stw	ra,4(sp)
   2e5cc:	df000015 	stw	fp,0(sp)
   2e5d0:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2e5d4:	d0a00b17 	ldw	r2,-32724(gp)
   2e5d8:	10000326 	beq	r2,zero,2e5e8 <alt_get_errno+0x24>
   2e5dc:	d0a00b17 	ldw	r2,-32724(gp)
   2e5e0:	103ee83a 	callr	r2
   2e5e4:	00000106 	br	2e5ec <alt_get_errno+0x28>
   2e5e8:	d0a01804 	addi	r2,gp,-32672
}
   2e5ec:	e037883a 	mov	sp,fp
   2e5f0:	dfc00117 	ldw	ra,4(sp)
   2e5f4:	df000017 	ldw	fp,0(sp)
   2e5f8:	dec00204 	addi	sp,sp,8
   2e5fc:	f800283a 	ret

0002e600 <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   2e600:	defffa04 	addi	sp,sp,-24
   2e604:	dfc00515 	stw	ra,20(sp)
   2e608:	df000415 	stw	fp,16(sp)
   2e60c:	df000404 	addi	fp,sp,16
   2e610:	e13ffe15 	stw	r4,-8(fp)
   2e614:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   2e618:	e0bffe17 	ldw	r2,-8(fp)
   2e61c:	10000326 	beq	r2,zero,2e62c <alt_dev_llist_insert+0x2c>
   2e620:	e0bffe17 	ldw	r2,-8(fp)
   2e624:	10800217 	ldw	r2,8(r2)
   2e628:	1000061e 	bne	r2,zero,2e644 <alt_dev_llist_insert+0x44>
  {
    ALT_ERRNO = EINVAL;
   2e62c:	002e5c40 	call	2e5c4 <alt_get_errno>
   2e630:	1007883a 	mov	r3,r2
   2e634:	00800584 	movi	r2,22
   2e638:	18800015 	stw	r2,0(r3)
    return -EINVAL;
   2e63c:	00bffa84 	movi	r2,-22
   2e640:	00001306 	br	2e690 <alt_dev_llist_insert+0x90>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
   2e644:	e0bffe17 	ldw	r2,-8(fp)
   2e648:	e0ffff17 	ldw	r3,-4(fp)
   2e64c:	e0fffc15 	stw	r3,-16(fp)
   2e650:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   2e654:	e0bffd17 	ldw	r2,-12(fp)
   2e658:	e0fffc17 	ldw	r3,-16(fp)
   2e65c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
   2e660:	e0bffc17 	ldw	r2,-16(fp)
   2e664:	10c00017 	ldw	r3,0(r2)
   2e668:	e0bffd17 	ldw	r2,-12(fp)
   2e66c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
   2e670:	e0bffc17 	ldw	r2,-16(fp)
   2e674:	10800017 	ldw	r2,0(r2)
   2e678:	e0fffd17 	ldw	r3,-12(fp)
   2e67c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
   2e680:	e0bffc17 	ldw	r2,-16(fp)
   2e684:	e0fffd17 	ldw	r3,-12(fp)
   2e688:	10c00015 	stw	r3,0(r2)

  return 0;  
   2e68c:	0005883a 	mov	r2,zero
}
   2e690:	e037883a 	mov	sp,fp
   2e694:	dfc00117 	ldw	ra,4(sp)
   2e698:	df000017 	ldw	fp,0(sp)
   2e69c:	dec00204 	addi	sp,sp,8
   2e6a0:	f800283a 	ret

0002e6a4 <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
   2e6a4:	defffd04 	addi	sp,sp,-12
   2e6a8:	dfc00215 	stw	ra,8(sp)
   2e6ac:	df000115 	stw	fp,4(sp)
   2e6b0:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e6b4:	008000f4 	movhi	r2,3
   2e6b8:	10bda304 	addi	r2,r2,-2420
   2e6bc:	e0bfff15 	stw	r2,-4(fp)
   2e6c0:	00000606 	br	2e6dc <_do_ctors+0x38>
        (*ctor) (); 
   2e6c4:	e0bfff17 	ldw	r2,-4(fp)
   2e6c8:	10800017 	ldw	r2,0(r2)
   2e6cc:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
   2e6d0:	e0bfff17 	ldw	r2,-4(fp)
   2e6d4:	10bfff04 	addi	r2,r2,-4
   2e6d8:	e0bfff15 	stw	r2,-4(fp)
   2e6dc:	e0ffff17 	ldw	r3,-4(fp)
   2e6e0:	008000f4 	movhi	r2,3
   2e6e4:	10bda404 	addi	r2,r2,-2416
   2e6e8:	18bff62e 	bgeu	r3,r2,2e6c4 <_do_ctors+0x20>
        (*ctor) (); 
}
   2e6ec:	0001883a 	nop
   2e6f0:	e037883a 	mov	sp,fp
   2e6f4:	dfc00117 	ldw	ra,4(sp)
   2e6f8:	df000017 	ldw	fp,0(sp)
   2e6fc:	dec00204 	addi	sp,sp,8
   2e700:	f800283a 	ret

0002e704 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
   2e704:	defffd04 	addi	sp,sp,-12
   2e708:	dfc00215 	stw	ra,8(sp)
   2e70c:	df000115 	stw	fp,4(sp)
   2e710:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e714:	008000f4 	movhi	r2,3
   2e718:	10bda304 	addi	r2,r2,-2420
   2e71c:	e0bfff15 	stw	r2,-4(fp)
   2e720:	00000606 	br	2e73c <_do_dtors+0x38>
        (*dtor) (); 
   2e724:	e0bfff17 	ldw	r2,-4(fp)
   2e728:	10800017 	ldw	r2,0(r2)
   2e72c:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
   2e730:	e0bfff17 	ldw	r2,-4(fp)
   2e734:	10bfff04 	addi	r2,r2,-4
   2e738:	e0bfff15 	stw	r2,-4(fp)
   2e73c:	e0ffff17 	ldw	r3,-4(fp)
   2e740:	008000f4 	movhi	r2,3
   2e744:	10bda404 	addi	r2,r2,-2416
   2e748:	18bff62e 	bgeu	r3,r2,2e724 <_do_dtors+0x20>
        (*dtor) (); 
}
   2e74c:	0001883a 	nop
   2e750:	e037883a 	mov	sp,fp
   2e754:	dfc00117 	ldw	ra,4(sp)
   2e758:	df000017 	ldw	fp,0(sp)
   2e75c:	dec00204 	addi	sp,sp,8
   2e760:	f800283a 	ret

0002e764 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   2e764:	defffe04 	addi	sp,sp,-8
   2e768:	dfc00115 	stw	ra,4(sp)
   2e76c:	df000015 	stw	fp,0(sp)
   2e770:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
   2e774:	01440004 	movi	r5,4096
   2e778:	0009883a 	mov	r4,zero
   2e77c:	002f1d00 	call	2f1d0 <alt_icache_flush>
#endif
}
   2e780:	0001883a 	nop
   2e784:	e037883a 	mov	sp,fp
   2e788:	dfc00117 	ldw	ra,4(sp)
   2e78c:	df000017 	ldw	fp,0(sp)
   2e790:	dec00204 	addi	sp,sp,8
   2e794:	f800283a 	ret

0002e798 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e798:	defff904 	addi	sp,sp,-28
   2e79c:	dfc00615 	stw	ra,24(sp)
   2e7a0:	df000515 	stw	fp,20(sp)
   2e7a4:	df000504 	addi	fp,sp,20
   2e7a8:	e13ffc15 	stw	r4,-16(fp)
   2e7ac:	e17ffd15 	stw	r5,-12(fp)
   2e7b0:	e1bffe15 	stw	r6,-8(fp)
   2e7b4:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
   2e7b8:	e0800217 	ldw	r2,8(fp)
   2e7bc:	d8800015 	stw	r2,0(sp)
   2e7c0:	e1ffff17 	ldw	r7,-4(fp)
   2e7c4:	e1bffe17 	ldw	r6,-8(fp)
   2e7c8:	e17ffd17 	ldw	r5,-12(fp)
   2e7cc:	e13ffc17 	ldw	r4,-16(fp)
   2e7d0:	002e9480 	call	2e948 <alt_iic_isr_register>
}  
   2e7d4:	e037883a 	mov	sp,fp
   2e7d8:	dfc00117 	ldw	ra,4(sp)
   2e7dc:	df000017 	ldw	fp,0(sp)
   2e7e0:	dec00204 	addi	sp,sp,8
   2e7e4:	f800283a 	ret

0002e7e8 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
   2e7e8:	defff904 	addi	sp,sp,-28
   2e7ec:	df000615 	stw	fp,24(sp)
   2e7f0:	df000604 	addi	fp,sp,24
   2e7f4:	e13ffe15 	stw	r4,-8(fp)
   2e7f8:	e17fff15 	stw	r5,-4(fp)
   2e7fc:	e0bfff17 	ldw	r2,-4(fp)
   2e800:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e804:	0005303a 	rdctl	r2,status
   2e808:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e80c:	e0fffb17 	ldw	r3,-20(fp)
   2e810:	00bfff84 	movi	r2,-2
   2e814:	1884703a 	and	r2,r3,r2
   2e818:	1001703a 	wrctl	status,r2
  
  return context;
   2e81c:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e820:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
   2e824:	00c00044 	movi	r3,1
   2e828:	e0bffa17 	ldw	r2,-24(fp)
   2e82c:	1884983a 	sll	r2,r3,r2
   2e830:	1007883a 	mov	r3,r2
   2e834:	d0a01917 	ldw	r2,-32668(gp)
   2e838:	1884b03a 	or	r2,r3,r2
   2e83c:	d0a01915 	stw	r2,-32668(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e840:	d0a01917 	ldw	r2,-32668(gp)
   2e844:	100170fa 	wrctl	ienable,r2
   2e848:	e0bffc17 	ldw	r2,-16(fp)
   2e84c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e850:	e0bffd17 	ldw	r2,-12(fp)
   2e854:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e858:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
   2e85c:	0001883a 	nop
}
   2e860:	e037883a 	mov	sp,fp
   2e864:	df000017 	ldw	fp,0(sp)
   2e868:	dec00104 	addi	sp,sp,4
   2e86c:	f800283a 	ret

0002e870 <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
   2e870:	defff904 	addi	sp,sp,-28
   2e874:	df000615 	stw	fp,24(sp)
   2e878:	df000604 	addi	fp,sp,24
   2e87c:	e13ffe15 	stw	r4,-8(fp)
   2e880:	e17fff15 	stw	r5,-4(fp)
   2e884:	e0bfff17 	ldw	r2,-4(fp)
   2e888:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e88c:	0005303a 	rdctl	r2,status
   2e890:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e894:	e0fffb17 	ldw	r3,-20(fp)
   2e898:	00bfff84 	movi	r2,-2
   2e89c:	1884703a 	and	r2,r3,r2
   2e8a0:	1001703a 	wrctl	status,r2
  
  return context;
   2e8a4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
   2e8a8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
   2e8ac:	00c00044 	movi	r3,1
   2e8b0:	e0bffa17 	ldw	r2,-24(fp)
   2e8b4:	1884983a 	sll	r2,r3,r2
   2e8b8:	0084303a 	nor	r2,zero,r2
   2e8bc:	1007883a 	mov	r3,r2
   2e8c0:	d0a01917 	ldw	r2,-32668(gp)
   2e8c4:	1884703a 	and	r2,r3,r2
   2e8c8:	d0a01915 	stw	r2,-32668(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   2e8cc:	d0a01917 	ldw	r2,-32668(gp)
   2e8d0:	100170fa 	wrctl	ienable,r2
   2e8d4:	e0bffc17 	ldw	r2,-16(fp)
   2e8d8:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2e8dc:	e0bffd17 	ldw	r2,-12(fp)
   2e8e0:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
   2e8e4:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
   2e8e8:	0001883a 	nop
}
   2e8ec:	e037883a 	mov	sp,fp
   2e8f0:	df000017 	ldw	fp,0(sp)
   2e8f4:	dec00104 	addi	sp,sp,4
   2e8f8:	f800283a 	ret

0002e8fc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
   2e8fc:	defffc04 	addi	sp,sp,-16
   2e900:	df000315 	stw	fp,12(sp)
   2e904:	df000304 	addi	fp,sp,12
   2e908:	e13ffe15 	stw	r4,-8(fp)
   2e90c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
   2e910:	000530fa 	rdctl	r2,ienable
   2e914:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
   2e918:	00c00044 	movi	r3,1
   2e91c:	e0bfff17 	ldw	r2,-4(fp)
   2e920:	1884983a 	sll	r2,r3,r2
   2e924:	1007883a 	mov	r3,r2
   2e928:	e0bffd17 	ldw	r2,-12(fp)
   2e92c:	1884703a 	and	r2,r3,r2
   2e930:	1004c03a 	cmpne	r2,r2,zero
   2e934:	10803fcc 	andi	r2,r2,255
}
   2e938:	e037883a 	mov	sp,fp
   2e93c:	df000017 	ldw	fp,0(sp)
   2e940:	dec00104 	addi	sp,sp,4
   2e944:	f800283a 	ret

0002e948 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
   2e948:	defff504 	addi	sp,sp,-44
   2e94c:	dfc00a15 	stw	ra,40(sp)
   2e950:	df000915 	stw	fp,36(sp)
   2e954:	df000904 	addi	fp,sp,36
   2e958:	e13ffc15 	stw	r4,-16(fp)
   2e95c:	e17ffd15 	stw	r5,-12(fp)
   2e960:	e1bffe15 	stw	r6,-8(fp)
   2e964:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
   2e968:	00bffa84 	movi	r2,-22
   2e96c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
   2e970:	e0bffd17 	ldw	r2,-12(fp)
   2e974:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
   2e978:	e0bff817 	ldw	r2,-32(fp)
   2e97c:	10800808 	cmpgei	r2,r2,32
   2e980:	1000271e 	bne	r2,zero,2ea20 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2e984:	0005303a 	rdctl	r2,status
   2e988:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2e98c:	e0fffb17 	ldw	r3,-20(fp)
   2e990:	00bfff84 	movi	r2,-2
   2e994:	1884703a 	and	r2,r3,r2
   2e998:	1001703a 	wrctl	status,r2
  
  return context;
   2e99c:	e0bffb17 	ldw	r2,-20(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
   2e9a0:	e0bffa15 	stw	r2,-24(fp)

    alt_irq[id].handler = isr;
   2e9a4:	00800034 	movhi	r2,0
   2e9a8:	10879404 	addi	r2,r2,7760
   2e9ac:	e0fff817 	ldw	r3,-32(fp)
   2e9b0:	180690fa 	slli	r3,r3,3
   2e9b4:	10c5883a 	add	r2,r2,r3
   2e9b8:	e0fffe17 	ldw	r3,-8(fp)
   2e9bc:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
   2e9c0:	00800034 	movhi	r2,0
   2e9c4:	10879404 	addi	r2,r2,7760
   2e9c8:	e0fff817 	ldw	r3,-32(fp)
   2e9cc:	180690fa 	slli	r3,r3,3
   2e9d0:	10c5883a 	add	r2,r2,r3
   2e9d4:	10800104 	addi	r2,r2,4
   2e9d8:	e0ffff17 	ldw	r3,-4(fp)
   2e9dc:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
   2e9e0:	e0bffe17 	ldw	r2,-8(fp)
   2e9e4:	10000526 	beq	r2,zero,2e9fc <alt_iic_isr_register+0xb4>
   2e9e8:	e0bff817 	ldw	r2,-32(fp)
   2e9ec:	100b883a 	mov	r5,r2
   2e9f0:	e13ffc17 	ldw	r4,-16(fp)
   2e9f4:	002e7e80 	call	2e7e8 <alt_ic_irq_enable>
   2e9f8:	00000406 	br	2ea0c <alt_iic_isr_register+0xc4>
   2e9fc:	e0bff817 	ldw	r2,-32(fp)
   2ea00:	100b883a 	mov	r5,r2
   2ea04:	e13ffc17 	ldw	r4,-16(fp)
   2ea08:	002e8700 	call	2e870 <alt_ic_irq_disable>
   2ea0c:	e0bff715 	stw	r2,-36(fp)
   2ea10:	e0bffa17 	ldw	r2,-24(fp)
   2ea14:	e0bff915 	stw	r2,-28(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ea18:	e0bff917 	ldw	r2,-28(fp)
   2ea1c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
   2ea20:	e0bff717 	ldw	r2,-36(fp)
}
   2ea24:	e037883a 	mov	sp,fp
   2ea28:	dfc00117 	ldw	ra,4(sp)
   2ea2c:	df000017 	ldw	fp,0(sp)
   2ea30:	dec00204 	addi	sp,sp,8
   2ea34:	f800283a 	ret

0002ea38 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
   2ea38:	defff904 	addi	sp,sp,-28
   2ea3c:	dfc00615 	stw	ra,24(sp)
   2ea40:	df000515 	stw	fp,20(sp)
   2ea44:	df000504 	addi	fp,sp,20
   2ea48:	e13ffc15 	stw	r4,-16(fp)
   2ea4c:	e17ffd15 	stw	r5,-12(fp)
   2ea50:	e1bffe15 	stw	r6,-8(fp)
   2ea54:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
   2ea58:	e1bfff17 	ldw	r6,-4(fp)
   2ea5c:	e17ffe17 	ldw	r5,-8(fp)
   2ea60:	e13ffd17 	ldw	r4,-12(fp)
   2ea64:	002ec780 	call	2ec78 <open>
   2ea68:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
   2ea6c:	e0bffb17 	ldw	r2,-20(fp)
   2ea70:	10001c16 	blt	r2,zero,2eae4 <alt_open_fd+0xac>
  {
    fd->dev      = alt_fd_list[old].dev;
   2ea74:	00800034 	movhi	r2,0
   2ea78:	1082f204 	addi	r2,r2,3016
   2ea7c:	e0fffb17 	ldw	r3,-20(fp)
   2ea80:	18c00324 	muli	r3,r3,12
   2ea84:	10c5883a 	add	r2,r2,r3
   2ea88:	10c00017 	ldw	r3,0(r2)
   2ea8c:	e0bffc17 	ldw	r2,-16(fp)
   2ea90:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
   2ea94:	00800034 	movhi	r2,0
   2ea98:	1082f204 	addi	r2,r2,3016
   2ea9c:	e0fffb17 	ldw	r3,-20(fp)
   2eaa0:	18c00324 	muli	r3,r3,12
   2eaa4:	10c5883a 	add	r2,r2,r3
   2eaa8:	10800104 	addi	r2,r2,4
   2eaac:	10c00017 	ldw	r3,0(r2)
   2eab0:	e0bffc17 	ldw	r2,-16(fp)
   2eab4:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
   2eab8:	00800034 	movhi	r2,0
   2eabc:	1082f204 	addi	r2,r2,3016
   2eac0:	e0fffb17 	ldw	r3,-20(fp)
   2eac4:	18c00324 	muli	r3,r3,12
   2eac8:	10c5883a 	add	r2,r2,r3
   2eacc:	10800204 	addi	r2,r2,8
   2ead0:	10c00017 	ldw	r3,0(r2)
   2ead4:	e0bffc17 	ldw	r2,-16(fp)
   2ead8:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
   2eadc:	e13ffb17 	ldw	r4,-20(fp)
   2eae0:	002d5640 	call	2d564 <alt_release_fd>
  }
} 
   2eae4:	0001883a 	nop
   2eae8:	e037883a 	mov	sp,fp
   2eaec:	dfc00117 	ldw	ra,4(sp)
   2eaf0:	df000017 	ldw	fp,0(sp)
   2eaf4:	dec00204 	addi	sp,sp,8
   2eaf8:	f800283a 	ret

0002eafc <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
   2eafc:	defffb04 	addi	sp,sp,-20
   2eb00:	dfc00415 	stw	ra,16(sp)
   2eb04:	df000315 	stw	fp,12(sp)
   2eb08:	df000304 	addi	fp,sp,12
   2eb0c:	e13ffd15 	stw	r4,-12(fp)
   2eb10:	e17ffe15 	stw	r5,-8(fp)
   2eb14:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
   2eb18:	01c07fc4 	movi	r7,511
   2eb1c:	01800044 	movi	r6,1
   2eb20:	e17ffd17 	ldw	r5,-12(fp)
   2eb24:	01000034 	movhi	r4,0
   2eb28:	2102f504 	addi	r4,r4,3028
   2eb2c:	002ea380 	call	2ea38 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
   2eb30:	01c07fc4 	movi	r7,511
   2eb34:	000d883a 	mov	r6,zero
   2eb38:	e17ffe17 	ldw	r5,-8(fp)
   2eb3c:	01000034 	movhi	r4,0
   2eb40:	2102f204 	addi	r4,r4,3016
   2eb44:	002ea380 	call	2ea38 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
   2eb48:	01c07fc4 	movi	r7,511
   2eb4c:	01800044 	movi	r6,1
   2eb50:	e17fff17 	ldw	r5,-4(fp)
   2eb54:	01000034 	movhi	r4,0
   2eb58:	2102f804 	addi	r4,r4,3040
   2eb5c:	002ea380 	call	2ea38 <alt_open_fd>
}  
   2eb60:	0001883a 	nop
   2eb64:	e037883a 	mov	sp,fp
   2eb68:	dfc00117 	ldw	ra,4(sp)
   2eb6c:	df000017 	ldw	fp,0(sp)
   2eb70:	dec00204 	addi	sp,sp,8
   2eb74:	f800283a 	ret

0002eb78 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
   2eb78:	defffe04 	addi	sp,sp,-8
   2eb7c:	dfc00115 	stw	ra,4(sp)
   2eb80:	df000015 	stw	fp,0(sp)
   2eb84:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
   2eb88:	d0a00b17 	ldw	r2,-32724(gp)
   2eb8c:	10000326 	beq	r2,zero,2eb9c <alt_get_errno+0x24>
   2eb90:	d0a00b17 	ldw	r2,-32724(gp)
   2eb94:	103ee83a 	callr	r2
   2eb98:	00000106 	br	2eba0 <alt_get_errno+0x28>
   2eb9c:	d0a01804 	addi	r2,gp,-32672
}
   2eba0:	e037883a 	mov	sp,fp
   2eba4:	dfc00117 	ldw	ra,4(sp)
   2eba8:	df000017 	ldw	fp,0(sp)
   2ebac:	dec00204 	addi	sp,sp,8
   2ebb0:	f800283a 	ret

0002ebb4 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
   2ebb4:	defffd04 	addi	sp,sp,-12
   2ebb8:	df000215 	stw	fp,8(sp)
   2ebbc:	df000204 	addi	fp,sp,8
   2ebc0:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
   2ebc4:	e0bfff17 	ldw	r2,-4(fp)
   2ebc8:	10800217 	ldw	r2,8(r2)
   2ebcc:	10d00034 	orhi	r3,r2,16384
   2ebd0:	e0bfff17 	ldw	r2,-4(fp)
   2ebd4:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2ebd8:	e03ffe15 	stw	zero,-8(fp)
   2ebdc:	00001d06 	br	2ec54 <alt_file_locked+0xa0>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2ebe0:	00800034 	movhi	r2,0
   2ebe4:	1082f204 	addi	r2,r2,3016
   2ebe8:	e0fffe17 	ldw	r3,-8(fp)
   2ebec:	18c00324 	muli	r3,r3,12
   2ebf0:	10c5883a 	add	r2,r2,r3
   2ebf4:	10c00017 	ldw	r3,0(r2)
   2ebf8:	e0bfff17 	ldw	r2,-4(fp)
   2ebfc:	10800017 	ldw	r2,0(r2)
   2ec00:	1880111e 	bne	r3,r2,2ec48 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2ec04:	00800034 	movhi	r2,0
   2ec08:	1082f204 	addi	r2,r2,3016
   2ec0c:	e0fffe17 	ldw	r3,-8(fp)
   2ec10:	18c00324 	muli	r3,r3,12
   2ec14:	10c5883a 	add	r2,r2,r3
   2ec18:	10800204 	addi	r2,r2,8
   2ec1c:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
   2ec20:	1000090e 	bge	r2,zero,2ec48 <alt_file_locked+0x94>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
   2ec24:	e0bffe17 	ldw	r2,-8(fp)
   2ec28:	10c00324 	muli	r3,r2,12
   2ec2c:	00800034 	movhi	r2,0
   2ec30:	1082f204 	addi	r2,r2,3016
   2ec34:	1887883a 	add	r3,r3,r2
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
   2ec38:	e0bfff17 	ldw	r2,-4(fp)
   2ec3c:	18800226 	beq	r3,r2,2ec48 <alt_file_locked+0x94>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
   2ec40:	00bffcc4 	movi	r2,-13
   2ec44:	00000806 	br	2ec68 <alt_file_locked+0xb4>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
   2ec48:	e0bffe17 	ldw	r2,-8(fp)
   2ec4c:	10800044 	addi	r2,r2,1
   2ec50:	e0bffe15 	stw	r2,-8(fp)
   2ec54:	d0a00a17 	ldw	r2,-32728(gp)
   2ec58:	1007883a 	mov	r3,r2
   2ec5c:	e0bffe17 	ldw	r2,-8(fp)
   2ec60:	18bfdf2e 	bgeu	r3,r2,2ebe0 <alt_file_locked+0x2c>
    }
  }
  
  /* The device is not locked */
 
  return 0;
   2ec64:	0005883a 	mov	r2,zero
}
   2ec68:	e037883a 	mov	sp,fp
   2ec6c:	df000017 	ldw	fp,0(sp)
   2ec70:	dec00104 	addi	sp,sp,4
   2ec74:	f800283a 	ret

0002ec78 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
   2ec78:	defff604 	addi	sp,sp,-40
   2ec7c:	dfc00915 	stw	ra,36(sp)
   2ec80:	df000815 	stw	fp,32(sp)
   2ec84:	df000804 	addi	fp,sp,32
   2ec88:	e13ffd15 	stw	r4,-12(fp)
   2ec8c:	e17ffe15 	stw	r5,-8(fp)
   2ec90:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
   2ec94:	00bfffc4 	movi	r2,-1
   2ec98:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
   2ec9c:	00bffb44 	movi	r2,-19
   2eca0:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
   2eca4:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
   2eca8:	d1600804 	addi	r5,gp,-32736
   2ecac:	e13ffd17 	ldw	r4,-12(fp)
   2ecb0:	002ef940 	call	2ef94 <alt_find_dev>
   2ecb4:	e0bff815 	stw	r2,-32(fp)
   2ecb8:	e0bff817 	ldw	r2,-32(fp)
   2ecbc:	1000051e 	bne	r2,zero,2ecd4 <open+0x5c>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
   2ecc0:	e13ffd17 	ldw	r4,-12(fp)
   2ecc4:	002f0240 	call	2f024 <alt_find_file>
   2ecc8:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
   2eccc:	00800044 	movi	r2,1
   2ecd0:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
   2ecd4:	e0bff817 	ldw	r2,-32(fp)
   2ecd8:	10002926 	beq	r2,zero,2ed80 <open+0x108>
  {
    if ((index = alt_get_fd (dev)) < 0)
   2ecdc:	e13ff817 	ldw	r4,-32(fp)
   2ece0:	002f12c0 	call	2f12c <alt_get_fd>
   2ece4:	e0bff915 	stw	r2,-28(fp)
   2ece8:	e0bff917 	ldw	r2,-28(fp)
   2ecec:	1000030e 	bge	r2,zero,2ecfc <open+0x84>
    {
      status = index;
   2ecf0:	e0bff917 	ldw	r2,-28(fp)
   2ecf4:	e0bffa15 	stw	r2,-24(fp)
   2ecf8:	00002306 	br	2ed88 <open+0x110>
    }
    else
    {
      fd = &alt_fd_list[index];
   2ecfc:	e0bff917 	ldw	r2,-28(fp)
   2ed00:	10c00324 	muli	r3,r2,12
   2ed04:	00800034 	movhi	r2,0
   2ed08:	1082f204 	addi	r2,r2,3016
   2ed0c:	1885883a 	add	r2,r3,r2
   2ed10:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
   2ed14:	e0fffe17 	ldw	r3,-8(fp)
   2ed18:	00900034 	movhi	r2,16384
   2ed1c:	10bfffc4 	addi	r2,r2,-1
   2ed20:	1886703a 	and	r3,r3,r2
   2ed24:	e0bffc17 	ldw	r2,-16(fp)
   2ed28:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
   2ed2c:	e0bffb17 	ldw	r2,-20(fp)
   2ed30:	1000051e 	bne	r2,zero,2ed48 <open+0xd0>
   2ed34:	e13ffc17 	ldw	r4,-16(fp)
   2ed38:	002ebb40 	call	2ebb4 <alt_file_locked>
   2ed3c:	e0bffa15 	stw	r2,-24(fp)
   2ed40:	e0bffa17 	ldw	r2,-24(fp)
   2ed44:	10001016 	blt	r2,zero,2ed88 <open+0x110>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
   2ed48:	e0bff817 	ldw	r2,-32(fp)
   2ed4c:	10800317 	ldw	r2,12(r2)
   2ed50:	10000826 	beq	r2,zero,2ed74 <open+0xfc>
   2ed54:	e0bff817 	ldw	r2,-32(fp)
   2ed58:	10800317 	ldw	r2,12(r2)
   2ed5c:	e1ffff17 	ldw	r7,-4(fp)
   2ed60:	e1bffe17 	ldw	r6,-8(fp)
   2ed64:	e17ffd17 	ldw	r5,-12(fp)
   2ed68:	e13ffc17 	ldw	r4,-16(fp)
   2ed6c:	103ee83a 	callr	r2
   2ed70:	00000106 	br	2ed78 <open+0x100>
   2ed74:	0005883a 	mov	r2,zero
   2ed78:	e0bffa15 	stw	r2,-24(fp)
   2ed7c:	00000206 	br	2ed88 <open+0x110>
      }
    }
  }
  else
  {
    status = -ENODEV;
   2ed80:	00bffb44 	movi	r2,-19
   2ed84:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
   2ed88:	e0bffa17 	ldw	r2,-24(fp)
   2ed8c:	1000090e 	bge	r2,zero,2edb4 <open+0x13c>
  {
    alt_release_fd (index);  
   2ed90:	e13ff917 	ldw	r4,-28(fp)
   2ed94:	002d5640 	call	2d564 <alt_release_fd>
    ALT_ERRNO = -status;
   2ed98:	002eb780 	call	2eb78 <alt_get_errno>
   2ed9c:	1007883a 	mov	r3,r2
   2eda0:	e0bffa17 	ldw	r2,-24(fp)
   2eda4:	0085c83a 	sub	r2,zero,r2
   2eda8:	18800015 	stw	r2,0(r3)
    return -1;
   2edac:	00bfffc4 	movi	r2,-1
   2edb0:	00000106 	br	2edb8 <open+0x140>
  }
  
  /* return the reference upon success */

  return index;
   2edb4:	e0bff917 	ldw	r2,-28(fp)
}
   2edb8:	e037883a 	mov	sp,fp
   2edbc:	dfc00117 	ldw	ra,4(sp)
   2edc0:	df000017 	ldw	fp,0(sp)
   2edc4:	dec00204 	addi	sp,sp,8
   2edc8:	f800283a 	ret

0002edcc <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
   2edcc:	defffa04 	addi	sp,sp,-24
   2edd0:	df000515 	stw	fp,20(sp)
   2edd4:	df000504 	addi	fp,sp,20
   2edd8:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   2eddc:	0005303a 	rdctl	r2,status
   2ede0:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   2ede4:	e0fffc17 	ldw	r3,-16(fp)
   2ede8:	00bfff84 	movi	r2,-2
   2edec:	1884703a 	and	r2,r3,r2
   2edf0:	1001703a 	wrctl	status,r2
  
  return context;
   2edf4:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
   2edf8:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
   2edfc:	e0bfff17 	ldw	r2,-4(fp)
   2ee00:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   2ee04:	e0bffd17 	ldw	r2,-12(fp)
   2ee08:	10800017 	ldw	r2,0(r2)
   2ee0c:	e0fffd17 	ldw	r3,-12(fp)
   2ee10:	18c00117 	ldw	r3,4(r3)
   2ee14:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
   2ee18:	e0bffd17 	ldw	r2,-12(fp)
   2ee1c:	10800117 	ldw	r2,4(r2)
   2ee20:	e0fffd17 	ldw	r3,-12(fp)
   2ee24:	18c00017 	ldw	r3,0(r3)
   2ee28:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   2ee2c:	e0bffd17 	ldw	r2,-12(fp)
   2ee30:	e0fffd17 	ldw	r3,-12(fp)
   2ee34:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
   2ee38:	e0bffd17 	ldw	r2,-12(fp)
   2ee3c:	e0fffd17 	ldw	r3,-12(fp)
   2ee40:	10c00015 	stw	r3,0(r2)
   2ee44:	e0bffb17 	ldw	r2,-20(fp)
   2ee48:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   2ee4c:	e0bffe17 	ldw	r2,-8(fp)
   2ee50:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
   2ee54:	0001883a 	nop
   2ee58:	e037883a 	mov	sp,fp
   2ee5c:	df000017 	ldw	fp,0(sp)
   2ee60:	dec00104 	addi	sp,sp,4
   2ee64:	f800283a 	ret

0002ee68 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   2ee68:	defffb04 	addi	sp,sp,-20
   2ee6c:	dfc00415 	stw	ra,16(sp)
   2ee70:	df000315 	stw	fp,12(sp)
   2ee74:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   2ee78:	d0a00e17 	ldw	r2,-32712(gp)
   2ee7c:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   2ee80:	d0a01e17 	ldw	r2,-32648(gp)
   2ee84:	10800044 	addi	r2,r2,1
   2ee88:	d0a01e15 	stw	r2,-32648(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2ee8c:	00002e06 	br	2ef48 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
   2ee90:	e0bffd17 	ldw	r2,-12(fp)
   2ee94:	10800017 	ldw	r2,0(r2)
   2ee98:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   2ee9c:	e0bffd17 	ldw	r2,-12(fp)
   2eea0:	10800403 	ldbu	r2,16(r2)
   2eea4:	10803fcc 	andi	r2,r2,255
   2eea8:	10000426 	beq	r2,zero,2eebc <alt_tick+0x54>
   2eeac:	d0a01e17 	ldw	r2,-32648(gp)
   2eeb0:	1000021e 	bne	r2,zero,2eebc <alt_tick+0x54>
    {
      alarm->rollover = 0;
   2eeb4:	e0bffd17 	ldw	r2,-12(fp)
   2eeb8:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   2eebc:	e0bffd17 	ldw	r2,-12(fp)
   2eec0:	10800217 	ldw	r2,8(r2)
   2eec4:	d0e01e17 	ldw	r3,-32648(gp)
   2eec8:	18801d36 	bltu	r3,r2,2ef40 <alt_tick+0xd8>
   2eecc:	e0bffd17 	ldw	r2,-12(fp)
   2eed0:	10800403 	ldbu	r2,16(r2)
   2eed4:	10803fcc 	andi	r2,r2,255
   2eed8:	1000191e 	bne	r2,zero,2ef40 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
   2eedc:	e0bffd17 	ldw	r2,-12(fp)
   2eee0:	10800317 	ldw	r2,12(r2)
   2eee4:	e0fffd17 	ldw	r3,-12(fp)
   2eee8:	18c00517 	ldw	r3,20(r3)
   2eeec:	1809883a 	mov	r4,r3
   2eef0:	103ee83a 	callr	r2
   2eef4:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   2eef8:	e0bfff17 	ldw	r2,-4(fp)
   2eefc:	1000031e 	bne	r2,zero,2ef0c <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
   2ef00:	e13ffd17 	ldw	r4,-12(fp)
   2ef04:	002edcc0 	call	2edcc <alt_alarm_stop>
   2ef08:	00000d06 	br	2ef40 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
   2ef0c:	e0bffd17 	ldw	r2,-12(fp)
   2ef10:	10c00217 	ldw	r3,8(r2)
   2ef14:	e0bfff17 	ldw	r2,-4(fp)
   2ef18:	1887883a 	add	r3,r3,r2
   2ef1c:	e0bffd17 	ldw	r2,-12(fp)
   2ef20:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   2ef24:	e0bffd17 	ldw	r2,-12(fp)
   2ef28:	10c00217 	ldw	r3,8(r2)
   2ef2c:	d0a01e17 	ldw	r2,-32648(gp)
   2ef30:	1880032e 	bgeu	r3,r2,2ef40 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
   2ef34:	e0bffd17 	ldw	r2,-12(fp)
   2ef38:	00c00044 	movi	r3,1
   2ef3c:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
   2ef40:	e0bffe17 	ldw	r2,-8(fp)
   2ef44:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   2ef48:	e0fffd17 	ldw	r3,-12(fp)
   2ef4c:	d0a00e04 	addi	r2,gp,-32712
   2ef50:	18bfcf1e 	bne	r3,r2,2ee90 <alt_tick+0x28>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
   2ef54:	0001883a 	nop
}
   2ef58:	0001883a 	nop
   2ef5c:	e037883a 	mov	sp,fp
   2ef60:	dfc00117 	ldw	ra,4(sp)
   2ef64:	df000017 	ldw	fp,0(sp)
   2ef68:	dec00204 	addi	sp,sp,8
   2ef6c:	f800283a 	ret

0002ef70 <altera_nios2_gen2_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
   2ef70:	deffff04 	addi	sp,sp,-4
   2ef74:	df000015 	stw	fp,0(sp)
   2ef78:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
   2ef7c:	000170fa 	wrctl	ienable,zero
}
   2ef80:	0001883a 	nop
   2ef84:	e037883a 	mov	sp,fp
   2ef88:	df000017 	ldw	fp,0(sp)
   2ef8c:	dec00104 	addi	sp,sp,4
   2ef90:	f800283a 	ret

0002ef94 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   2ef94:	defffa04 	addi	sp,sp,-24
   2ef98:	dfc00515 	stw	ra,20(sp)
   2ef9c:	df000415 	stw	fp,16(sp)
   2efa0:	df000404 	addi	fp,sp,16
   2efa4:	e13ffe15 	stw	r4,-8(fp)
   2efa8:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
   2efac:	e0bfff17 	ldw	r2,-4(fp)
   2efb0:	10800017 	ldw	r2,0(r2)
   2efb4:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
   2efb8:	e13ffe17 	ldw	r4,-8(fp)
   2efbc:	0026e8c0 	call	26e8c <strlen>
   2efc0:	10800044 	addi	r2,r2,1
   2efc4:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2efc8:	00000d06 	br	2f000 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   2efcc:	e0bffc17 	ldw	r2,-16(fp)
   2efd0:	10800217 	ldw	r2,8(r2)
   2efd4:	e0fffd17 	ldw	r3,-12(fp)
   2efd8:	180d883a 	mov	r6,r3
   2efdc:	e17ffe17 	ldw	r5,-8(fp)
   2efe0:	1009883a 	mov	r4,r2
   2efe4:	002f3480 	call	2f348 <memcmp>
   2efe8:	1000021e 	bne	r2,zero,2eff4 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
   2efec:	e0bffc17 	ldw	r2,-16(fp)
   2eff0:	00000706 	br	2f010 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
   2eff4:	e0bffc17 	ldw	r2,-16(fp)
   2eff8:	10800017 	ldw	r2,0(r2)
   2effc:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   2f000:	e0fffc17 	ldw	r3,-16(fp)
   2f004:	e0bfff17 	ldw	r2,-4(fp)
   2f008:	18bff01e 	bne	r3,r2,2efcc <alt_find_dev+0x38>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
   2f00c:	0005883a 	mov	r2,zero
}
   2f010:	e037883a 	mov	sp,fp
   2f014:	dfc00117 	ldw	ra,4(sp)
   2f018:	df000017 	ldw	fp,0(sp)
   2f01c:	dec00204 	addi	sp,sp,8
   2f020:	f800283a 	ret

0002f024 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
   2f024:	defffb04 	addi	sp,sp,-20
   2f028:	dfc00415 	stw	ra,16(sp)
   2f02c:	df000315 	stw	fp,12(sp)
   2f030:	df000304 	addi	fp,sp,12
   2f034:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
   2f038:	d0a00617 	ldw	r2,-32744(gp)
   2f03c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f040:	00003106 	br	2f108 <alt_find_file+0xe4>
  {
    len = strlen(next->name);
   2f044:	e0bffd17 	ldw	r2,-12(fp)
   2f048:	10800217 	ldw	r2,8(r2)
   2f04c:	1009883a 	mov	r4,r2
   2f050:	0026e8c0 	call	26e8c <strlen>
   2f054:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
   2f058:	e0bffd17 	ldw	r2,-12(fp)
   2f05c:	10c00217 	ldw	r3,8(r2)
   2f060:	e0bffe17 	ldw	r2,-8(fp)
   2f064:	10bfffc4 	addi	r2,r2,-1
   2f068:	1885883a 	add	r2,r3,r2
   2f06c:	10800003 	ldbu	r2,0(r2)
   2f070:	10803fcc 	andi	r2,r2,255
   2f074:	1080201c 	xori	r2,r2,128
   2f078:	10bfe004 	addi	r2,r2,-128
   2f07c:	10800bd8 	cmpnei	r2,r2,47
   2f080:	1000031e 	bne	r2,zero,2f090 <alt_find_file+0x6c>
    {
      len -= 1;
   2f084:	e0bffe17 	ldw	r2,-8(fp)
   2f088:	10bfffc4 	addi	r2,r2,-1
   2f08c:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f090:	e0bffe17 	ldw	r2,-8(fp)
   2f094:	e0ffff17 	ldw	r3,-4(fp)
   2f098:	1885883a 	add	r2,r3,r2
   2f09c:	10800003 	ldbu	r2,0(r2)
   2f0a0:	10803fcc 	andi	r2,r2,255
   2f0a4:	1080201c 	xori	r2,r2,128
   2f0a8:	10bfe004 	addi	r2,r2,-128
   2f0ac:	10800be0 	cmpeqi	r2,r2,47
   2f0b0:	1000081e 	bne	r2,zero,2f0d4 <alt_find_file+0xb0>
   2f0b4:	e0bffe17 	ldw	r2,-8(fp)
   2f0b8:	e0ffff17 	ldw	r3,-4(fp)
   2f0bc:	1885883a 	add	r2,r3,r2
   2f0c0:	10800003 	ldbu	r2,0(r2)
   2f0c4:	10803fcc 	andi	r2,r2,255
   2f0c8:	1080201c 	xori	r2,r2,128
   2f0cc:	10bfe004 	addi	r2,r2,-128
   2f0d0:	10000a1e 	bne	r2,zero,2f0fc <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
   2f0d4:	e0bffd17 	ldw	r2,-12(fp)
   2f0d8:	10800217 	ldw	r2,8(r2)
   2f0dc:	e0fffe17 	ldw	r3,-8(fp)
   2f0e0:	180d883a 	mov	r6,r3
   2f0e4:	e17fff17 	ldw	r5,-4(fp)
   2f0e8:	1009883a 	mov	r4,r2
   2f0ec:	002f3480 	call	2f348 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
   2f0f0:	1000021e 	bne	r2,zero,2f0fc <alt_find_file+0xd8>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
   2f0f4:	e0bffd17 	ldw	r2,-12(fp)
   2f0f8:	00000706 	br	2f118 <alt_find_file+0xf4>
    }
    next = (alt_dev*) next->llist.next;
   2f0fc:	e0bffd17 	ldw	r2,-12(fp)
   2f100:	10800017 	ldw	r2,0(r2)
   2f104:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
   2f108:	e0fffd17 	ldw	r3,-12(fp)
   2f10c:	d0a00604 	addi	r2,gp,-32744
   2f110:	18bfcc1e 	bne	r3,r2,2f044 <alt_find_file+0x20>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
   2f114:	0005883a 	mov	r2,zero
}
   2f118:	e037883a 	mov	sp,fp
   2f11c:	dfc00117 	ldw	ra,4(sp)
   2f120:	df000017 	ldw	fp,0(sp)
   2f124:	dec00204 	addi	sp,sp,8
   2f128:	f800283a 	ret

0002f12c <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
   2f12c:	defffc04 	addi	sp,sp,-16
   2f130:	df000315 	stw	fp,12(sp)
   2f134:	df000304 	addi	fp,sp,12
   2f138:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
   2f13c:	00bffa04 	movi	r2,-24
   2f140:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f144:	e03ffd15 	stw	zero,-12(fp)
   2f148:	00001906 	br	2f1b0 <alt_get_fd+0x84>
  {
    if (!alt_fd_list[i].dev)
   2f14c:	00800034 	movhi	r2,0
   2f150:	1082f204 	addi	r2,r2,3016
   2f154:	e0fffd17 	ldw	r3,-12(fp)
   2f158:	18c00324 	muli	r3,r3,12
   2f15c:	10c5883a 	add	r2,r2,r3
   2f160:	10800017 	ldw	r2,0(r2)
   2f164:	10000f1e 	bne	r2,zero,2f1a4 <alt_get_fd+0x78>
    {
      alt_fd_list[i].dev = dev;
   2f168:	00800034 	movhi	r2,0
   2f16c:	1082f204 	addi	r2,r2,3016
   2f170:	e0fffd17 	ldw	r3,-12(fp)
   2f174:	18c00324 	muli	r3,r3,12
   2f178:	10c5883a 	add	r2,r2,r3
   2f17c:	e0ffff17 	ldw	r3,-4(fp)
   2f180:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
   2f184:	d0e00a17 	ldw	r3,-32728(gp)
   2f188:	e0bffd17 	ldw	r2,-12(fp)
   2f18c:	1880020e 	bge	r3,r2,2f198 <alt_get_fd+0x6c>
      {
        alt_max_fd = i;
   2f190:	e0bffd17 	ldw	r2,-12(fp)
   2f194:	d0a00a15 	stw	r2,-32728(gp)
      }
      rc = i;
   2f198:	e0bffd17 	ldw	r2,-12(fp)
   2f19c:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
   2f1a0:	00000606 	br	2f1bc <alt_get_fd+0x90>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
   2f1a4:	e0bffd17 	ldw	r2,-12(fp)
   2f1a8:	10800044 	addi	r2,r2,1
   2f1ac:	e0bffd15 	stw	r2,-12(fp)
   2f1b0:	e0bffd17 	ldw	r2,-12(fp)
   2f1b4:	10800810 	cmplti	r2,r2,32
   2f1b8:	103fe41e 	bne	r2,zero,2f14c <alt_get_fd+0x20>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
   2f1bc:	e0bffe17 	ldw	r2,-8(fp)
}
   2f1c0:	e037883a 	mov	sp,fp
   2f1c4:	df000017 	ldw	fp,0(sp)
   2f1c8:	dec00104 	addi	sp,sp,4
   2f1cc:	f800283a 	ret

0002f1d0 <alt_icache_flush>:
 * alt_icache_flush() is called to flush the instruction cache for a memory
 * region of length "len" bytes, starting at address "start".
 */

void alt_icache_flush (void* start, alt_u32 len)
{
   2f1d0:	defffb04 	addi	sp,sp,-20
   2f1d4:	df000415 	stw	fp,16(sp)
   2f1d8:	df000404 	addi	fp,sp,16
   2f1dc:	e13ffe15 	stw	r4,-8(fp)
   2f1e0:	e17fff15 	stw	r5,-4(fp)

  /*
   * This is the most we would ever need to flush.
   */
 
  if (len > NIOS2_ICACHE_SIZE)
   2f1e4:	e0bfff17 	ldw	r2,-4(fp)
   2f1e8:	10840070 	cmpltui	r2,r2,4097
   2f1ec:	1000021e 	bne	r2,zero,2f1f8 <alt_icache_flush+0x28>
  {
    len = NIOS2_ICACHE_SIZE;
   2f1f0:	00840004 	movi	r2,4096
   2f1f4:	e0bfff15 	stw	r2,-4(fp)
  }

  end = ((char*) start) + len;
   2f1f8:	e0fffe17 	ldw	r3,-8(fp)
   2f1fc:	e0bfff17 	ldw	r2,-4(fp)
   2f200:	1885883a 	add	r2,r3,r2
   2f204:	e0bffd15 	stw	r2,-12(fp)

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2f208:	e0bffe17 	ldw	r2,-8(fp)
   2f20c:	e0bffc15 	stw	r2,-16(fp)
   2f210:	00000506 	br	2f228 <alt_icache_flush+0x58>
  { 
    __asm__ volatile ("flushi %0" :: "r" (i)); 
   2f214:	e0bffc17 	ldw	r2,-16(fp)
   2f218:	1000603a 	flushi	r2
    len = NIOS2_ICACHE_SIZE;
  }

  end = ((char*) start) + len;

  for (i = start; i < end; i+= NIOS2_ICACHE_LINE_SIZE)
   2f21c:	e0bffc17 	ldw	r2,-16(fp)
   2f220:	10800804 	addi	r2,r2,32
   2f224:	e0bffc15 	stw	r2,-16(fp)
   2f228:	e0fffc17 	ldw	r3,-16(fp)
   2f22c:	e0bffd17 	ldw	r2,-12(fp)
   2f230:	18bff836 	bltu	r3,r2,2f214 <alt_icache_flush+0x44>
   * For an unaligned flush request, we've got one more line left.
   * Note that this is dependent on NIOS2_ICACHE_LINE_SIZE to be a 
   * multiple of 2 (which it always is).
   */

  if (((alt_u32) start) & (NIOS2_ICACHE_LINE_SIZE - 1))
   2f234:	e0bffe17 	ldw	r2,-8(fp)
   2f238:	108007cc 	andi	r2,r2,31
   2f23c:	10000226 	beq	r2,zero,2f248 <alt_icache_flush+0x78>
  {
    __asm__ volatile ("flushi %0" :: "r" (i));
   2f240:	e0bffc17 	ldw	r2,-16(fp)
   2f244:	1000603a 	flushi	r2
  /* 
   * Having flushed the cache, flush any stale instructions in the 
   * pipeline 
   */

  __asm__ volatile ("flushp");
   2f248:	0000203a 	flushp

#endif /* NIOS2_ICACHE_SIZE > 0 */
}
   2f24c:	0001883a 	nop
   2f250:	e037883a 	mov	sp,fp
   2f254:	df000017 	ldw	fp,0(sp)
   2f258:	dec00104 	addi	sp,sp,4
   2f25c:	f800283a 	ret

0002f260 <alt_exception_cause_generated_bad_addr>:
 * Return: 1: BADADDR (bad_addr argument to handler) is valid
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
   2f260:	defffe04 	addi	sp,sp,-8
   2f264:	df000115 	stw	fp,4(sp)
   2f268:	df000104 	addi	fp,sp,4
   2f26c:	e13fff15 	stw	r4,-4(fp)
  switch (cause) {
   2f270:	e0bfff17 	ldw	r2,-4(fp)
   2f274:	10bffe84 	addi	r2,r2,-6
   2f278:	10c00428 	cmpgeui	r3,r2,16
   2f27c:	18001a1e 	bne	r3,zero,2f2e8 <alt_exception_cause_generated_bad_addr+0x88>
   2f280:	100690ba 	slli	r3,r2,2
   2f284:	008000f4 	movhi	r2,3
   2f288:	10bca604 	addi	r2,r2,-3432
   2f28c:	1885883a 	add	r2,r3,r2
   2f290:	10800017 	ldw	r2,0(r2)
   2f294:	1000683a 	jmp	r2
   2f298:	0002f2d8 	cmpnei	zero,zero,3019
   2f29c:	0002f2d8 	cmpnei	zero,zero,3019
   2f2a0:	0002f2e8 	cmpgeui	zero,zero,3019
   2f2a4:	0002f2e8 	cmpgeui	zero,zero,3019
   2f2a8:	0002f2e8 	cmpgeui	zero,zero,3019
   2f2ac:	0002f2d8 	cmpnei	zero,zero,3019
   2f2b0:	0002f2e0 	cmpeqi	zero,zero,3019
   2f2b4:	0002f2e8 	cmpgeui	zero,zero,3019
   2f2b8:	0002f2d8 	cmpnei	zero,zero,3019
   2f2bc:	0002f2d8 	cmpnei	zero,zero,3019
   2f2c0:	0002f2e8 	cmpgeui	zero,zero,3019
   2f2c4:	0002f2d8 	cmpnei	zero,zero,3019
   2f2c8:	0002f2e0 	cmpeqi	zero,zero,3019
   2f2cc:	0002f2e8 	cmpgeui	zero,zero,3019
   2f2d0:	0002f2e8 	cmpgeui	zero,zero,3019
   2f2d4:	0002f2d8 	cmpnei	zero,zero,3019
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   2f2d8:	00800044 	movi	r2,1
   2f2dc:	00000306 	br	2f2ec <alt_exception_cause_generated_bad_addr+0x8c>

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   2f2e0:	0005883a 	mov	r2,zero
   2f2e4:	00000106 	br	2f2ec <alt_exception_cause_generated_bad_addr+0x8c>

  default:
    return 0;
   2f2e8:	0005883a 	mov	r2,zero
  }
}
   2f2ec:	e037883a 	mov	sp,fp
   2f2f0:	df000017 	ldw	fp,0(sp)
   2f2f4:	dec00104 	addi	sp,sp,4
   2f2f8:	f800283a 	ret

0002f2fc <atexit>:
   2f2fc:	200b883a 	mov	r5,r4
   2f300:	000f883a 	mov	r7,zero
   2f304:	000d883a 	mov	r6,zero
   2f308:	0009883a 	mov	r4,zero
   2f30c:	002f3c41 	jmpi	2f3c4 <__register_exitproc>

0002f310 <exit>:
   2f310:	defffe04 	addi	sp,sp,-8
   2f314:	000b883a 	mov	r5,zero
   2f318:	dc000015 	stw	r16,0(sp)
   2f31c:	dfc00115 	stw	ra,4(sp)
   2f320:	2021883a 	mov	r16,r4
   2f324:	002f4dc0 	call	2f4dc <__call_exitprocs>
   2f328:	00800034 	movhi	r2,0
   2f32c:	10876a04 	addi	r2,r2,7592
   2f330:	11000017 	ldw	r4,0(r2)
   2f334:	20800f17 	ldw	r2,60(r4)
   2f338:	10000126 	beq	r2,zero,2f340 <exit+0x30>
   2f33c:	103ee83a 	callr	r2
   2f340:	8009883a 	mov	r4,r16
   2f344:	002f65c0 	call	2f65c <_exit>

0002f348 <memcmp>:
   2f348:	01c000c4 	movi	r7,3
   2f34c:	3980192e 	bgeu	r7,r6,2f3b4 <memcmp+0x6c>
   2f350:	2144b03a 	or	r2,r4,r5
   2f354:	11c4703a 	and	r2,r2,r7
   2f358:	10000f26 	beq	r2,zero,2f398 <memcmp+0x50>
   2f35c:	20800003 	ldbu	r2,0(r4)
   2f360:	28c00003 	ldbu	r3,0(r5)
   2f364:	10c0151e 	bne	r2,r3,2f3bc <memcmp+0x74>
   2f368:	31bfff84 	addi	r6,r6,-2
   2f36c:	01ffffc4 	movi	r7,-1
   2f370:	00000406 	br	2f384 <memcmp+0x3c>
   2f374:	20800003 	ldbu	r2,0(r4)
   2f378:	28c00003 	ldbu	r3,0(r5)
   2f37c:	31bfffc4 	addi	r6,r6,-1
   2f380:	10c00e1e 	bne	r2,r3,2f3bc <memcmp+0x74>
   2f384:	21000044 	addi	r4,r4,1
   2f388:	29400044 	addi	r5,r5,1
   2f38c:	31fff91e 	bne	r6,r7,2f374 <memcmp+0x2c>
   2f390:	0005883a 	mov	r2,zero
   2f394:	f800283a 	ret
   2f398:	20c00017 	ldw	r3,0(r4)
   2f39c:	28800017 	ldw	r2,0(r5)
   2f3a0:	18bfee1e 	bne	r3,r2,2f35c <memcmp+0x14>
   2f3a4:	31bfff04 	addi	r6,r6,-4
   2f3a8:	21000104 	addi	r4,r4,4
   2f3ac:	29400104 	addi	r5,r5,4
   2f3b0:	39bff936 	bltu	r7,r6,2f398 <memcmp+0x50>
   2f3b4:	303fe91e 	bne	r6,zero,2f35c <memcmp+0x14>
   2f3b8:	003ff506 	br	2f390 <memcmp+0x48>
   2f3bc:	10c5c83a 	sub	r2,r2,r3
   2f3c0:	f800283a 	ret

0002f3c4 <__register_exitproc>:
   2f3c4:	defffa04 	addi	sp,sp,-24
   2f3c8:	dc000315 	stw	r16,12(sp)
   2f3cc:	04000034 	movhi	r16,0
   2f3d0:	84076a04 	addi	r16,r16,7592
   2f3d4:	80c00017 	ldw	r3,0(r16)
   2f3d8:	dc400415 	stw	r17,16(sp)
   2f3dc:	dfc00515 	stw	ra,20(sp)
   2f3e0:	18805217 	ldw	r2,328(r3)
   2f3e4:	2023883a 	mov	r17,r4
   2f3e8:	10003726 	beq	r2,zero,2f4c8 <__register_exitproc+0x104>
   2f3ec:	10c00117 	ldw	r3,4(r2)
   2f3f0:	010007c4 	movi	r4,31
   2f3f4:	20c00e16 	blt	r4,r3,2f430 <__register_exitproc+0x6c>
   2f3f8:	1a000044 	addi	r8,r3,1
   2f3fc:	8800221e 	bne	r17,zero,2f488 <__register_exitproc+0xc4>
   2f400:	18c00084 	addi	r3,r3,2
   2f404:	18c7883a 	add	r3,r3,r3
   2f408:	18c7883a 	add	r3,r3,r3
   2f40c:	12000115 	stw	r8,4(r2)
   2f410:	10c7883a 	add	r3,r2,r3
   2f414:	19400015 	stw	r5,0(r3)
   2f418:	0005883a 	mov	r2,zero
   2f41c:	dfc00517 	ldw	ra,20(sp)
   2f420:	dc400417 	ldw	r17,16(sp)
   2f424:	dc000317 	ldw	r16,12(sp)
   2f428:	dec00604 	addi	sp,sp,24
   2f42c:	f800283a 	ret
   2f430:	00800034 	movhi	r2,0
   2f434:	10800004 	addi	r2,r2,0
   2f438:	10002626 	beq	r2,zero,2f4d4 <__register_exitproc+0x110>
   2f43c:	01006404 	movi	r4,400
   2f440:	d9400015 	stw	r5,0(sp)
   2f444:	d9800115 	stw	r6,4(sp)
   2f448:	d9c00215 	stw	r7,8(sp)
   2f44c:	00000000 	call	0 <__alt_mem_onchip_memory_ram>
   2f450:	d9400017 	ldw	r5,0(sp)
   2f454:	d9800117 	ldw	r6,4(sp)
   2f458:	d9c00217 	ldw	r7,8(sp)
   2f45c:	10001d26 	beq	r2,zero,2f4d4 <__register_exitproc+0x110>
   2f460:	81000017 	ldw	r4,0(r16)
   2f464:	10000115 	stw	zero,4(r2)
   2f468:	02000044 	movi	r8,1
   2f46c:	22405217 	ldw	r9,328(r4)
   2f470:	0007883a 	mov	r3,zero
   2f474:	12400015 	stw	r9,0(r2)
   2f478:	20805215 	stw	r2,328(r4)
   2f47c:	10006215 	stw	zero,392(r2)
   2f480:	10006315 	stw	zero,396(r2)
   2f484:	883fde26 	beq	r17,zero,2f400 <__register_exitproc+0x3c>
   2f488:	18c9883a 	add	r4,r3,r3
   2f48c:	2109883a 	add	r4,r4,r4
   2f490:	1109883a 	add	r4,r2,r4
   2f494:	21802215 	stw	r6,136(r4)
   2f498:	01800044 	movi	r6,1
   2f49c:	12406217 	ldw	r9,392(r2)
   2f4a0:	30cc983a 	sll	r6,r6,r3
   2f4a4:	4992b03a 	or	r9,r9,r6
   2f4a8:	12406215 	stw	r9,392(r2)
   2f4ac:	21c04215 	stw	r7,264(r4)
   2f4b0:	01000084 	movi	r4,2
   2f4b4:	893fd21e 	bne	r17,r4,2f400 <__register_exitproc+0x3c>
   2f4b8:	11006317 	ldw	r4,396(r2)
   2f4bc:	218cb03a 	or	r6,r4,r6
   2f4c0:	11806315 	stw	r6,396(r2)
   2f4c4:	003fce06 	br	2f400 <__register_exitproc+0x3c>
   2f4c8:	18805304 	addi	r2,r3,332
   2f4cc:	18805215 	stw	r2,328(r3)
   2f4d0:	003fc606 	br	2f3ec <__register_exitproc+0x28>
   2f4d4:	00bfffc4 	movi	r2,-1
   2f4d8:	003fd006 	br	2f41c <__register_exitproc+0x58>

0002f4dc <__call_exitprocs>:
   2f4dc:	defff504 	addi	sp,sp,-44
   2f4e0:	df000915 	stw	fp,36(sp)
   2f4e4:	dd400615 	stw	r21,24(sp)
   2f4e8:	dc800315 	stw	r18,12(sp)
   2f4ec:	dfc00a15 	stw	ra,40(sp)
   2f4f0:	ddc00815 	stw	r23,32(sp)
   2f4f4:	dd800715 	stw	r22,28(sp)
   2f4f8:	dd000515 	stw	r20,20(sp)
   2f4fc:	dcc00415 	stw	r19,16(sp)
   2f500:	dc400215 	stw	r17,8(sp)
   2f504:	dc000115 	stw	r16,4(sp)
   2f508:	d9000015 	stw	r4,0(sp)
   2f50c:	2839883a 	mov	fp,r5
   2f510:	04800044 	movi	r18,1
   2f514:	057fffc4 	movi	r21,-1
   2f518:	00800034 	movhi	r2,0
   2f51c:	10876a04 	addi	r2,r2,7592
   2f520:	12000017 	ldw	r8,0(r2)
   2f524:	45005217 	ldw	r20,328(r8)
   2f528:	44c05204 	addi	r19,r8,328
   2f52c:	a0001c26 	beq	r20,zero,2f5a0 <__call_exitprocs+0xc4>
   2f530:	a0800117 	ldw	r2,4(r20)
   2f534:	15ffffc4 	addi	r23,r2,-1
   2f538:	b8000d16 	blt	r23,zero,2f570 <__call_exitprocs+0x94>
   2f53c:	14000044 	addi	r16,r2,1
   2f540:	8421883a 	add	r16,r16,r16
   2f544:	8421883a 	add	r16,r16,r16
   2f548:	84402004 	addi	r17,r16,128
   2f54c:	a463883a 	add	r17,r20,r17
   2f550:	a421883a 	add	r16,r20,r16
   2f554:	e0001e26 	beq	fp,zero,2f5d0 <__call_exitprocs+0xf4>
   2f558:	80804017 	ldw	r2,256(r16)
   2f55c:	e0801c26 	beq	fp,r2,2f5d0 <__call_exitprocs+0xf4>
   2f560:	bdffffc4 	addi	r23,r23,-1
   2f564:	843fff04 	addi	r16,r16,-4
   2f568:	8c7fff04 	addi	r17,r17,-4
   2f56c:	bd7ff91e 	bne	r23,r21,2f554 <__call_exitprocs+0x78>
   2f570:	00800034 	movhi	r2,0
   2f574:	10800004 	addi	r2,r2,0
   2f578:	10000926 	beq	r2,zero,2f5a0 <__call_exitprocs+0xc4>
   2f57c:	a0800117 	ldw	r2,4(r20)
   2f580:	1000301e 	bne	r2,zero,2f644 <__call_exitprocs+0x168>
   2f584:	a0800017 	ldw	r2,0(r20)
   2f588:	10003226 	beq	r2,zero,2f654 <__call_exitprocs+0x178>
   2f58c:	a009883a 	mov	r4,r20
   2f590:	98800015 	stw	r2,0(r19)
   2f594:	00000000 	call	0 <__alt_mem_onchip_memory_ram>
   2f598:	9d000017 	ldw	r20,0(r19)
   2f59c:	a03fe41e 	bne	r20,zero,2f530 <__call_exitprocs+0x54>
   2f5a0:	dfc00a17 	ldw	ra,40(sp)
   2f5a4:	df000917 	ldw	fp,36(sp)
   2f5a8:	ddc00817 	ldw	r23,32(sp)
   2f5ac:	dd800717 	ldw	r22,28(sp)
   2f5b0:	dd400617 	ldw	r21,24(sp)
   2f5b4:	dd000517 	ldw	r20,20(sp)
   2f5b8:	dcc00417 	ldw	r19,16(sp)
   2f5bc:	dc800317 	ldw	r18,12(sp)
   2f5c0:	dc400217 	ldw	r17,8(sp)
   2f5c4:	dc000117 	ldw	r16,4(sp)
   2f5c8:	dec00b04 	addi	sp,sp,44
   2f5cc:	f800283a 	ret
   2f5d0:	a0800117 	ldw	r2,4(r20)
   2f5d4:	80c00017 	ldw	r3,0(r16)
   2f5d8:	10bfffc4 	addi	r2,r2,-1
   2f5dc:	15c01426 	beq	r2,r23,2f630 <__call_exitprocs+0x154>
   2f5e0:	80000015 	stw	zero,0(r16)
   2f5e4:	183fde26 	beq	r3,zero,2f560 <__call_exitprocs+0x84>
   2f5e8:	95c8983a 	sll	r4,r18,r23
   2f5ec:	a0806217 	ldw	r2,392(r20)
   2f5f0:	a5800117 	ldw	r22,4(r20)
   2f5f4:	2084703a 	and	r2,r4,r2
   2f5f8:	10000b26 	beq	r2,zero,2f628 <__call_exitprocs+0x14c>
   2f5fc:	a0806317 	ldw	r2,396(r20)
   2f600:	2088703a 	and	r4,r4,r2
   2f604:	20000c1e 	bne	r4,zero,2f638 <__call_exitprocs+0x15c>
   2f608:	89400017 	ldw	r5,0(r17)
   2f60c:	d9000017 	ldw	r4,0(sp)
   2f610:	183ee83a 	callr	r3
   2f614:	a0800117 	ldw	r2,4(r20)
   2f618:	15bfbf1e 	bne	r2,r22,2f518 <__call_exitprocs+0x3c>
   2f61c:	98800017 	ldw	r2,0(r19)
   2f620:	153fcf26 	beq	r2,r20,2f560 <__call_exitprocs+0x84>
   2f624:	003fbc06 	br	2f518 <__call_exitprocs+0x3c>
   2f628:	183ee83a 	callr	r3
   2f62c:	003ff906 	br	2f614 <__call_exitprocs+0x138>
   2f630:	a5c00115 	stw	r23,4(r20)
   2f634:	003feb06 	br	2f5e4 <__call_exitprocs+0x108>
   2f638:	89000017 	ldw	r4,0(r17)
   2f63c:	183ee83a 	callr	r3
   2f640:	003ff406 	br	2f614 <__call_exitprocs+0x138>
   2f644:	a0800017 	ldw	r2,0(r20)
   2f648:	a027883a 	mov	r19,r20
   2f64c:	1029883a 	mov	r20,r2
   2f650:	003fb606 	br	2f52c <__call_exitprocs+0x50>
   2f654:	0005883a 	mov	r2,zero
   2f658:	003ffb06 	br	2f648 <__call_exitprocs+0x16c>

0002f65c <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
   2f65c:	defffd04 	addi	sp,sp,-12
   2f660:	df000215 	stw	fp,8(sp)
   2f664:	df000204 	addi	fp,sp,8
   2f668:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
   2f66c:	0001883a 	nop
   2f670:	e0bfff17 	ldw	r2,-4(fp)
   2f674:	e0bffe15 	stw	r2,-8(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  register int r2 asm ("r2") = exit_code;
   2f678:	e0bffe17 	ldw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "r"(r2), "r"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
   2f67c:	10000226 	beq	r2,zero,2f688 <_exit+0x2c>
    ALT_SIM_FAIL();
   2f680:	002af070 	cmpltui	zero,zero,43969
   2f684:	00000106 	br	2f68c <_exit+0x30>
  } else {
    ALT_SIM_PASS();
   2f688:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
   2f68c:	003fff06 	br	2f68c <_exit+0x30>
